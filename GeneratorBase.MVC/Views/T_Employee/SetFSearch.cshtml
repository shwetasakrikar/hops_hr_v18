@model GeneratorBase.MVC.Models.T_Employee
@{
    ViewBag.Title = "Set Search Criteria";
	var parentUrl = new System.Collections.Specialized.NameValueCollection();
    if (Request.UrlReferrer != null && Request.QueryString["IsClear"] == null)
    {
        parentUrl = HttpUtility.ParseQueryString(Request.UrlReferrer.Query);
    }
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Employee");
	var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "Employee";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true);
    Html.EnableClientValidation();
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-search text-primary"></i> @EntityDisplayName <i class="glyphicon glyphicon-chevron-right small"></i> <span>Faceted Search</span>
        </h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div style="margin:-5px 5px 5px 0px;">
                @if ( User.CanView("T_Employee"))
                { 

				<button class="btn btn-default btn-sm tip-top" type="button" data-original-title="Full Add" data-placement="top" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Index", "T_Employee") + "');")>
					<span class="glyphicon glyphicon-list"></span> List
				</button>
				}
				@if ( User.CanAdd("T_Employee"))
                {
					<button class="btn btn-default btn-sm tip-top" type="button" data-original-title="Create New" data-placement="top" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Employee", new { UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")>
						<span class="fam-world-add"></span> Create New
					</button>
                   
                }
		<button class="btn btn-default btn-sm tip-top"  data-placement="top" type="button" data-original-title="Show Graph"  data-toggle="modal" data-target="#ShowGraphT_Employee" onclick=@Html.Raw("OpenDashBoard('dvShowGraphT_Employee');")>
			<span class="fam-chart-bar"></span> Dashboard
        </button>

	@if (ViewBag.FavoriteItem != null)
    {
        <div class="btn-group">
            <button data-toggle="dropdown"  type="button" class="btn btn-default btn-sm tip-top dropdown-toggle btn-default">
                <span class="fa fa fa-star"></span> Favorite Items
                <span class="caret">    </span>
            </button>
            <ul class="dropdown-menu pull-left">
                @foreach (GeneratorBase.MVC.Models.FavoriteItem fItem in ViewBag.FavoriteItem)
                {
					var linkaddress = GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri() + fItem.LinkAddress;
					if(GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri().EndsWith("/") && fItem.LinkAddress.StartsWith("/"))
					{
						linkaddress = GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri() + fItem.LinkAddress.TrimStart("/".ToCharArray());
					}
					if (!GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri().EndsWith("/") && !fItem.LinkAddress.StartsWith("/"))
					{
						linkaddress = GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri()+"/" + fItem.LinkAddress.TrimStart("/".ToCharArray());
					}
                    <li>
                        <a href='@linkaddress'>@fItem.Name</a>
                    </li>
                }
            </ul>
        </div>
    }

	<a href="#" class="btn btn-default closeall pull-right btn-sm"><i class="glyphicon glyphicon-chevron-up small"></i> close all</a> <a href="#" class="btn btn-default openall pull-right btn-sm" style="margin-right:5px;"><i class="glyphicon glyphicon-chevron-down small"></i> open all</a>

			</div>
			
			 <div class="fsearch">
			  
			   
					<div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>

                                    <h3 class="panel-title">
                                        All Field Search Criteria
                                    </h3>
                                </div>
                                <div class="panel-body">
                                    <div class='col-sm-12 col-md-12 col-xs-12'>
                                       @{
									var txtGenCriteria = String.IsNullOrEmpty(Convert.ToString(ViewBag.CurrentFilter)) ? "" : Convert.ToString(ViewBag.CurrentFilter);
									}
									<input type="text" id="FSearch" class="form-control" placeholder="Search Criteria" value="@txtGenCriteria" style="font-size:12px"/>


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

					 <div  id="accordion"> 
					 					 <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>
                                    <h3 class="panel-title">
								<a data-toggle="collapse" data-parent="#accordion" href="#collapseOne"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Range Property</a>
                                    </h3>
                                </div>
								<div id="collapseOne" class="panel-collapse in">
                                <div class="panel-body">
                           
			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title="Date Of Birth">
											@Html.LabelFor(model => model.T_DateOfBirth, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <input type="text" id="T_DateOfBirthFrom" name="T_DateOfBirthFrom"  class="form-control"  placeholder="From Date"
											 data-val='true' data-val-date='Must be a date.' />
																						<span class="field-validation-valid" data-valmsg-for="T_DateOfBirthFrom" data-valmsg-replace="true"></span>	
												                                            
                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_DateOfBirthFrom').datetimepicker({ pickTime:false });
                                        });
                                    </script>
                                <span class="input-group-addon datefiled">
									<input type="text" id="T_DateOfBirthTo" name="T_DateOfBirthTo"  class="form-control"  placeholder="To Date"
												 data-val='true' data-val-date='Must be a date.'  style="border-radius:0px 4px 4px 0px; border-left:0px"/>
																							<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_DateOfBirthTo" data-valmsg-replace="true"></div>
												                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_DateOfBirthTo').datetimepicker({ pickTime:false });
                                        });
                                    </script>


								</span>
							</div>
                        </div>
                      </div>
			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title="State Hire Date ">
											@Html.LabelFor(model => model.T_StateHireDate, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <input type="text" id="T_StateHireDateFrom" name="T_StateHireDateFrom"  class="form-control"  placeholder="From Date"
											 data-val='true' data-val-date='Must be a date.' />
																						<span class="field-validation-valid" data-valmsg-for="T_StateHireDateFrom" data-valmsg-replace="true"></span>	
												                                            
                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_StateHireDateFrom').datetimepicker({ pickTime:false });
                                        });
                                    </script>
                                <span class="input-group-addon datefiled">
									<input type="text" id="T_StateHireDateTo" name="T_StateHireDateTo"  class="form-control"  placeholder="To Date"
												 data-val='true' data-val-date='Must be a date.'  style="border-radius:0px 4px 4px 0px; border-left:0px"/>
																							<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_StateHireDateTo" data-valmsg-replace="true"></div>
												                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_StateHireDateTo').datetimepicker({ pickTime:false });
                                        });
                                    </script>


								</span>
							</div>
                        </div>
                      </div>
			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title="Adjusted Hire Date">
											@Html.LabelFor(model => model.T_AdjustedHireDate, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <input type="text" id="T_AdjustedHireDateFrom" name="T_AdjustedHireDateFrom"  class="form-control"  placeholder="From Date"
											 data-val='true' data-val-date='Must be a date.' />
																						<span class="field-validation-valid" data-valmsg-for="T_AdjustedHireDateFrom" data-valmsg-replace="true"></span>	
												                                            
                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_AdjustedHireDateFrom').datetimepicker({ pickTime:false });
                                        });
                                    </script>
                                <span class="input-group-addon datefiled">
									<input type="text" id="T_AdjustedHireDateTo" name="T_AdjustedHireDateTo"  class="form-control"  placeholder="To Date"
												 data-val='true' data-val-date='Must be a date.'  style="border-radius:0px 4px 4px 0px; border-left:0px"/>
																							<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_AdjustedHireDateTo" data-valmsg-replace="true"></div>
												                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_AdjustedHireDateTo').datetimepicker({ pickTime:false });
                                        });
                                    </script>


								</span>
							</div>
                        </div>
                      </div>
			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title=" Prior Service (in months)">
											@Html.LabelFor(model => model.T_PriorServiceinmonths, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
												<input type="text" id="T_PriorServiceinmonthsFrom" name="T_PriorServiceinmonthsFrom" class="form-control"  placeholder="From"
												 data-val="true" data-val-number="Must be a number." />
                                            <span class="field-validation-valid" data-valmsg-for="T_PriorServiceinmonthsFrom" data-valmsg-replace="true"></span>
											<span class="input-group-addon datefiled">
												<input type="text" id="T_PriorServiceinmonthsTo" name="T_PriorServiceinmonthsTo" class="form-control"  placeholder="To"	 data-val="true" data-val-number="Must be a number." style="border-radius:0px 4px 4px 0px; border-left:0px"/>
													<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_PriorServiceinmonthsTo" data-valmsg-replace="true"></div>
											</span>
							</div>
                        </div>
                      </div>

			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title=" Current Service (in months)">
											@Html.LabelFor(model => model.T_CurrentServiceinmonths, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
												<input type="text" id="T_CurrentServiceinmonthsFrom" name="T_CurrentServiceinmonthsFrom" class="form-control"  placeholder="From"
												 data-val="true" data-val-number="Must be a number." />
                                            <span class="field-validation-valid" data-valmsg-for="T_CurrentServiceinmonthsFrom" data-valmsg-replace="true"></span>
											<span class="input-group-addon datefiled">
												<input type="text" id="T_CurrentServiceinmonthsTo" name="T_CurrentServiceinmonthsTo" class="form-control"  placeholder="To"	 data-val="true" data-val-number="Must be a number." style="border-radius:0px 4px 4px 0px; border-left:0px"/>
													<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_CurrentServiceinmonthsTo" data-valmsg-replace="true"></div>
											</span>
							</div>
                        </div>
                      </div>

			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title=" Badge Number">
											@Html.LabelFor(model => model.T_BadgeNumber, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
												<input type="text" id="T_BadgeNumberFrom" name="T_BadgeNumberFrom" class="form-control"  placeholder="From"
												 data-val="true" data-val-number="Must be a number." />
                                            <span class="field-validation-valid" data-valmsg-for="T_BadgeNumberFrom" data-valmsg-replace="true"></span>
											<span class="input-group-addon datefiled">
												<input type="text" id="T_BadgeNumberTo" name="T_BadgeNumberTo" class="form-control"  placeholder="To"	 data-val="true" data-val-number="Must be a number." style="border-radius:0px 4px 4px 0px; border-left:0px"/>
													<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_BadgeNumberTo" data-valmsg-replace="true"></div>
											</span>
							</div>
                        </div>
                      </div>

			<div class='col-sm-4 col-md-4 col-xs-12'>
                                        <div class='form-group'
                                             title="Effective Date & Time">
											@Html.LabelFor(model => model.T_EffectiveDateTime, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <input type="text" id="T_EffectiveDateTimeFrom" name="T_EffectiveDateTimeFrom" format = "MM/DD/YYYY hh:mm" class="form-control"  placeholder="From Date"
											 data-val='true' data-val-date='Must be a date.' />
																						<span class="field-validation-valid" data-valmsg-for="T_EffectiveDateTimeFrom" data-valmsg-replace="true"></span>	
												                                            
                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_EffectiveDateTimeFrom').datetimepicker({ });
                                        });
                                    </script>
                                <span class="input-group-addon datefiled">
									<input type="text" id="T_EffectiveDateTimeTo" name="T_EffectiveDateTimeTo" format = "MM/DD/YYYY hh:mm" class="form-control"  placeholder="To Date"
												 data-val='true' data-val-date='Must be a date.'  style="border-radius:0px 4px 4px 0px; border-left:0px"/>
																							<div class="field-validation-valid" style="margin-top: 25px;font-size: 12px;" data-valmsg-for="T_EffectiveDateTimeTo" data-valmsg-replace="true"></div>
												                                    <script type="text/javascript">
                                        $(function () {
                                            $('#T_EffectiveDateTimeTo').datetimepicker({ });
                                        });
                                    </script>


					<input type="hidden" id="T_EffectiveDateTimeFromhdn" />
                    <input type="hidden" id="T_EffectiveDateTimeTohdn" />
								</span>
							</div>
                        </div>
                      </div>
		  </div>
		  </div>
		</div>
	  </div>
	</div>
    	<div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>
                                    <h3 class="panel-title">
									             <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Association Property</a>  
  
                                    </h3>
                                </div>
								<div id="collapseTwo" class="panel-collapse in">
                                <div class="panel-body">
       @if (User.CanView("T_Facility") && ViewBag.t_employeeatfacility!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Facility">
							@Html.LabelFor(model => model.T_EmployeeAtFacilityID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeeatfacility">
                                    		
	 @Html.DropDownList("t_employeeatfacility", null, new {   @multiple = "multiple", @HostingName = "T_Facility", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Facility",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_EmployeeStatusCode") && ViewBag.t_employeestatus!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Employee Status">
							@Html.LabelFor(model => model.T_EmployeeStatusID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeestatus">
                                    		
	 @Html.DropDownList("t_employeestatus", null, new {   @multiple = "multiple", @HostingName = "T_EmployeeStatusCode", @dataurl = Url.Action("GetAllMultiSelectValue", "T_EmployeeStatusCode",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_ServiceRecord") && ViewBag.t_currentemployeeemploymentprofile!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Service Record">
							@Html.LabelFor(model => model.T_CurrentEmployeeEmploymentProfileID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_currentemployeeemploymentprofile">
                                    		
	 @Html.DropDownList("t_currentemployeeemploymentprofile", null, new {   @multiple = "multiple", @HostingName = "T_ServiceRecord", @dataurl = Url.Action("GetAllMultiSelectValue", "T_ServiceRecord",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_JobAssignment") && ViewBag.t_currentemployeejobassignment!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Primary Job Assignment">
							@Html.LabelFor(model => model.T_CurrentEmployeeJobAssignmentID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_currentemployeejobassignment">
                                    		
	 @Html.DropDownList("t_currentemployeejobassignment", null, new {   @multiple = "multiple", @HostingName = "T_JobAssignment", @dataurl = Url.Action("GetAllMultiSelectValue", "T_JobAssignment",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_Gender") && ViewBag.t_employeegender!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Gender">
							@Html.LabelFor(model => model.T_EmployeeGenderID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeegender">
                                    		
	 @Html.DropDownList("t_employeegender", null, new {   @multiple = "multiple", @HostingName = "T_Gender", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Gender",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_Race") && ViewBag.t_employeerace!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Race">
							@Html.LabelFor(model => model.T_EmployeeRaceID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeerace">
                                    		
	 @Html.DropDownList("t_employeerace", null, new {   @multiple = "multiple", @HostingName = "T_Race", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Race",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_Nationality") && ViewBag.t_employeenationalityassociation!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Nationality">
							@Html.LabelFor(model => model.T_EmployeeNationalityAssociationID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeenationalityassociation">
                                    		
	 @Html.DropDownList("t_employeenationalityassociation", null, new {   @multiple = "multiple", @HostingName = "T_Nationality", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Nationality",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_VeteranStatus") && ViewBag.t_employeeveteranstatus!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Veteran Status">
							@Html.LabelFor(model => model.T_EmployeeVeteranStatusID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeeveteranstatus">
                                    		
	 @Html.DropDownList("t_employeeveteranstatus", null, new {   @multiple = "multiple", @HostingName = "T_VeteranStatus", @dataurl = Url.Action("GetAllMultiSelectValue", "T_VeteranStatus",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_CardEmplGrp") && ViewBag.t_employeecardemplgrpassociation!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="CardEmplGrp">
							@Html.LabelFor(model => model.T_EmployeeCardEmplGrpAssociationID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeecardemplgrpassociation">
                                    		
	 @Html.DropDownList("t_employeecardemplgrpassociation", null, new {   @multiple = "multiple", @HostingName = "T_CardEmplGrp", @dataurl = Url.Action("GetAllMultiSelectValue", "T_CardEmplGrp",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_CardLvPlan") && ViewBag.t_employeecardlvplanassociation!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="CardAltLvPlan">
							@Html.LabelFor(model => model.T_EmployeeCardLvPlanAssociationID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeecardlvplanassociation">
                                    		
	 @Html.DropDownList("t_employeecardlvplanassociation", null, new {   @multiple = "multiple", @HostingName = "T_CardLvPlan", @dataurl = Url.Action("GetAllMultiSelectValue", "T_CardLvPlan",null) })
                                </div>
                            </div>
                        </div>
		}
@if (User.CanView("T_Address") && ViewBag.t_employeeaddress!=null)
                    {
 <div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="Employee Address">
							@Html.LabelFor(model => model.T_EmployeeAddressID, new { @class="col-sm-5 col-md-5 col-xs-12" })
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employeeaddress">
                                    		
	 @Html.DropDownList("t_employeeaddress", null, new {   @multiple = "multiple", @HostingName = "T_Address", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Address",null) })
                                </div>
                            </div>
                        </div>
		}
	@if (User.CanView("T_Langauge") && ViewBag.t_languagecertifiedin!=null)
    {
			<div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="t_languagecertifiedin">
                                <label class="col-sm-5 col-md-5 col-xs-12"> Languages Certified In</label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employee">
                                   		
	 @Html.DropDownList("t_languagecertifiedin", null, new {   @multiple = "multiple", @HostingName = "T_Langauge", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Langauge",null) })

								
                                </div>
                            </div>
                        </div>
		}
	@if (User.CanView("T_Langauge") && ViewBag.t_conversationalemployeeforeignlanguage!=null)
    {
			<div class='col-sm-6 col-md-6 col-xs-12'>
                            <div class='form-group' title="t_conversationalemployeeforeignlanguage">
                                <label class="col-sm-5 col-md-5 col-xs-12"> Conversational Foreign Language</label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12" id="dvt_employee">
                                   		
	 @Html.DropDownList("t_conversationalemployeeforeignlanguage", null, new {   @multiple = "multiple", @HostingName = "T_Langauge", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Langauge",null) })

								
                                </div>
                            </div>
                        </div>
		}

		</div>
		</div>
		</div>
		</div>
	</div>
		 <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>
                                    <h3 class="panel-title">
                                          <a data-toggle="collapse" data-parent="#accordion" href="#collapsesorting"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Select Columns for sorting</a>
                 
                                    </h3>
                                </div>
								<div id="collapsesorting" class="panel-collapse in">
                                <div class="panel-body">
                                    <div class='col-sm-6 col-md-6 col-xs-12'>
                                        <div class='form-group'>
                                            <label id="lblOrderDepth" class="col-sm-5 col-md-5 col-xs-12">Order By</label>
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <div class="input-group" style="width:100%;">
                                                    @Html.DropDownList("SortOrder1", null, "-- Select --", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </div>
                                    <button class="btn btn-primary btn-sm" onclick="SetSortOrder();" type="button" value="Add">Add</button>
                                   
                                    <div class="clearfix"></div>
                                    <label id="lblsortorder" style=""></label>
                                    <button class="btn btn-default btn-xs" type="button" id="btnsortorder" style="display:none !important;" onclick="clearsortorder();">Reset</button>
                                   @Html.Hidden("SortOrder")
								   </div>
                                </div>
                            </div>
							</div>
							<div class="col-md-6 col-sm-6 col-xs-6">
							<div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>
                                    <h3 class="panel-title">
                                       <a data-toggle="collapse" data-parent="#accordion" href="#collapsegrouping"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Select Columns for grouping</a>
                                    </h3>
                                </div>
								<div id="collapsegrouping" class="panel-collapse in">
                                <div class="panel-body">
                                    <div class='col-sm-6 col-md-6 col-xs-12'>
                                        <div class='form-group'>
                                            <label id="lblGroupDepth" class="col-sm-5 col-md-5 col-xs-12">Group By</label>
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <div class="input-group" style="width:100%;">
                                                    @Html.DropDownList("GroupByColumn", null, "-- Select --", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <button class="btn btn-primary btn-sm" onclick="SetGroupByColumn();" type="button" value="Add">Add</button>

                                    <div class="clearfix"></div>
                                    <label id="lblgroupbycolumn" style=""></label>
                                    <button class="btn btn-default btn-xs" type="button" id="btngroupbycolumn" style="display:none !important;" onclick="cleargroupbycolumn();">Reset</button>
                                    @Html.Hidden("hdnGroupByColumn")
                                </div>
								</div>
                            </div>
							</div>
							<div class="col-md-12 col-sm-12 col-xs-12">
							 <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <i class="icon-calendar"></i>
                                    <h3 class="panel-title">
                                       <a data-toggle="collapse" data-parent="#accordion" href="#collapseGridLayout"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Grid Layout & Hide Columns</a>
                                    </h3>
                                </div>
								<div id="collapseGridLayout" class="panel-collapse in">
                                <div class="panel-body">
									<div class='col-sm-6 col-md-6 col-xs-12'>
                                        <div class='form-group'>
                                            <label class="col-sm-5 col-md-5 col-xs-12">Grid Layout</label>
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <div class="input-group" style="width:100%;">
                                                    <select class="form-control" id="DisplayLayout">
                                                        <option value="IndexPartial">Table (Default)</option>
                                                        <option value="IndexPartialGallery">Gallery</option>
                                                        <option value="IndexPartialList">List</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class='col-sm-6 col-md-6 col-xs-12'>
                                        <div class='form-group'>
                                            <label class="col-sm-5 col-md-5 col-xs-12">Hide Columns</label>
                                            <div class="input-group col-sm-7 col-md-7 col-xs-12">
                                                <div class="input-group" style="width:100%;">
                                                    @Html.DropDownList("HideColumns", null, new {@multiple = "multiple" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
								</div>
                            </div>
                        </div>
                    </div>
					<div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                   <h3 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseSearchCriteria"><i class="glyphicon glyphicon-chevron-down pull-left" style="padding-top:5px; padding-right:5px;"></i> Specific Field Search Criteria</a>
                        </h3>
                                </div>
								<div id="collapseSearchCriteria" class="panel-collapse in">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-3 col-md-3 col-xs-12">
                                            <div class='form-group'>
                                                <label>Select Property <span class="text-danger-reg">*</span></label>
                                                @Html.DropDownList("PropertyList", null, "-- Select Property --", new { @onchange = "FillCriteriaValue(this);GetSecondLevelAttributeForCriteria();", @class = "form-control" })
                                                @Html.DropDownList("AssociationPropertyList", null, "-- Select --", new { @onchange = "GetCriteriaSuggestedValues(this);FillCriteriaForAssociation();", @class = "form-control", @style = "margin-top:8px;display:none;", @HostingName = "", @dataurl = "" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 col-md-3 col-xs-12">
                                            <div class='form-group'>
                                                <label>Select Operator <span class="text-danger-reg">*</span></label>
                                                <select class="form-control" id="OperatorList" onchange="SetCriteriaValueType(this);">
                                                    <option value="">-- Select --</option>
                                                </select>
                                                @Html.TextBox("ConditionOperator", null, new { @class = "form-control hidden" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 col-md-3 col-xs-12">
                                            <div class='form-group'>
                                                <label>Select Value Type<span class="text-danger-reg">*</span></label>
                                                <select class="form-control" id="ValueTypeList" onchange="GetCriteriaSuggestedValues(this);">
                                                    <option value="Constant">Constant</option>
                                                    <option value="Pick From List">Pick From List</option>
                                                    <option value="Dynamic">Dynamic</option>
                                                </select>
                                                @Html.TextBox("ConditionValueType", null, new { @class = "form-control hidden" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 col-md-3 col-xs-12">
                                            <label>Property Value<span class="text-danger-reg">*</span></label>
                                            <div class='form-group'>
                                                @Html.TextBox("ConditionValue", null, new { @class = "col-sm-8 col-md-8 col-xs-8", @style = "border-radius:4px;" })
                                                <div style="display:none; padding-left:0px;" id="dvSuggestedPropertyValue" class="col-sm-8 col-md-8 col-xs-8">
                                                    @Html.DropDownList("SuggestedPropertyValue", null, new { @multiple = "multiple" })
                                                    @Html.TextBox("SuggestedPropertyValues", null, new { @class = "form-control hidden" })
                                                </div>
                                                <div id="dvRule7DynamicValueInCondition" class="col-sm-8 col-md-8 col-xs-8" style="display:none; padding:0px;">
                                                    @Html.DropDownList("SuggestedDynamicValueInCondition7", null, "-- Select --", new { @onchange = "GetSecondLevelAttributeInCriteria();", @class = "form-control", @style = "margin:0px;", @HostingName = "", @dataurl = "" })
                                                    @Html.DropDownList("SuggestedDynamicValueInCondition71", null, "-- Select --", new { @class = "form-control", @style = "margin-top:8px;", @HostingName = "", @dataurl = "" })
                                                </div>
                                                <div class="col-sm-4 col-md-4 col-xs-4" style="padding:0px 0px 0px 5px;">
                                                    <select class="form-control" id="LogicalConnectorList">
                                                        <option value="AND">AND</option>
                                                        <option value="OR">OR</option>
                                                    </select>
                                                    @Html.TextBox("LogicalConnector", null, new { @class = "form-control hidden" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-12 col-lg-12" style="margin-top:10px; padding:0px">
                                        <button type="button" id="btnAddAction4" onclick="AddCriteriaInGrid()" class="btn btn-primary pull-right">Add Condition</button>
                                    </div>
                                </div>
                                <div id="Des_Table" style="padding-top:5px;" class="table-responsive" style="overflow-x:auto;">
                                    <table id="tblConditionList" style="display:none;" class="table table-striped table-bordered table-hover table-condensed">
                                        <thead>
                                            <tr>
                                                <th class="col1">Property</th>
                                                <th class="col1">Operator</th>
                                                <th class="col1">Value</th>
                                                <th class="col1">Connector</th>
                                                <th class="col1">Remove</th>
                                            </tr>
                                        </thead>
                                        <tr></tr>
                                    </table>
                                </div>
                                @Html.TextBox("FilterCondition", null, new { @class = "hidden" })
                            </div>
                        </div>
						</div>
                    </div>
			@*End Div*@
			</div>
</div>
					
<a href="@Url.Action("Index")" class="btn btn-default btn-sm"> Cancel</a>
<button id="clearfSearchT_Employee" type="button" class="btn btn-primary btn-sm" onclick="@Html.Raw("clearFsearch('" + Url.Action("SetFSearch", "T_Employee") + "',event)")">Clear</button>
<button id="fSearchT_Employee" class="btn btn-primary btn-sm" type="submit" dataurl="@(Url.Action("FSearch", "T_Employee", null) )"
        onclick="@(Html.Raw("FacetedSearch(event,'T_Employee','t_employeeatfacility,t_employeestatus,t_currentemployeeemploymentprofile,t_currentemployeejobassignment,t_employeegender,t_employeerace,t_employeenationalityassociation,t_employeeveteranstatus,t_employeecardemplgrpassociation,t_employeecardlvplanassociation,t_employeeaddress,t_languagecertifiedin,t_conversationalemployeeforeignlanguage','T_DateOfBirthFrom,T_DateOfBirthTo,T_StateHireDateFrom,T_StateHireDateTo,T_AdjustedHireDateFrom,T_AdjustedHireDateTo,T_PriorServiceinmonthsFrom,T_PriorServiceinmonthsTo,T_CurrentServiceinmonthsFrom,T_CurrentServiceinmonthsTo,T_BadgeNumberFrom,T_BadgeNumberTo,T_EffectiveDateTimeFrom,T_EffectiveDateTimeTo','T_EffectiveDateTimeFromhdn,T_EffectiveDateTimeTohdn','"
   + Convert.ToString(Request.QueryString["viewtype"]) + "','" + Convert.ToString(Request.QueryString["sortBy"]) + "','"
     + Convert.ToString(Request.QueryString["isAsc"]) + "','" + "'); "))">
    Search
</button>
}


<script>
 function clearFsearch(url, e) {
        e.preventDefault();
        var urlstring = url + "?IsClear=true";
        window.location.replace(urlstring)
        return false;
    }	
	function closealert() {
        $('#dvalert').attr("class", "modal fade");
        $('#dvalert').attr("aria-hidden", "true");
        $('#dvalert').attr("style", "display:none;");
    }
	function cleargroupbycolumn() {
        $("#hdnGroupByColumn").val('');
        $("#lblgroupbycolumn").html('');
        $("#lblgroupbycolumn").removeAttr("style");
        $("#btngroupbycolumn").attr("style", "display:none !important;");
        $("#lblGroupDepth").html('Group By');
    }
    function SetGroupByColumn() {
        var value = $("#hdnGroupByColumn").val();
        value += $("#GroupByColumn").val() + ",";
        $("#hdnGroupByColumn").val(value);
        var text = $("#GroupByColumn option:selected").map(function () {
            return $(this).text();
        }).get().join();
        if (text == "-- Select --") {
            $('#dvalert').attr("class", "modal fade in");
            $('#dvalert').attr("aria-hidden", "false");
            $('#dvalert').attr("style", "display:block;");
            $('#alertbody').html("Please select at least one property for grouping.");
            return;
        }
        if ($("#lblgroupbycolumn").html().length > 0) {
            var arrgrouping = $("#lblgroupbycolumn").html().split(' Then Group By ');
            //var test1 = arrsortorder.indexOf(text + "-&gt");
            if ($.inArray(text, arrgrouping) >= 0) {
                $('#dvalert').attr("class", "modal fade in");
                $('#dvalert').attr("aria-hidden", "false");
                $('#dvalert').attr("style", "display:block;");
                $('#alertbody').html("This property is already selected, please select any other property.");
                return;
            }
            $("#lblgroupbycolumn").append(" Then Group By " + text);
        }
        else
            $("#lblgroupbycolumn").append(text);
        $("#btngroupbycolumn").show();
        $("#lblGroupDepth").html('Then Group By');
        $("#lblgroupbycolumn").attr("style", "border:1px solid #428bca;margin-left: 15px; background: #edf5fa; padding-left: 5px !important; border-radius: 4px;")
    }

    function clearsortorder()
    {
        $("#SortOrder").val('');
        $("#lblsortorder").html('');
        $("#lblsortorder").removeAttr("style");
        $("#btnsortorder").attr("style", "display:none !important;");
        $("#lblOrderDepth").html('Order By');
        
    }
    function SetSortOrder() {
        var value = $("#SortOrder").val();
        value += $("#SortOrder1").val() + ",";
        $("#SortOrder").val(value);
        var text = $("#SortOrder1 option:selected").map(function () {
            return $(this).text();
        }).get().join();
        if (text == "-- Select --")
        {
            $('#dvalert').attr("class", "modal fade in");
            $('#dvalert').attr("aria-hidden", "false");
            $('#dvalert').attr("style", "display:block;");
            $('#alertbody').html("Please select at least one property for sorting.");
            return;
        }
        if ($("#lblsortorder").html().length > 0) {
            var arrsortorder = $("#lblsortorder").html().split(';');
            //var test1 = arrsortorder.indexOf(text + "-&gt");
            if ($.inArray(text + "-&gt", arrsortorder) >= 0 || $.inArray(text, arrsortorder) >= 0) {
                 $('#dvalert').attr("class", "modal fade in");
                $('#dvalert').attr("aria-hidden", "false");
                $('#dvalert').attr("style", "display:block;");
                $('#alertbody').html("This property is already selected, please select any other property.");
                return;
            }
            $("#lblsortorder").append("->" + text);
        }
        else
            $("#lblsortorder").append(text);
        $("#btnsortorder").show();
        $("#lblOrderDepth").html('Then Order By');
        $("#lblsortorder").attr("style", "border:1px solid #428bca;margin-left: 15px; background: #edf5fa; padding-left: 5px !important; border-radius: 4px;")
    }
    $(document).ready(function () {
	 $('#HideColumns').multiselect({
            buttonWidth: '100%'
        });
	 $('#t_employeeatfacility').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeestatus').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_currentemployeeemploymentprofile').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_currentemployeejobassignment').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeegender').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeerace').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeenationalityassociation').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeeveteranstatus').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeecardemplgrpassociation').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeecardlvplanassociation').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
	 $('#t_employeeaddress').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
 $('#t_languagecertifiedin').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
 $('#t_conversationalemployeeforeignlanguage').multiselect({
            buttonWidth: '100%',
			nonSelectedText: 'ALL',
        });
    });
</script>
<script>
    function keypressHandler(e) {
        if (e.which == 13) {
            $(this).blur();
            $('#fSearchT_Employee').focus().click();
        }
    }
 $(document).keypress(keypressHandler);
 $(document).ready(function () {
  if ("@parentUrl".length > 0) {
		  if ("@parentUrl["SortOrder"]" != null && "@parentUrl["SortOrder"]".length > 0) {
                var value = '@parentUrl["SortOrder"]';
                var indexlist = value.split(',')
                $("#SortOrder").val('');
                for (var i = 0; i < indexlist.length; i++) {
                    if (indexlist[i].length > 0) {
                        $("#SortOrder1").val(indexlist[i]);
                        SetSortOrder();
                    }
                }
                $("#SortOrder").val(value);
                $("#btnsortorder").show();
                $("#lblOrderDepth").html('Then Order By');
                $("#lblsortorder").attr("style", "border:1px solid #428bca;margin-left: 15px; background: #edf5fa; padding-left: 5px !important; border-radius: 4px;")
            }

			if ("@parentUrl["GroupByColumn"]" != null && "@parentUrl["GroupByColumn"]".length > 0) {
                var value = '@parentUrl["GroupByColumn"]';
                var indexlist = value.split(',')
                $("#hdnGroupByColumn").val('');
                for (var i = 0; i < indexlist.length; i++) {
                    if (indexlist[i].length > 0) {
                        $("#GroupByColumn").val(indexlist[i]);
                        SetGroupByColumn();
                    }
                }
                $("#hdnGroupByColumn").val(value);
                $("#btngroupbycolumn").show();
                $("#lblGroupDepth").html('Then Group By');
                $("#lblgroupbycolumn").attr("style", "border:1px solid #428bca;margin-left: 15px; background: #edf5fa; padding-left: 5px !important; border-radius: 4px;")
            }

            if ("@parentUrl["HideColumns"]" != null && "@parentUrl["HideColumns"]".length > 0) {
                var resHideColumns = "@parentUrl["HideColumns"]".split(",");
                var eleHideColumns = document.getElementById("HideColumns");
                for (i = 0; i < resHideColumns.length; i++) {
                    for (var o = 0; o < eleHideColumns.options.length; o++) {
                        if (eleHideColumns.options[o].value == resHideColumns[i])
                            eleHideColumns.options[o].selected = true;
                    }
                }
                $("#HideColumns").multiselect("rebuild");
            }
			if ("@parentUrl["viewtype"]" != null && "@parentUrl["viewtype"]".length > 0) {
                $("#DisplayLayout").val('@parentUrl["viewtype"]');
            }

			if ("@parentUrl["FilterCondition"]" != null && "@parentUrl["FilterCondition"]".length > 0) {
                var value = "@parentUrl["FilterCondition"]".split("?");
                for (i = 0; i < value.length - 1; i++) {
                    if (value != "" && value != "undefined") {
                        var str = "<tr>";
                        var param = value[i].toString().split(",");
                        var val1Text = "";
                        if (param[0].indexOf("[") > -1) {
                            var assocNm = param[0].substring(1, param[0].lastIndexOf("."));
                            var assocPrp = param[0].substring(param[0].lastIndexOf(".") + 1, param[0].length - 1);
                            var assocEnt = $("#PropertyList option[value='" + assocNm + "']").text();
                            var assocEntPrp = "";
                            if (assocPrp != "") {
                                $.ajax({
                                    url: '@Url.Action("GetPropertyDP", "Customer")' + '?entityName=' + assocEnt + '&propertyName=' + assocPrp,
                                    type: "GET",
                                    cache: false,
                                    async: false,
                                    success: function (result) {
                                        if (result != "") {
                                            assocEntPrp = result;
                                        }
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {

                                    }
                                });
                            }
                            val1Text = param[0].replace(assocNm, assocEnt).replace(assocPrp, assocEntPrp);
                        }
                        else { val1Text = $("#PropertyList option[value='" + param[0] + "']").text(); }

                        var val1 = param[0];
                        var val2 = checkOperator(param[1]);
                        var val3 = param[2];
                        var val4 = param[3];

                        var funcval = val1 + "," + val2 + "," + val3 + "," + val4 + "?";
                        var val = $("#FilterCondition").val();
                        val += val1 + "," + val2 + "," + val3 + "," + val4 + "?";

                        str += "<td>" + val1Text + "</td>";
                        str += "<td>" + val2 + "</td>";
                        str += "<td>" + val3 + "</td>";
                        str += "<td>" + val4 + "</td>";
                        str += "<td><i name=\"FilterCondition\" onclick=\"deleteRowCriteria(this,'" + funcval + "');\" class=\"fam-delete\"></i></td>";

                        $("#FilterCondition").val(val);
                        $('#tblConditionList').show();
                        $('#tblConditionList').append(str);
                    }
                }
            }


			 document.getElementById("FSearch").value = AntiSanitizeURLString("@parentUrl["search"]");
			 document.getElementById("T_DateOfBirthTo").value = "@parentUrl["T_DateOfBirthTo"]";
			 document.getElementById("T_DateOfBirthFrom").value = "@parentUrl["T_DateOfBirthFrom"]";
						 document.getElementById("T_StateHireDateTo").value = "@parentUrl["T_StateHireDateTo"]";
			 document.getElementById("T_StateHireDateFrom").value = "@parentUrl["T_StateHireDateFrom"]";
						 document.getElementById("T_AdjustedHireDateTo").value = "@parentUrl["T_AdjustedHireDateTo"]";
			 document.getElementById("T_AdjustedHireDateFrom").value = "@parentUrl["T_AdjustedHireDateFrom"]";
						 document.getElementById("T_PriorServiceinmonthsTo").value = "@parentUrl["T_PriorServiceinmonthsTo"]";
			 document.getElementById("T_PriorServiceinmonthsFrom").value = "@parentUrl["T_PriorServiceinmonthsFrom"]";
						 document.getElementById("T_CurrentServiceinmonthsTo").value = "@parentUrl["T_CurrentServiceinmonthsTo"]";
			 document.getElementById("T_CurrentServiceinmonthsFrom").value = "@parentUrl["T_CurrentServiceinmonthsFrom"]";
						 document.getElementById("T_BadgeNumberTo").value = "@parentUrl["T_BadgeNumberTo"]";
			 document.getElementById("T_BadgeNumberFrom").value = "@parentUrl["T_BadgeNumberFrom"]";
				    

			"@parentUrl["T_EffectiveDateTimeTo"]" == "" ? document.getElementById("T_EffectiveDateTimeTo").value = "" : LoadDateTimeByFormat("MM/DD/YYYY hh:mm", "@String.Format("{0:MM/dd/yyyy HH:mm}", Convert.ToDateTime(parentUrl["T_EffectiveDateTimeTo"]))", $("#T_EffectiveDateTimeTo"))
            "@parentUrl["T_EffectiveDateTimeFrom"]" == "" ? document.getElementById("T_EffectiveDateTimeFrom").value = "" : LoadDateTimeByFormat("MM/DD/YYYY hh:mm", "@String.Format("{0:MM/dd/yyyy HH:mm}", Convert.ToDateTime(parentUrl["T_EffectiveDateTimeFrom"]))", $("#T_EffectiveDateTimeFrom"))
			 if ("@parentUrl["t_employeeatfacility"]" != null && "@parentUrl["t_employeeatfacility"]".length > 0) {
            var resT_EmployeeAtFacility = "@parentUrl["t_employeeatfacility"]".split(",");
            var eleT_EmployeeAtFacility = document.getElementById("t_employeeatfacility");
			FillMultiSelectDropDown(resT_EmployeeAtFacility , eleT_EmployeeAtFacility, "t_employeeatfacility");
	}
	else {
            var resT_EmployeeAtFacility = "@parentUrl["t_employeeatfacility"]".split(",");
            var eleT_EmployeeAtFacility = document.getElementById("t_employeeatfacility");
			FillMultiSelectDropDown(resT_EmployeeAtFacility , eleT_EmployeeAtFacility, "t_employeeatfacility");
         }
 if ("@parentUrl["t_employeestatus"]" != null && "@parentUrl["t_employeestatus"]".length > 0) {
            var resT_EmployeeStatus = "@parentUrl["t_employeestatus"]".split(",");
            var eleT_EmployeeStatus = document.getElementById("t_employeestatus");
			FillMultiSelectDropDown(resT_EmployeeStatus , eleT_EmployeeStatus, "t_employeestatus");
	}
	else {
            var resT_EmployeeStatus = "@parentUrl["t_employeestatus"]".split(",");
            var eleT_EmployeeStatus = document.getElementById("t_employeestatus");
			FillMultiSelectDropDown(resT_EmployeeStatus , eleT_EmployeeStatus, "t_employeestatus");
         }
 if ("@parentUrl["t_currentemployeeemploymentprofile"]" != null && "@parentUrl["t_currentemployeeemploymentprofile"]".length > 0) {
            var resT_CurrentEmployeeEmploymentProfile = "@parentUrl["t_currentemployeeemploymentprofile"]".split(",");
            var eleT_CurrentEmployeeEmploymentProfile = document.getElementById("t_currentemployeeemploymentprofile");
			FillMultiSelectDropDown(resT_CurrentEmployeeEmploymentProfile , eleT_CurrentEmployeeEmploymentProfile, "t_currentemployeeemploymentprofile");
	}
	else {
            var resT_CurrentEmployeeEmploymentProfile = "@parentUrl["t_currentemployeeemploymentprofile"]".split(",");
            var eleT_CurrentEmployeeEmploymentProfile = document.getElementById("t_currentemployeeemploymentprofile");
			FillMultiSelectDropDown(resT_CurrentEmployeeEmploymentProfile , eleT_CurrentEmployeeEmploymentProfile, "t_currentemployeeemploymentprofile");
         }
 if ("@parentUrl["t_currentemployeejobassignment"]" != null && "@parentUrl["t_currentemployeejobassignment"]".length > 0) {
            var resT_CurrentEmployeeJobAssignment = "@parentUrl["t_currentemployeejobassignment"]".split(",");
            var eleT_CurrentEmployeeJobAssignment = document.getElementById("t_currentemployeejobassignment");
			FillMultiSelectDropDown(resT_CurrentEmployeeJobAssignment , eleT_CurrentEmployeeJobAssignment, "t_currentemployeejobassignment");
	}
	else {
            var resT_CurrentEmployeeJobAssignment = "@parentUrl["t_currentemployeejobassignment"]".split(",");
            var eleT_CurrentEmployeeJobAssignment = document.getElementById("t_currentemployeejobassignment");
			FillMultiSelectDropDown(resT_CurrentEmployeeJobAssignment , eleT_CurrentEmployeeJobAssignment, "t_currentemployeejobassignment");
         }
 if ("@parentUrl["t_employeegender"]" != null && "@parentUrl["t_employeegender"]".length > 0) {
            var resT_EmployeeGender = "@parentUrl["t_employeegender"]".split(",");
            var eleT_EmployeeGender = document.getElementById("t_employeegender");
			FillMultiSelectDropDown(resT_EmployeeGender , eleT_EmployeeGender, "t_employeegender");
	}
	else {
            var resT_EmployeeGender = "@parentUrl["t_employeegender"]".split(",");
            var eleT_EmployeeGender = document.getElementById("t_employeegender");
			FillMultiSelectDropDown(resT_EmployeeGender , eleT_EmployeeGender, "t_employeegender");
         }
 if ("@parentUrl["t_employeerace"]" != null && "@parentUrl["t_employeerace"]".length > 0) {
            var resT_EmployeeRace = "@parentUrl["t_employeerace"]".split(",");
            var eleT_EmployeeRace = document.getElementById("t_employeerace");
			FillMultiSelectDropDown(resT_EmployeeRace , eleT_EmployeeRace, "t_employeerace");
	}
	else {
            var resT_EmployeeRace = "@parentUrl["t_employeerace"]".split(",");
            var eleT_EmployeeRace = document.getElementById("t_employeerace");
			FillMultiSelectDropDown(resT_EmployeeRace , eleT_EmployeeRace, "t_employeerace");
         }
 if ("@parentUrl["t_employeenationalityassociation"]" != null && "@parentUrl["t_employeenationalityassociation"]".length > 0) {
            var resT_EmployeeNationalityAssociation = "@parentUrl["t_employeenationalityassociation"]".split(",");
            var eleT_EmployeeNationalityAssociation = document.getElementById("t_employeenationalityassociation");
			FillMultiSelectDropDown(resT_EmployeeNationalityAssociation , eleT_EmployeeNationalityAssociation, "t_employeenationalityassociation");
	}
	else {
            var resT_EmployeeNationalityAssociation = "@parentUrl["t_employeenationalityassociation"]".split(",");
            var eleT_EmployeeNationalityAssociation = document.getElementById("t_employeenationalityassociation");
			FillMultiSelectDropDown(resT_EmployeeNationalityAssociation , eleT_EmployeeNationalityAssociation, "t_employeenationalityassociation");
         }
 if ("@parentUrl["t_employeeveteranstatus"]" != null && "@parentUrl["t_employeeveteranstatus"]".length > 0) {
            var resT_EmployeeVeteranStatus = "@parentUrl["t_employeeveteranstatus"]".split(",");
            var eleT_EmployeeVeteranStatus = document.getElementById("t_employeeveteranstatus");
			FillMultiSelectDropDown(resT_EmployeeVeteranStatus , eleT_EmployeeVeteranStatus, "t_employeeveteranstatus");
	}
	else {
            var resT_EmployeeVeteranStatus = "@parentUrl["t_employeeveteranstatus"]".split(",");
            var eleT_EmployeeVeteranStatus = document.getElementById("t_employeeveteranstatus");
			FillMultiSelectDropDown(resT_EmployeeVeteranStatus , eleT_EmployeeVeteranStatus, "t_employeeveteranstatus");
         }
 if ("@parentUrl["t_employeecardemplgrpassociation"]" != null && "@parentUrl["t_employeecardemplgrpassociation"]".length > 0) {
            var resT_EmployeeCardEmplGrpAssociation = "@parentUrl["t_employeecardemplgrpassociation"]".split(",");
            var eleT_EmployeeCardEmplGrpAssociation = document.getElementById("t_employeecardemplgrpassociation");
			FillMultiSelectDropDown(resT_EmployeeCardEmplGrpAssociation , eleT_EmployeeCardEmplGrpAssociation, "t_employeecardemplgrpassociation");
	}
	else {
            var resT_EmployeeCardEmplGrpAssociation = "@parentUrl["t_employeecardemplgrpassociation"]".split(",");
            var eleT_EmployeeCardEmplGrpAssociation = document.getElementById("t_employeecardemplgrpassociation");
			FillMultiSelectDropDown(resT_EmployeeCardEmplGrpAssociation , eleT_EmployeeCardEmplGrpAssociation, "t_employeecardemplgrpassociation");
         }
 if ("@parentUrl["t_employeecardlvplanassociation"]" != null && "@parentUrl["t_employeecardlvplanassociation"]".length > 0) {
            var resT_EmployeeCardLvPlanAssociation = "@parentUrl["t_employeecardlvplanassociation"]".split(",");
            var eleT_EmployeeCardLvPlanAssociation = document.getElementById("t_employeecardlvplanassociation");
			FillMultiSelectDropDown(resT_EmployeeCardLvPlanAssociation , eleT_EmployeeCardLvPlanAssociation, "t_employeecardlvplanassociation");
	}
	else {
            var resT_EmployeeCardLvPlanAssociation = "@parentUrl["t_employeecardlvplanassociation"]".split(",");
            var eleT_EmployeeCardLvPlanAssociation = document.getElementById("t_employeecardlvplanassociation");
			FillMultiSelectDropDown(resT_EmployeeCardLvPlanAssociation , eleT_EmployeeCardLvPlanAssociation, "t_employeecardlvplanassociation");
         }
 if ("@parentUrl["t_employeeaddress"]" != null && "@parentUrl["t_employeeaddress"]".length > 0) {
            var resT_EmployeeAddress = "@parentUrl["t_employeeaddress"]".split(",");
            var eleT_EmployeeAddress = document.getElementById("t_employeeaddress");
			FillMultiSelectDropDown(resT_EmployeeAddress , eleT_EmployeeAddress, "t_employeeaddress");
	}
	else {
            var resT_EmployeeAddress = "@parentUrl["t_employeeaddress"]".split(",");
            var eleT_EmployeeAddress = document.getElementById("t_employeeaddress");
			FillMultiSelectDropDown(resT_EmployeeAddress , eleT_EmployeeAddress, "t_employeeaddress");
         }
 if ("@parentUrl["t_languagecertifiedin"]" != null && "@parentUrl["t_languagecertifiedin"]".length > 0) {
            var resT_LanguageCertifiedIn = "@parentUrl["t_languagecertifiedin"]".split(",");
            var eleT_LanguageCertifiedIn = document.getElementById("t_languagecertifiedin");
			FillMultiSelectDropDown(resT_LanguageCertifiedIn,  eleT_LanguageCertifiedIn, "t_languagecertifiedin");
	}
	else
	{
	var resT_LanguageCertifiedIn = "@parentUrl["t_languagecertifiedin"]".split(",");
            var eleT_LanguageCertifiedIn = document.getElementById("t_languagecertifiedin");
			FillMultiSelectDropDown(resT_LanguageCertifiedIn,  eleT_LanguageCertifiedIn, "t_languagecertifiedin");
	}
 if ("@parentUrl["t_conversationalemployeeforeignlanguage"]" != null && "@parentUrl["t_conversationalemployeeforeignlanguage"]".length > 0) {
            var resT_ConversationalEmployeeForeignLanguage = "@parentUrl["t_conversationalemployeeforeignlanguage"]".split(",");
            var eleT_ConversationalEmployeeForeignLanguage = document.getElementById("t_conversationalemployeeforeignlanguage");
			FillMultiSelectDropDown(resT_ConversationalEmployeeForeignLanguage,  eleT_ConversationalEmployeeForeignLanguage, "t_conversationalemployeeforeignlanguage");
	}
	else
	{
	var resT_ConversationalEmployeeForeignLanguage = "@parentUrl["t_conversationalemployeeforeignlanguage"]".split(",");
            var eleT_ConversationalEmployeeForeignLanguage = document.getElementById("t_conversationalemployeeforeignlanguage");
			FillMultiSelectDropDown(resT_ConversationalEmployeeForeignLanguage,  eleT_ConversationalEmployeeForeignLanguage, "t_conversationalemployeeforeignlanguage");
	}
 }
    });

	  function FillMultiSelectDropDown(result, element, elementName) {
        var isHaveNullSelect = false;
        var countoptions = 0;

        for (var o = 0; o < element.options.length; o++) {
            if (result.indexOf(element.options[o].value)!=-1)
                element.options[o].selected = true;
            else if (result.indexOf("NULL")!=-1)
                isHaveNullSelect = true;
            countoptions++;
        }
        var opt = document.createElement('option');
        opt.value = "NULL";
        opt.innerHTML = "None";
        if (isHaveNullSelect) {
            opt.selected = true;
            element.insertBefore(opt, element.firstChild);
        }
        if (!isHaveNullSelect) {
            element.insertBefore(opt, element.firstChild);
        }
        $("#" + elementName).multiselect("rebuild");
        if (countoptions >= 10) {
            var hostingentity = elementName;
            var urlGetAll = $('#' + hostingentity).attr("dataurl").replace("GetAllMultiSelectValue", "Index") + "?BulkOperation=multiple";
            var dispName = ($("label[for=\"" + hostingentity + "\"]").text());
            var link = "<a onclick=\"" + "OpenPopUpBulkOperation('PopupBulkOperation','" + hostingentity + "','" + dispName + "','dvPopupBulkOperation','" + urlGetAll + "')\">View All</a>";
            var getall = "<li class='disabled-result disabled-result' style='font-style:Italic;text-decoration:underline;' >" + link + "</li>";
            var $ul = $("ul", "#dv" + elementName);
            $ul.append($(getall));
        }
    }
</script>

<script type="text/javascript">
    // Criteria Javascript Methods
    function checkOperator(operator) {
        var operand = operator;
        switch (operator) {
            case "&gt;":
                {
                    operand = ">";
                    break;
                }
            case "&lt;":
                {
                    operand = "<";
                    break;
                }
            case "&gt;=":
                {
                    operand = ">=";
                    break;
                }
            case "&lt;=":
                {
                    operand = "<=";
                    break;
                }
        }
        return operand;
    }
    function FillCriteriaValue(obj) {
        var propertyName = $("#" + obj.id).val();
        var entityName = '@ViewBag.EntityName';
        $("#" + "OperatorList").html('');
        $.ajax({
            url: '@Url.Action("GetDateType", "BusinessRule")' + '?entityName=' + entityName + '&propertyName=' + propertyName,
            type: "GET",
            cache: false,
            async: false,
            success: function (result) {
                var optionDOM = '<option value="0">-- Select --</option>';
                optionDOM += '<option value="=">Equals to</option>';
                if (result == "String") {
                    optionDOM += '<option value="Contains">Contains</option>';
                }
                else if (result != "Boolean") {
                    optionDOM += '<option value=">">Greater than</option>';
                    optionDOM += '<option value="<">Less than</option>';
                    optionDOM += '<option value="<=">Less than Or Equals to</option>';
                    optionDOM += '<option value=">=">Greater than Or Equals to</option>';
                }
                optionDOM += '<option value="!=">Not Equals to</option>';
                $("#" + "OperatorList").html(optionDOM);
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
    }
    function GetSecondLevelAttributeForCriteria() {
        var SelectedEntity = '@ViewBag.EntityName';
        var SelectedProperty = $("#" + "PropertyList").val();
        $("#" + "AssociationPropertyList").hide();
        $("#" + "AssociationPropertyList").html('');
        $.ajax({
            url: '@Url.Action("GetAttributesofTargetEntity", "BusinessRule")' + '?Entity=' + SelectedEntity + '&AttributeName=' + SelectedProperty,
            type: "GET",
            cache: false,
            success: function (result) {
                var optionDOM = '<option value="SelectProperty">-- Select Association Property --</option>';
                for (i = 0; i < result.length; i++) {
                    //optionDOM += '<option value="' + result[i].Name + '">' + result[i].DisplayName + '</option>';
					optionDOM += '<option class="' + result[i].DataType + '" value="' + result[i].Name + '">' + result[i].DisplayName + '</option>';
                }

                if (result.length == 0) {
                    $("#" + "AssociationPropertyList").html('');
                    $("#" + "AssociationPropertyList").hide();
                }
                else {
                    $("#" + "AssociationPropertyList").show();
                    $("#" + "AssociationPropertyList").html(optionDOM);
                }
                FillSugestedDynamicValuesForCriteria();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("error");
            }
        });
    }
    function FillSugestedDynamicValuesForCriteria() {
        var text = $("#" + "PropertyList option:selected").text();
        if ($("#" + "AssociationPropertyList").val() != null && $("#" + "AssociationPropertyList").val().length > 0) {
            var value = "[" + $("#" + "PropertyList").val() + "." + $("#" + "AssociationPropertyList").val() + "]";
        }
        else {
            var value = "[" + $("#" + "PropertyList").val() + "]";
        }
    }
    function GetCriteriaSuggestedValues(obj) {
        $("#dvRule7DynamicValueInCondition").hide();
        $("#" + "ConditionValue").val('');

        if ($("#ValueTypeList option:selected").text() == "Pick From List") {
            var SelectedProperty = $("#" + "PropertyList").val();
            var SelectedEntity = '@ViewBag.EntityName';
            if (SelectedEntity.length == 0) {
                alert("Please select an Entity first !");
                return false;
            }
            if (SelectedProperty.length == 0) {
                alert("Please select a Property !");
                return false;
            }

            var assocProp = $("#AssociationPropertyList").val();
            if (assocProp == "SelectProperty") {
                alert("Please select Association Property.");
                return false;
            }
            var hostingEntity = "";
			var propType = "Property";
            $.ajax({
                url: '@Url.Action("GetDropdown", "BusinessRule")' + '?Entity=' + SelectedEntity + '&Property=' + SelectedProperty,
                type: "GET",
                cache: false,
                success: function (result) {
                    if (result != "Failure") {
                        $("#" + "dvSuggestedPropertyValue").show();
                        $("#" + "ConditionValue").hide();
						//
						var selectedoptionclass = $('option:selected', $('#AssociationPropertyList')).attr('class');
                        if (selectedoptionclass != undefined && selectedoptionclass == "Int64")
                        {
                           
                            $.ajax({
                                url: '@Url.Action("GetTargetEntityOfAssociationProperty", "BusinessRule")' + '?Entity=' + result + '&AttributeName=' + assocProp,
                                type: "GET",
                                cache: false,
                                async: false,
                                success: function (data) {
                                        result = data.Name;
                                        assocProp = "DisplayValue";
										propType = "Association";
                                }
                            });
                        }
						//
                        hostingEntity = result;
                        $("#SuggestedPropertyValue").attr("dataurl", '@Url.Action("GetAllMultiSelectValueForBR", "_Entity", null)'.replace("_Entity", result) + '?propNameBR=' + assocProp);
                        if (hostingEntity != "") {
                            var dataurl = '@Url.Action("GetAllMultiSelectValueForBR", "_Entity", null)'.replace("_Entity", result) + '?propNameBR=' + assocProp;
                            $.ajax({
                                url: dataurl,
                                type: "GET",
                                cache: false,
                                async: false,
                                success: function (result) {
                                    var countItems = 0
                                    var optionDOM = "";
                                    for (i = 0; i < result.length; i++) {
                                        if (result[i] != null)
											optionDOM += '<option class="'+propType+'" value="' + result[i].Id + '">' + result[i].value + '</option>';
                                            //optionDOM += '<option value="' + i + '">' + result[i] + '</option>';
                                        countItems++;
                                    }
                                    $("#SuggestedPropertyValue").html(optionDOM);
                                    $("#SuggestedPropertyValue").multiselect('rebuild');
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert("error");
                                }
                            });
                        }
                    }
                    else {
                        alert("Supports only association values.");
                        $("#ValueTypeList :nth(0)").prop("selected", "selected").change();
                        hostingEntity = "";
                        $("#" + "dvSuggestedPropertyValue").hide();
                        $("#" + "ConditionValue").show();
                        $("#" + "SuggestedPropertyValue").removeClass = "chosen-select form-control";
                        $("#" + "SuggestedPropertyValue").removeAttr("HostingName");
                        $("#" + "SuggestedPropertyValue").removeAttr("dataurl");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("error");
                }
            });
        }
        else if ($("#ValueTypeList option:selected").text() == "Dynamic") {
            $("#dvSuggestedPropertyValue").hide();
            $("#ConditionValue").val('');
            $("#ConditionValue").hide();
            GetSecondLevelAttributeInCriteria();
            $("#dvRule7DynamicValueInCondition").show();
        }
        else { $("#" + "dvSuggestedPropertyValue").hide(); $("#" + "ConditionValue").show(); $("#" + "ConditionValue").prop("disabled", false); }
    }
    function FillCriteriaForAssociation() {
        var entityName = '@ViewBag.EntityName';
        var assocName = $("#PropertyList").val();
        var propertyName = $("#AssociationPropertyList").val();
        $("#" + "OperatorList").html('');
        $.ajax({
            url: '@Url.Action("GetDateTypeForAssociationProperties", "BusinessRule")' + '?entityName=' + entityName + '&assocName=' + assocName + '&propertyName=' + propertyName,
            type: "GET",
            cache: false,
            async: false,
            success: function (result) {
                var optionDOM = '<option value="0">--- Select ---</option>';
                optionDOM += '<option value="=">Equals to</option>';
                if (result == "String") {
                    optionDOM += '<option value="Contains">Contains</option>';
                }
                else if (result != "Boolean") {
                    optionDOM += '<option value=">">Greater than</option>';
                    optionDOM += '<option value="<">Less than</option>';
                    optionDOM += '<option value="<=">Less than Or Equals to</option>';
                    optionDOM += '<option value=">=">Greater than Or Equals to</option>';
                }
                optionDOM += '<option value="!=">Not Equals to</option>';
                $("#" + "OperatorList").html(optionDOM);
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
    }
    function SetCriteriaValueType(obj) {
        if (obj.id == "OperatorList") {
            $("#ValueTypeList").val('Constant').change();
        }
    }
    function GetSecondLevelAttributeInCriteria() {
        var SelectedEntity = '@ViewBag.EntityName';
        var SelectedProperty = $("#" + "SuggestedDynamicValueInCondition7").val();
        $("#" + "SuggestedDynamicValueInCondition71").hide();
        $("#" + "SuggestedDynamicValueInCondition71").html('');
        $.ajax({
            url: '@Url.Action("GetAttributesofTargetEntity", "BusinessRule")' + '?Entity=' + SelectedEntity + '&AttributeName=' + SelectedProperty,
            type: "GET",
            cache: false,
            success: function (result) {
                var optionDOM = '<option value="SelectProperty">--Select Association Property--</option>';
                for (i = 0; i < result.length; i++) {
                    //optionDOM += '<option value="' + result[i].Name + '">' + result[i].DisplayName + '</option>';
					optionDOM += '<option class="' + result[i].DataType + '" value="' + result[i].Name + '">' + result[i].DisplayName + '</option>';
                }

                if (result.length == 0) {
                    $("#" + "SuggestedDynamicValueInCondition71").html('');
                    $("#" + "SuggestedDynamicValue71").hide();
                }
                else {
                    $("#" + "SuggestedDynamicValueInCondition71").show();
                    $("#" + "SuggestedDynamicValueInCondition71").html(optionDOM);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("error");
            }
        })
    }
    function AddCriteriaInGrid() {

        if ($("#PropertyList option:selected").val() == "SelectProperty" || $("#PropertyList option:selected").val() == "") {
            alert("Please select Property for condition.");
            return false;
        }
		if ($("#OperatorList").val() == ""  || $("#OperatorList").val() == "0") {
            alert("Please select Operator for condition.");
            return false;
        }
		if ($("#ConditionValue").val().trim() == "" && $("#ValueTypeList").val() != "Pick From List") {
            alert("Please enter Property Value for condition.");
            return false;
        }
        if ($("#AssociationPropertyList").val() != null && $("#AssociationPropertyList").val() != "") {
            if ($("#AssociationPropertyList option:selected").val() == "SelectProperty") {
                alert("Please select Association Property.");
                return false;
            }
            var option_all = $("#SuggestedPropertyValue option:selected").map(function () {
               // return $(this).text();
			   if ($(this).attr("class") == "Association")
                    return $(this).val();
               else
                  return $(this).text(); 
            }).get().join();
            if (option_all != "")
                $("#ConditionValue").val(option_all);
            $("#SuggestedPropertyValue option:selected").removeAttr("selected");
            $("#SuggestedPropertyValue").multiselect('rebuild');
        }
        //Dynamic
        var dynamicPropertyDispValue = "";
        if ($("#ValueTypeList option:selected").text() == "Dynamic") {
            if ($("#" + "SuggestedDynamicValueInCondition71").val() != null && $("#" + "SuggestedDynamicValueInCondition71").val().length > 0) {
                var value = "[" + $("#" + "SuggestedDynamicValueInCondition7").val() + "." + $("#" + "SuggestedDynamicValueInCondition71").val() + "]";
                dynamicPropertyDispValue = "[" + $("#" + "SuggestedDynamicValueInCondition7 option:selected").text() + "." + $("#" + "SuggestedDynamicValueInCondition71 option:selected").text() + "]";
                $("#" + "ConditionValue").val(value);
            }
            else {
                var value = "[" + $("#" + "SuggestedDynamicValueInCondition7").val() + "]";
                dynamicPropertyDispValue = "[" + $("#" + "SuggestedDynamicValueInCondition7 option:selected").text() + "]";
                $("#" + "ConditionValue").val(value);
            }
        }
        //Dynamic
        var condValue = $("#ConditionValue").val();
        var str = "<tr>";
        var entityName = '@ViewBag.EntityName';
        var val1Text = $("#PropertyList option:selected").text();
        var val1 = $("#PropertyList").val();
        var val2 = $("#OperatorList").val();
        var val3 = $("#ConditionValue").val();
        var val4 = $("#LogicalConnectorList option:selected").text();
        var val5 = $("#ValueTypeList").val();

        if ($("#AssociationPropertyList").val() != null && $("#AssociationPropertyList").val() != "") {
            val1 = "[" + val1 + "." + $("#AssociationPropertyList").val() + "]";
            val1Text = "[" + val1Text + "." + $("#AssociationPropertyList option:selected").text() + "]";
            CreateCriteriaForAssociation(entityName, condValue, val1, val1Text, val5, dynamicPropertyDispValue);
            return true;
        }

        var funcval = val1 + "," + val2 + "," + val3 + "," + val4 + "?";
        var val = $("#FilterCondition").val();
        val += val1 + "," + val2 + "," + val3 + "," + val4 + "?";

        if ($("#ValueTypeList option:selected").text() == "Dynamic" && dynamicPropertyDispValue != "") {
            val3 = dynamicPropertyDispValue;
        }

        str += "<td>" + val1Text + "</td>";
        str += "<td>" + val2 + "</td>";
        str += "<td>" + val3 + "</td>";
        str += "<td>" + val4 + "</td>";
        str += "<td><i name=\"FilterCondition\" onclick=\"deleteRowCriteria(this,'" + funcval + "');\" class=\"fam-delete\"></i></td>";

        var exMsg = VerifyPropertyAndValueDataType(entityName, val1, $("#ConditionValue").val(), val5, 'condition');
        if (exMsg != "" && exMsg != null) {
            $("#ConditionValue").val('');
            alert('Please enter correct Property Value. ' + exMsg);
            return false;
        }

        $("#FilterCondition").val(val);
        $('#tblConditionList').show();
        $('#tblConditionList').append(str);
        $("#DurationCount").val('');
        $("#ConditionValue").val('');
    }
    function CreateCriteriaForAssociation(entityName, param, assocName, assocDispName, valueType, dynamicDispName) {
        var arrCond = param.split(",");
        var val = $("#FilterCondition").val();
        var operator = $("#OperatorList").val();

        var exMsg = VerifyPropertyAndValueDataType(entityName, assocName, param, valueType, 'condition');
		 if (valueType != "Pick From List") {
			if (exMsg != "" && exMsg != null) {
				$("#ConditionValue").val('');
				alert('Data types of selected properties did not match. Please select compatible properties. ' + exMsg);
				return false;
			}
		}
        var logicalConnector = $("#LogicalConnectorList").val();

        if (valueType == "Pick From List") {
            logicalConnector = "OR";
        }

        for (i = 0; i < arrCond.length; i++) {
            if (i == arrCond.length - 1) {
                logicalConnector = $("#LogicalConnectorList").val();
            }
            if (valueType != "Dynamic")
                dynamicDispName = arrCond[i];
            val += assocName + ',' + operator + ',' + arrCond[i] + ',' + logicalConnector + '?';
            var str = "<tr><td>" + assocDispName + "</td><td>" + operator + "</td><td>" + dynamicDispName + "</td><td>" + logicalConnector + "</td>";
            str += "<td><i name=\"FilterCondition\" onclick=\"deleteRowCriteria(this,'" + assocName + ',' + operator + ',' + dynamicDispName + ',' + logicalConnector + '' + "');\" class=\"fam-delete\"></i></td>";
            $("#FilterCondition").val(val);
            $('#tblConditionList').show();
            $('#tblConditionList').append(str);
            $("#ConditionValue").val('');
        }
    }
    function VerifyPropertyAndValueDataType(entityName, propertyName, conditionValue, valueType, actionType) {
        var propDataType = "";
        $.ajax({
            url: '@Url.Action("VerifyPropertyAndValueDataType", "BusinessRule")' + '?entityName=' + entityName + '&propertyName=' + propertyName + "&conditionValue=" + conditionValue + "&valueType=" + valueType + "&actionType=" + actionType,
            type: "GET",
            cache: false,
            async: false,
            success: function (result) {
                propDataType = result;
            }
        });
        return propDataType;
    }
    function deleteRowCriteria(obj, val) {
        var obj_tr = $(obj).closest("tr");
        var newobj = $("#" + $(obj).attr("name")).val().replace(val, "");
        $("#" + $(obj).attr("name")).val(newobj);
        obj_tr.remove();
    }
$(document).ready(function () {
        $(':input').each(function () {
            var valid = $(this).attr("id");
            if (valid != 'LogicalConnectorList' && valid != 'ValueTypeList' && valid != 'DisplayLayout' && valid != 'inbuiltSearchCriteria') {
                if ($(this).val() != null && $(this).val().length > 0)
                    $(this).css("border-color", "orange")
            }
        });
        $('.fsearch .btn').each(function () {
            if ($(this).attr("title") != null && $(this).attr("title") != 'ALL' && $(this).attr("title") != 'None selected') {
                $(this).attr("style", "border-color:orange !important;")
            }
        });

    });
</script>
<div class="modal fade" aria-hidden="true" id="dvalert">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closealert();" data-dismiss="modal" aria-hidden="true">&times;</button>
                <center><h4 class="modal-title"> Employee </h4></center>
                <div class="alert alert-warning" id="alertbody">
                </div>
                <button type="button" class="btn btn-default btn-sm" onclick="closealert();" data-dismiss="modal" aria-hidden="true">OK</button>
            </div>
        </div>
    </div>
</div>

    <div class="modal fade" id="ShowGraphT_Employee" tabindex="-1" role="dialog" aria-labelledby="ShowGraphT_EmployeeLabel" aria-hidden="true">
        <div class="modal-dialog" style="width:80%">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="ShowGraphT_EmployeeLabel">Dashboard @EntityDisplayName</h4>
                </div>
				 <div  class="modal-body" >
						<div id="dvShowGraphT_Employee" data-url="@Url.Action("ShowGraph", "T_Employee" , new { type = "all" })">
						</div>
						<div style="clear:both"></div>
                </div>
                
            </div>
        </div>
    </div>

