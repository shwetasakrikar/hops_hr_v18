@model GeneratorBase.MVC.Models.T_Position
@{
    if (!string.IsNullOrEmpty(ViewBag.T_PositionIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_PositionIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_PositionIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.T_PositionIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_PositionIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_PositionIsSetValueUIRule);
    }
}
@using (Html.BeginForm("Create", "T_Position",new {UrlReferrer = Convert.ToString(ViewData["T_PositionParentUrl"]), IsDDAdd = ViewBag.IsDDAdd }, FormMethod.Post, new { enctype = "multipart/form-data",id="frmT_Position" }))
{
   @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
	<input type="hidden" id="ErrMsg" />
	@*<label id="ErrMsg" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
    <div id="errorContainer" style="display: none">
        <div id="errorsMsg"></div>
        <div id="errors"></div>
    </div>
	 
	 <div id="divDisplayThresholdLimit" style="display:none;">
	</div>
	 <div id="divDisplayBRmsgMandatory" style="display:none;">
	</div>
	<div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
	</div>
	<div id="divDisplayCodeFragment" style="display:none;">
	</div>
	if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        <div class="alert alert-danger" role="alert">
            <a class="close" data-dismiss="alert">&times;</a>
            @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                <p>@modelError.ErrorMessage</p>
            }
        </div>
    }
	
	<div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="AppForm">
                <div class="">
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48888">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#basicdetailsbody" alt="Basic Details" title="Basic Details"><span class="glyphicon glyphicon-chevron-down"></span> Basic Details</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="basicdetailsbody">					
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FacilityAssignedToID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_FacilityAssignedToID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_FacilityAssignedToID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Facility", @dataurl = Url.Action("GetAllValue", "T_Facility",new { caller = "T_FacilityAssignedToID" }) })
			@Html.ValidationMessageFor(model => model.T_FacilityAssignedToID)
			@if ( User.CanAdd("T_Facility"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Facility"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Facility','dvPopup','" + Url.Action("CreateQuick", "T_Facility", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
			 @if(User.CanView("T_Position","T_PositionNumber"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionNumber">
                                <div class='form-group' title="Position  Number">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionNumber) <span class="text-danger-reg">*</span></label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_PositionNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_PositionNumber)
									</div>
                                </div>
					</div>
				}

					
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TypeOfPositionID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_TypeOfPositionID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_TypeOfPositionID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_PositionType", @dataurl = Url.Action("GetAllValue", "T_PositionType",new { caller = "T_TypeOfPositionID" }) })
			@Html.ValidationMessageFor(model => model.T_TypeOfPositionID)
			@if ( User.CanAdd("T_PositionType"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_PositionType"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Type','dvPopup','" + Url.Action("CreateQuick", "T_PositionType", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AssociatedPositionStatusID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_AssociatedPositionStatusID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_AssociatedPositionStatusID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Positionstatus", @dataurl = Url.Action("GetAllValue", "T_Positionstatus",new { caller = "T_AssociatedPositionStatusID" }) })
			@Html.ValidationMessageFor(model => model.T_AssociatedPositionStatusID)
			@if ( User.CanAdd("T_Positionstatus"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Positionstatus"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Status','dvPopup','" + Url.Action("CreateQuick", "T_Positionstatus", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionIdentifierID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionIdentifierID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionIdentifierID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_PositionLevel", @dataurl = Url.Action("GetAllValue", "T_PositionLevel",new { caller = "T_PositionIdentifierID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionIdentifierID)
			@if ( User.CanAdd("T_PositionLevel"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_PositionLevel"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Level','dvPopup','" + Url.Action("CreateQuick", "T_PositionLevel", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
			 @if(User.CanView("T_Position","T_PositionFill"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionFill">
                                <div class='form-group' title="Position Fill %">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionFill) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_PositionFill, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_PositionFill)
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
									</div>
                                </div>
					</div>
				}

					
								  @if(User.CanView("T_Position","T_QuasiFill"))
								{
								<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_QuasiFill">
									<div class="form-group" title="Quasi Fill">
										<label class="col-sm-5 col-md-5 col-xs-12" >
											@Html.LabelFor(model => model.T_QuasiFill) 
										</label>
										<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    
											@Html.CheckBox("T_QuasiFill", false)
											@Html.ValidationMessageFor(model => model.T_QuasiFill)		
										</div>
										</div>
									</div>   
								}                         
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionWorkingTitleAssociationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionWorkingTitleAssociationID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionWorkingTitleAssociationID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_WorkingTitle", @dataurl = Url.Action("GetAllValue", "T_WorkingTitle",new { caller = "T_PositionWorkingTitleAssociationID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionWorkingTitleAssociationID)
			@if ( User.CanAdd("T_WorkingTitle"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_WorkingTitle"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Working Title ','dvPopup','" + Url.Action("CreateQuick", "T_WorkingTitle", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48890">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#positioncodesbody" alt="Position Codes" title="Position Codes"><span class="glyphicon glyphicon-chevron-down"></span> Position Codes</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="positioncodesbody">					
   @if(User.CanView("T_Position","T_EffectiveDate"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EffectiveDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EffectiveDate) </label>
                                <div class="form-group" title="Role change effective date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_EffectiveDate">
                                        @Html.TextBoxFor(model => model.T_EffectiveDate, new { @class = "form-control"   })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_EffectiveDate)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_EffectiveDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_EffectiveDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
							}
		  
                          
@if(User.CanView("T_Position","T_PositionRoleCodeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionRoleCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionRoleCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionRoleCodeID", null, "-- Select --", new {   @derivedurl = Url.Action("GetDerivedDetails", "T_Position"),   @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_RoleCode", @dataurl = Url.Action("GetAllValue", "T_RoleCode",new { caller = "T_PositionRoleCodeID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionRoleCodeID)
			@if ( User.CanAdd("T_RoleCode"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_RoleCode"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Role Code','dvPopup','" + Url.Action("CreateQuick", "T_RoleCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  			 @if(User.CanView("T_Position","T_SalaryBand"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_SalaryBand">
                                <div class='form-group' title="Salary Band">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_SalaryBand) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_SalaryBand, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_SalaryBand)
									</div>
                                </div>
					</div>
				}

					
@if(User.CanView("T_Position","T_PositionSOCCodeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionSOCCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionSOCCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionSOCCodeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_SocCode", @dataurl = Url.Action("GetAllValue", "T_SocCode",new { caller = "T_PositionSOCCodeID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionSOCCodeID)
			@if ( User.CanAdd("T_SocCode"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_SocCode"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','SOC Code','dvPopup','" + Url.Action("CreateQuick", "T_SocCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_Position","T_PositionClassCodeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionClassCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionClassCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionClassCodeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ClassCode", @dataurl = Url.Action("GetAllValue", "T_ClassCode",new { caller = "T_PositionClassCodeID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionClassCodeID)
			@if ( User.CanAdd("T_ClassCode"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_ClassCode"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Class Code','dvPopup','" + Url.Action("CreateQuick", "T_ClassCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_Position","T_WorkersCompCodePositionID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_WorkersCompCodePositionID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_WorkersCompCodePositionID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_WorkersCompCodePositionID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_WCCode", @dataurl = Url.Action("GetAllValue", "T_WCCode",new { caller = "T_WorkersCompCodePositionID" }) })
			@Html.ValidationMessageFor(model => model.T_WorkersCompCodePositionID)
			@if ( User.CanAdd("T_WCCode"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_WCCode"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','WC Code','dvPopup','" + Url.Action("CreateQuick", "T_WCCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  			 @if(User.CanView("T_Position","T_CardApprvr"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_CardApprvr">
                                <div class='form-group' title="CardApprvr">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_CardApprvr) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_CardApprvr, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_CardApprvr)
									</div>
                                </div>
					</div>
				}

					
@if(User.CanView("T_Position","T_PositionCostCenterAssociationID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionCostCenterAssociationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionCostCenterAssociationID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionCostCenterAssociationID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_CostCenter", @dataurl = Url.Action("GetAllValue", "T_CostCenter",new { caller = "T_PositionCostCenterAssociationID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionCostCenterAssociationID)
			@if ( User.CanAdd("T_CostCenter"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_CostCenter"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','CardDept','dvPopup','" + Url.Action("CreateQuick", "T_CostCenter", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48889">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#timeandotherdetailsbody" alt="Time and Other Details" title="Time and Other Details"><span class="glyphicon glyphicon-chevron-down"></span> Time and Other Details</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="timeandotherdetailsbody">					
   @if(User.CanView("T_Position","T_ShiftStart"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ShiftStart">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ShiftStart) </label>
                                <div class="form-group" title="Shift Start">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ShiftStart">
                                        @Html.TextBoxFor(model => model.T_ShiftStart, new { @class = "form-control"  ,@format = "hh:mm" })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ShiftStart)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ShiftStart').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                        $('#datetimepickerT_ShiftStart').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                    });
                                </script>
                            </div>
							}
		  
                          
   @if(User.CanView("T_Position","T_ShiftEnd"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ShiftEnd">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ShiftEnd) </label>
                                <div class="form-group" title="Shift End">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ShiftEnd">
                                        @Html.TextBoxFor(model => model.T_ShiftEnd, new { @class = "form-control"  ,@format = "hh:mm" })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ShiftEnd)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ShiftEnd').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                        $('#datetimepickerT_ShiftEnd').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                    });
                                </script>
                            </div>
							}
		  
                          
@if(User.CanView("T_Position","T_PositionShiftMealTimeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftMealTimeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionShiftMealTimeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionShiftMealTimeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ShiftMealTime", @dataurl = Url.Action("GetAllValue", "T_ShiftMealTime",new { caller = "T_PositionShiftMealTimeID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionShiftMealTimeID)
			@if ( User.CanAdd("T_ShiftMealTime"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_ShiftMealTime"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Meal Time','dvPopup','" + Url.Action("CreateQuick", "T_ShiftMealTime", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_Position","T_PositionShiftTimeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftTimeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionShiftTimeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionShiftTimeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ShiftTime", @dataurl = Url.Action("GetAllValue", "T_ShiftTime",new { caller = "T_PositionShiftTimeID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionShiftTimeID)
			@if ( User.CanAdd("T_ShiftTime"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_ShiftTime"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Time','dvPopup','" + Url.Action("CreateQuick", "T_ShiftTime", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_Position","T_PositionShiftDurationID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftDurationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionShiftDurationID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionShiftDurationID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ShiftDuration", @dataurl = Url.Action("GetAllValue", "T_ShiftDuration",new { caller = "T_PositionShiftDurationID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionShiftDurationID)
			@if ( User.CanAdd("T_ShiftDuration"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_ShiftDuration"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Duration','dvPopup','" + Url.Action("CreateQuick", "T_ShiftDuration", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_Position","T_PositionOvertimeEligibilityID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionOvertimeEligibilityID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionOvertimeEligibilityID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionOvertimeEligibilityID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_OvertimeEligibility", @dataurl = Url.Action("GetAllValue", "T_OvertimeEligibility",new { caller = "T_PositionOvertimeEligibilityID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionOvertimeEligibilityID)
			@if ( User.CanAdd("T_OvertimeEligibility"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_OvertimeEligibility"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Overtime Eligibility','dvPopup','" + Url.Action("CreateQuick", "T_OvertimeEligibility", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  								  @if(User.CanView("T_Position","T_DualIncumbent"))
								{
								<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbent">
									<div class="form-group" title="Dual  Incumbent">
										<label class="col-sm-5 col-md-5 col-xs-12" >
											@Html.LabelFor(model => model.T_DualIncumbent) 
										</label>
										<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    
											@Html.CheckBox("T_DualIncumbent", false)
											@Html.ValidationMessageFor(model => model.T_DualIncumbent)		
										</div>
										</div>
									</div>   
								}                         
   @if(User.CanView("T_Position","T_DualIncumbentStartDate"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbentStartDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DualIncumbentStartDate) </label>
                                <div class="form-group" title="Dual  Incumbent  Start  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_DualIncumbentStartDate">
                                        @Html.TextBoxFor(model => model.T_DualIncumbentStartDate, new { @class = "form-control"   })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_DualIncumbentStartDate)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_DualIncumbentStartDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_DualIncumbentStartDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
							}
		  
                          
   @if(User.CanView("T_Position","T_DualIncumbentEndDate"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbentEndDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DualIncumbentEndDate) </label>
                                <div class="form-group" title="Dual  Incumbent  End  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_DualIncumbentEndDate">
                                        @Html.TextBoxFor(model => model.T_DualIncumbentEndDate, new { @class = "form-control"   })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_DualIncumbentEndDate)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_DualIncumbentEndDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_DualIncumbentEndDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
							}
		  
                          
							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48887">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#positionstatusbody" alt="Position Status" title="Position Status"><span class="glyphicon glyphicon-chevron-down"></span> Position Status</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="positionstatusbody">					
@if(User.CanView("T_Position","T_PositionStatusforPostingID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionStatusforPostingID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_PositionStatusforPostingID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_PositionStatusforPostingID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_PositionPostStatus", @dataurl = Url.Action("GetAllValue", "T_PositionPostStatus",new { caller = "T_PositionStatusforPostingID" }) })
			@Html.ValidationMessageFor(model => model.T_PositionStatusforPostingID)
			@if ( User.CanAdd("T_PositionPostStatus"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_PositionPostStatus"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Post Status','dvPopup','" + Url.Action("CreateQuick", "T_PositionPostStatus", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  								  @if(User.CanView("T_Position","T_Funded"))
								{
								<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Funded">
									<div class="form-group" title="Funded">
										<label class="col-sm-5 col-md-5 col-xs-12" >
											@Html.LabelFor(model => model.T_Funded) 
										</label>
										<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    
											@Html.CheckBox("T_Funded", false)
											@Html.ValidationMessageFor(model => model.T_Funded)		
										</div>
										</div>
									</div>   
								}                         
   @if(User.CanView("T_Position","T_EstablishedDate"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EstablishedDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EstablishedDate) <span class="text-danger-reg">*</span></label>
                                <div class="form-group" title="Established  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_EstablishedDate">
                                        @Html.TextBoxFor(model => model.T_EstablishedDate, new { @class = "form-control" ,@Value = DateTime.Now.ToString("MM/dd/yyyy")  })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_EstablishedDate)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_EstablishedDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_EstablishedDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
							}
		  
                          
   @if(User.CanView("T_Position","T_AbolishDate"))
{
		  <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AbolishDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_AbolishDate) </label>
                                <div class="form-group" title="Abolish  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_AbolishDate">
                                        @Html.TextBoxFor(model => model.T_AbolishDate, new { @class = "form-control"   })
                                        
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_AbolishDate)

								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_AbolishDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_AbolishDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
							}
		  
                          
							</div>
                         </div>
                      </div>
       </div>
                        </div>
                    </div>
                </div>
        </div>
		<a class="btn btn-default btn-sm" onclick="goBack('@Url.Action("Index","T_Position")');" alt="Cancel" title="Cancel">Cancel</a>
          @*@Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["T_PositionParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" })*@
	<input type="submit" name="command" value="Create" class="btn btn-primary btn-sm" alt="Create" title="Create"/>
    if (ViewBag.IsDDAdd == null && User.CanEdit("T_Position"))
    {
	<input type="submit" name="command" value="Create & Continue" class="btn btn-primary btn-sm" alt="Create & Continue" title="Create & Continue"/>
	}
	 <input type="hidden" name="hdncommand" value="" />
	<br/><br/>
}
	<script>
	    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
	
@{
		var businessrule = User.businessrules.Where(p => p.EntityName == "T_Position").ToList();
		
if ((businessrule != null && businessrule.Count > 0) )
    {
        <script>
            $("form").submit(function (event) {
			if (!$("#frmT_Position").valid()) return;
			var flag = true;
							document.getElementById("ErrMsg").innerHTML = "";
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                //var form = $(this).serialize();
 form = $("#frmT_Position").serialize();
  
                dataurl = "@Url.Action("businessruletype", "T_Position", new { ruleType = "OnCreate"})";
                flag = ApplyBusinessRuleOnSubmit(dataurl, "T_Position", false, "ErrMsg", form);
				//business rules on inline associations
				if (flag) {
								GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
                    $('input:hidden[name="hdncommand"]').val($(document.activeElement).val());

					 $("#frmT_Position").find(':input').removeAttr('disabled');
                }
				return flag;
			 });	
        </script>
    }
    else
    {
	<script>
            $("input[type='submit']").click(function (event) {
			if (!$("#frmT_Position").valid()) return;
                var $this = $(this);
				GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
                $('input:hidden[name="hdncommand"]').val($this.val());
            });
	</script>
           
    }
}


<script type='text/javascript'>
    $(document).ready(function () {
        try {
		 focusOnControl('frmT_Position');
        }
        catch (ex) { }
    });
</script>
<script>
    $(document).ready(function () {
        try {
            var hostingEntityName = "";
            if ('@Convert.ToString(ViewData["AssociatedType"])'.length > 0) {
                hostingEntityName = '@Convert.ToString(ViewData["AssociatedType"])';
                 $('#' + hostingEntityName + 'ID').attr("lock","true");
				  $('#' + hostingEntityName + 'ID').trigger("change");
            }
			
        }
        catch (ex) { }
		});
</script>

