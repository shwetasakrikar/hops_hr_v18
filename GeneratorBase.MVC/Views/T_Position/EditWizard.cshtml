@model GeneratorBase.MVC.Models.T_Position
@using PagedList;
@{
    ViewBag.Title = "Edit Position";
	var EditPermission = User.CanEditItem("T_Position", Model, User);
	var DeletePermission = User.CanDeleteItem("T_Position", Model, User);
}
@functions {
    object getHtmlAttributes(string Property)
    {
		if(Property=="T_PositionFill")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_SalaryBand")
		 return new { @class = "form-control", @readonly = "readonly" };
        if (User.CanEdit("T_Position", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_PositionIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_PositionIsHiddenRule);
    }
}
@using (Html.BeginForm("EditWizard", "T_Position", new { UrlReferrer = Convert.ToString(ViewData["T_PositionParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data",@id="frmT_Position" })) 
{
	@Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
    @Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.ConcurrencyKey)
	@*<label id="ErrMsg" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
    <input type="hidden" id="ErrMsg" />
    <div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
    </div>
    <div id="divDisplayBRmsgMandatory" style="display:none;">
    </div>
    <div id="divDisplayLockRecord" style="display:none;">
    </div>
    <div id="divDisplayBRReadOnly" style="display:none;">
    </div>
	<div id="divDisplayCodeFragment" style="display:none;">
	</div>
			if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        <div class="alert alert-danger" role="alert">
            <a class="close" data-dismiss="alert">&times;</a>
            @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                <p>@modelError.ErrorMessage</p>
            }
        </div>
    }
		<div class="row">
        <br />
        <div id=wizard>
			<ol>
		<li>Basic Details</li>
		<li>Position Codes</li>
		<li>Time and Other Details</li>
		<li>Position Status</li>
            @if ( User.CanEdit("T_JobAssignment"))
                {
				<li>Position Job Assignment</li>
				}
       		</ol>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Basic Details</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_Position","T_FacilityAssignedToID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FacilityAssignedToID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_FacilityAssignedToID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_FacilityAssignedToID"))
		{
			@Html.DropDownList("T_FacilityAssignedToID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Facility", @dataurl = Url.Action("GetAllValue", "T_Facility",new { caller = "T_FacilityAssignedToID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_FacilityAssignedToID, new { @class = "form-control" })
			@Html.DropDownList("T_FacilityAssignedToID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Facility", @dataurl = Url.Action("GetAllValue", "T_Facility",new { caller = "T_FacilityAssignedToID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_FacilityAssignedToID)
								 @if ( User.CanAdd("T_Facility"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Facility','dvPopup','" + Url.Action("CreateQuick", "T_Facility", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_Facility"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_Facility" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_Facility" target="_blank" href="@Url.Action("Details", "T_Facility", new { Id = Html.DisplayFor(model => model.t_facilityassignedto.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_facilityassignedto == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Facility").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Facility").attr("title", '@Model.t_facilityassignedto.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_FacilityAssignedToID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionNumber"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionNumber">
							<div class='form-group' title="Position  Number">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionNumber) <span class="text-danger-reg">*</span> </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								 
									@Html.TextBoxFor(model => model.T_PositionNumber,  getHtmlAttributes("T_PositionNumber"))
									@Html.ValidationMessageFor(model => model.T_PositionNumber)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_PositionNumber, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_TypeOfPositionID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TypeOfPositionID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_TypeOfPositionID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_TypeOfPositionID"))
		{
			@Html.DropDownList("T_TypeOfPositionID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_PositionType", @dataurl = Url.Action("GetAllValue", "T_PositionType",new { caller = "T_TypeOfPositionID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_TypeOfPositionID, new { @class = "form-control" })
			@Html.DropDownList("T_TypeOfPositionID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_PositionType", @dataurl = Url.Action("GetAllValue", "T_PositionType",new { caller = "T_TypeOfPositionID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_TypeOfPositionID)
								 @if ( User.CanAdd("T_PositionType"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Type','dvPopup','" + Url.Action("CreateQuick", "T_PositionType", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_PositionType"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_PositionType" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_PositionType" target="_blank" href="@Url.Action("Details", "T_PositionType", new { Id = Html.DisplayFor(model => model.t_typeofposition.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_typeofposition == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionType").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionType").attr("title", '@Model.t_typeofposition.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_TypeOfPositionID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_AssociatedPositionStatusID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AssociatedPositionStatusID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_AssociatedPositionStatusID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_AssociatedPositionStatusID"))
		{
			@Html.DropDownList("T_AssociatedPositionStatusID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Positionstatus", @dataurl = Url.Action("GetAllValue", "T_Positionstatus",new { caller = "T_AssociatedPositionStatusID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_AssociatedPositionStatusID, new { @class = "form-control" })
			@Html.DropDownList("T_AssociatedPositionStatusID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Positionstatus", @dataurl = Url.Action("GetAllValue", "T_Positionstatus",new { caller = "T_AssociatedPositionStatusID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_AssociatedPositionStatusID)
								 @if ( User.CanAdd("T_Positionstatus"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Status','dvPopup','" + Url.Action("CreateQuick", "T_Positionstatus", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_Positionstatus"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_Positionstatus" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_Positionstatus" target="_blank" href="@Url.Action("Details", "T_Positionstatus", new { Id = Html.DisplayFor(model => model.t_associatedpositionstatus.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_associatedpositionstatus == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Positionstatus").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Positionstatus").attr("title", '@Model.t_associatedpositionstatus.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_AssociatedPositionStatusID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionIdentifierID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionIdentifierID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionIdentifierID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionIdentifierID"))
		{
			@Html.DropDownList("T_PositionIdentifierID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_PositionLevel", @dataurl = Url.Action("GetAllValue", "T_PositionLevel",new { caller = "T_PositionIdentifierID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionIdentifierID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionIdentifierID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_PositionLevel", @dataurl = Url.Action("GetAllValue", "T_PositionLevel",new { caller = "T_PositionIdentifierID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionIdentifierID)
								 @if ( User.CanAdd("T_PositionLevel"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Level','dvPopup','" + Url.Action("CreateQuick", "T_PositionLevel", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_PositionLevel"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_PositionLevel" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_PositionLevel" target="_blank" href="@Url.Action("Details", "T_PositionLevel", new { Id = Html.DisplayFor(model => model.t_positionidentifier.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionidentifier == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionLevel").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionLevel").attr("title", '@Model.t_positionidentifier.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionIdentifierID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionFill"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionFill">
							<div class='form-group' title="Position Fill %">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionFill)  </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								 
									@Html.TextBoxFor(model => model.T_PositionFill,  getHtmlAttributes("T_PositionFill"))
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
									@Html.ValidationMessageFor(model => model.T_PositionFill)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_PositionFill, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_QuasiFill"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_QuasiFill">
							<div class="form-group" title="Quasi Fill">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_QuasiFill) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_QuasiFill", Model.T_QuasiFill.HasValue ? Model.T_QuasiFill : false)
                                    @Html.ValidationMessageFor(model => model.T_QuasiFill)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_QuasiFill, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionWorkingTitleAssociationID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionWorkingTitleAssociationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionWorkingTitleAssociationID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionWorkingTitleAssociationID"))
		{
			@Html.DropDownList("T_PositionWorkingTitleAssociationID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_WorkingTitle", @dataurl = Url.Action("GetAllValue", "T_WorkingTitle",new { caller = "T_PositionWorkingTitleAssociationID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionWorkingTitleAssociationID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionWorkingTitleAssociationID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_WorkingTitle", @dataurl = Url.Action("GetAllValue", "T_WorkingTitle",new { caller = "T_PositionWorkingTitleAssociationID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionWorkingTitleAssociationID)
								 @if ( User.CanAdd("T_WorkingTitle"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Working Title ','dvPopup','" + Url.Action("CreateQuick", "T_WorkingTitle", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionWorkingTitleAssociationID, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Position Codes</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_Position","T_EffectiveDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EffectiveDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EffectiveDate) </label>
                                <div class="form-group" title="Role change effective date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_EffectiveDate">
									    @Html.TextBoxFor(model => model.T_EffectiveDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Position", "T_EffectiveDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_EffectiveDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_EffectiveDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_EffectiveDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_EffectiveDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_EffectiveDate, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionRoleCodeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionRoleCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionRoleCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionRoleCodeID"))
		{
			@Html.DropDownList("T_PositionRoleCodeID", null, "-- Select --", new {  @derivedurl = Url.Action("GetDerivedDetails", "T_Position", new { IgnoreEditable = Convert.ToString(ViewData["AssociatedType"])}),   @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_RoleCode", @dataurl = Url.Action("GetAllValue", "T_RoleCode",new { caller = "T_PositionRoleCodeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionRoleCodeID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionRoleCodeID", null, "-- Select --", new { @derivedurl = Url.Action("GetDerivedDetails", "T_Position", new { IgnoreEditable = Convert.ToString(ViewData["AssociatedType"])}),    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_RoleCode", @dataurl = Url.Action("GetAllValue", "T_RoleCode",new { caller = "T_PositionRoleCodeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionRoleCodeID)
								 @if ( User.CanAdd("T_RoleCode"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Role Code','dvPopup','" + Url.Action("CreateQuick", "T_RoleCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_RoleCode"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_RoleCode" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_RoleCode" target="_blank" href="@Url.Action("Details", "T_RoleCode", new { Id = Html.DisplayFor(model => model.t_positionrolecode.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionrolecode == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_RoleCode").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_RoleCode").attr("title", '@Model.t_positionrolecode.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionRoleCodeID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_SalaryBand"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_SalaryBand">
							<div class='form-group' title="Salary Band">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_SalaryBand)  </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								 
									@Html.TextBoxFor(model => model.T_SalaryBand,  getHtmlAttributes("T_SalaryBand"))
									@Html.ValidationMessageFor(model => model.T_SalaryBand)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_SalaryBand, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionSOCCodeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionSOCCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionSOCCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionSOCCodeID"))
		{
			@Html.DropDownList("T_PositionSOCCodeID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_SocCode", @dataurl = Url.Action("GetAllValue", "T_SocCode",new { caller = "T_PositionSOCCodeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionSOCCodeID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionSOCCodeID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_SocCode", @dataurl = Url.Action("GetAllValue", "T_SocCode",new { caller = "T_PositionSOCCodeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionSOCCodeID)
								 @if ( User.CanAdd("T_SocCode"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','SOC Code','dvPopup','" + Url.Action("CreateQuick", "T_SocCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_SocCode"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_SocCode" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_SocCode" target="_blank" href="@Url.Action("Details", "T_SocCode", new { Id = Html.DisplayFor(model => model.t_positionsoccode.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionsoccode == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_SocCode").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_SocCode").attr("title", '@Model.t_positionsoccode.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionSOCCodeID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionClassCodeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionClassCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionClassCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionClassCodeID"))
		{
			@Html.DropDownList("T_PositionClassCodeID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_ClassCode", @dataurl = Url.Action("GetAllValue", "T_ClassCode",new { caller = "T_PositionClassCodeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionClassCodeID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionClassCodeID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_ClassCode", @dataurl = Url.Action("GetAllValue", "T_ClassCode",new { caller = "T_PositionClassCodeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionClassCodeID)
								 @if ( User.CanAdd("T_ClassCode"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Class Code','dvPopup','" + Url.Action("CreateQuick", "T_ClassCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_ClassCode"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_ClassCode" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_ClassCode" target="_blank" href="@Url.Action("Details", "T_ClassCode", new { Id = Html.DisplayFor(model => model.t_positionclasscode.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionclasscode == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ClassCode").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ClassCode").attr("title", '@Model.t_positionclasscode.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionClassCodeID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_WorkersCompCodePositionID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_WorkersCompCodePositionID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_WorkersCompCodePositionID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_WorkersCompCodePositionID"))
		{
			@Html.DropDownList("T_WorkersCompCodePositionID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_WCCode", @dataurl = Url.Action("GetAllValue", "T_WCCode",new { caller = "T_WorkersCompCodePositionID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_WorkersCompCodePositionID, new { @class = "form-control" })
			@Html.DropDownList("T_WorkersCompCodePositionID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_WCCode", @dataurl = Url.Action("GetAllValue", "T_WCCode",new { caller = "T_WorkersCompCodePositionID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_WorkersCompCodePositionID)
								 @if ( User.CanAdd("T_WCCode"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','WC Code','dvPopup','" + Url.Action("CreateQuick", "T_WCCode", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_WCCode"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_WCCode" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_WCCode" target="_blank" href="@Url.Action("Details", "T_WCCode", new { Id = Html.DisplayFor(model => model.t_workerscompcodeposition.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_workerscompcodeposition == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_WCCode").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_WCCode").attr("title", '@Model.t_workerscompcodeposition.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_WorkersCompCodePositionID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_CardApprvr"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_CardApprvr">
							<div class='form-group' title="CardApprvr">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_CardApprvr)  </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								 
									@Html.TextBoxFor(model => model.T_CardApprvr,  getHtmlAttributes("T_CardApprvr"))
									@Html.ValidationMessageFor(model => model.T_CardApprvr)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_CardApprvr, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionCostCenterAssociationID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionCostCenterAssociationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionCostCenterAssociationID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionCostCenterAssociationID"))
		{
			@Html.DropDownList("T_PositionCostCenterAssociationID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_CostCenter", @dataurl = Url.Action("GetAllValue", "T_CostCenter",new { caller = "T_PositionCostCenterAssociationID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionCostCenterAssociationID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionCostCenterAssociationID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_CostCenter", @dataurl = Url.Action("GetAllValue", "T_CostCenter",new { caller = "T_PositionCostCenterAssociationID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionCostCenterAssociationID)
								 @if ( User.CanAdd("T_CostCenter"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','CardDept','dvPopup','" + Url.Action("CreateQuick", "T_CostCenter", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionCostCenterAssociationID, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Time and Other Details</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_Position","T_ShiftStart"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ShiftStart">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ShiftStart) </label>
                                <div class="form-group" title="Shift Start">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ShiftStart">
									    @Html.TextBoxFor(model => model.T_ShiftStart, "{0:hh:mm tt}", User.CanEdit("T_Position", "T_ShiftStart") ? (object)new {@class = "form-control",@actualvalue = Model.T_ShiftStart.HasValue ? Model.T_ShiftStart.Value : DateTime.UtcNow,@format = "hh:mm" } : (object)new { @class = "form-control", @readonly="readonly",@actualvalue = Model.T_ShiftStart.HasValue ? Model.T_ShiftStart.Value : DateTime.UtcNow,@format = "hh:mm"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ShiftStart)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_ShiftStart"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ShiftStart').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                        $('#datetimepickerT_ShiftStart').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ShiftStart, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_ShiftEnd"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ShiftEnd">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ShiftEnd) </label>
                                <div class="form-group" title="Shift End">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ShiftEnd">
									    @Html.TextBoxFor(model => model.T_ShiftEnd, "{0:hh:mm tt}", User.CanEdit("T_Position", "T_ShiftEnd") ? (object)new {@class = "form-control",@actualvalue = Model.T_ShiftEnd.HasValue ? Model.T_ShiftEnd.Value : DateTime.UtcNow,@format = "hh:mm" } : (object)new { @class = "form-control", @readonly="readonly",@actualvalue = Model.T_ShiftEnd.HasValue ? Model.T_ShiftEnd.Value : DateTime.UtcNow,@format = "hh:mm"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ShiftEnd)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_ShiftEnd"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ShiftEnd').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                        $('#datetimepickerT_ShiftEnd').datetimepicker({ pickDate:false, minuteStepping: 15 });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ShiftEnd, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionShiftMealTimeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftMealTimeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionShiftMealTimeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionShiftMealTimeID"))
		{
			@Html.DropDownList("T_PositionShiftMealTimeID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_ShiftMealTime", @dataurl = Url.Action("GetAllValue", "T_ShiftMealTime",new { caller = "T_PositionShiftMealTimeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionShiftMealTimeID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionShiftMealTimeID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_ShiftMealTime", @dataurl = Url.Action("GetAllValue", "T_ShiftMealTime",new { caller = "T_PositionShiftMealTimeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionShiftMealTimeID)
								 @if ( User.CanAdd("T_ShiftMealTime"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Meal Time','dvPopup','" + Url.Action("CreateQuick", "T_ShiftMealTime", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_ShiftMealTime"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_ShiftMealTime" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_ShiftMealTime" target="_blank" href="@Url.Action("Details", "T_ShiftMealTime", new { Id = Html.DisplayFor(model => model.t_positionshiftmealtime.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionshiftmealtime == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftMealTime").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftMealTime").attr("title", '@Model.t_positionshiftmealtime.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionShiftMealTimeID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionShiftTimeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftTimeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionShiftTimeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionShiftTimeID"))
		{
			@Html.DropDownList("T_PositionShiftTimeID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_ShiftTime", @dataurl = Url.Action("GetAllValue", "T_ShiftTime",new { caller = "T_PositionShiftTimeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionShiftTimeID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionShiftTimeID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_ShiftTime", @dataurl = Url.Action("GetAllValue", "T_ShiftTime",new { caller = "T_PositionShiftTimeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionShiftTimeID)
								 @if ( User.CanAdd("T_ShiftTime"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Time','dvPopup','" + Url.Action("CreateQuick", "T_ShiftTime", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_ShiftTime"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_ShiftTime" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_ShiftTime" target="_blank" href="@Url.Action("Details", "T_ShiftTime", new { Id = Html.DisplayFor(model => model.t_positionshifttime.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionshifttime == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftTime").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftTime").attr("title", '@Model.t_positionshifttime.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionShiftTimeID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionShiftDurationID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionShiftDurationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionShiftDurationID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionShiftDurationID"))
		{
			@Html.DropDownList("T_PositionShiftDurationID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_ShiftDuration", @dataurl = Url.Action("GetAllValue", "T_ShiftDuration",new { caller = "T_PositionShiftDurationID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionShiftDurationID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionShiftDurationID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_ShiftDuration", @dataurl = Url.Action("GetAllValue", "T_ShiftDuration",new { caller = "T_PositionShiftDurationID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionShiftDurationID)
								 @if ( User.CanAdd("T_ShiftDuration"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Duration','dvPopup','" + Url.Action("CreateQuick", "T_ShiftDuration", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_ShiftDuration"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_ShiftDuration" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_ShiftDuration" target="_blank" href="@Url.Action("Details", "T_ShiftDuration", new { Id = Html.DisplayFor(model => model.t_positionshiftduration.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionshiftduration == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftDuration").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_ShiftDuration").attr("title", '@Model.t_positionshiftduration.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionShiftDurationID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_PositionOvertimeEligibilityID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionOvertimeEligibilityID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionOvertimeEligibilityID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionOvertimeEligibilityID"))
		{
			@Html.DropDownList("T_PositionOvertimeEligibilityID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_OvertimeEligibility", @dataurl = Url.Action("GetAllValue", "T_OvertimeEligibility",new { caller = "T_PositionOvertimeEligibilityID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionOvertimeEligibilityID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionOvertimeEligibilityID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_OvertimeEligibility", @dataurl = Url.Action("GetAllValue", "T_OvertimeEligibility",new { caller = "T_PositionOvertimeEligibilityID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionOvertimeEligibilityID)
								 @if ( User.CanAdd("T_OvertimeEligibility"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Overtime Eligibility','dvPopup','" + Url.Action("CreateQuick", "T_OvertimeEligibility", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_OvertimeEligibility"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_OvertimeEligibility" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_OvertimeEligibility" target="_blank" href="@Url.Action("Details", "T_OvertimeEligibility", new { Id = Html.DisplayFor(model => model.t_positionovertimeeligibility.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionovertimeeligibility == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_OvertimeEligibility").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_OvertimeEligibility").attr("title", '@Model.t_positionovertimeeligibility.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionOvertimeEligibilityID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_DualIncumbent"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbent">
							<div class="form-group" title="Dual  Incumbent">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_DualIncumbent) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_DualIncumbent", Model.T_DualIncumbent.HasValue ? Model.T_DualIncumbent : false)
                                    @Html.ValidationMessageFor(model => model.T_DualIncumbent)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_DualIncumbent, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_DualIncumbentStartDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbentStartDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DualIncumbentStartDate) </label>
                                <div class="form-group" title="Dual  Incumbent  Start  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_DualIncumbentStartDate">
									    @Html.TextBoxFor(model => model.T_DualIncumbentStartDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Position", "T_DualIncumbentStartDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_DualIncumbentStartDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_DualIncumbentStartDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_DualIncumbentStartDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_DualIncumbentStartDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_DualIncumbentStartDate, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_DualIncumbentEndDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DualIncumbentEndDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DualIncumbentEndDate) </label>
                                <div class="form-group" title="Dual  Incumbent  End  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_DualIncumbentEndDate">
									    @Html.TextBoxFor(model => model.T_DualIncumbentEndDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Position", "T_DualIncumbentEndDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_DualIncumbentEndDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_DualIncumbentEndDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_DualIncumbentEndDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_DualIncumbentEndDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_DualIncumbentEndDate, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Position Status</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_Position","T_PositionStatusforPostingID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PositionStatusforPostingID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PositionStatusforPostingID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_Position", "T_PositionStatusforPostingID"))
		{
			@Html.DropDownList("T_PositionStatusforPostingID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_PositionPostStatus", @dataurl = Url.Action("GetAllValue", "T_PositionPostStatus",new { caller = "T_PositionStatusforPostingID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_PositionStatusforPostingID, new { @class = "form-control" })
			@Html.DropDownList("T_PositionStatusforPostingID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_PositionPostStatus", @dataurl = Url.Action("GetAllValue", "T_PositionPostStatus",new { caller = "T_PositionStatusforPostingID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_PositionStatusforPostingID)
								 @if ( User.CanAdd("T_PositionPostStatus"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Position Post Status','dvPopup','" + Url.Action("CreateQuick", "T_PositionPostStatus", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_PositionPostStatus"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_PositionPostStatus" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_PositionPostStatus" target="_blank" href="@Url.Action("Details", "T_PositionPostStatus", new { Id = Html.DisplayFor(model => model.t_positionstatusforposting.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_positionstatusforposting == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionPostStatus").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_PositionPostStatus").attr("title", '@Model.t_positionstatusforposting.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_PositionStatusforPostingID, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_Funded"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Funded">
							<div class="form-group" title="Funded">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_Funded) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_Funded", Model.T_Funded.HasValue ? Model.T_Funded : false)
                                    @Html.ValidationMessageFor(model => model.T_Funded)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_Funded, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_EstablishedDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EstablishedDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EstablishedDate) <span class="text-danger-reg">*</span></label>
                                <div class="form-group" title="Established  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_EstablishedDate">
									    @Html.TextBoxFor(model => model.T_EstablishedDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Position", "T_EstablishedDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_EstablishedDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_EstablishedDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_EstablishedDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_EstablishedDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_EstablishedDate, new { @class = "form-control" })}
@if(User.CanView("T_Position","T_AbolishDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AbolishDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_AbolishDate) </label>
                                <div class="form-group" title="Abolish  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_AbolishDate">
									    @Html.TextBoxFor(model => model.T_AbolishDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Position", "T_AbolishDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_AbolishDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_Position", "T_AbolishDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_AbolishDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_AbolishDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_AbolishDate, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
@if ( User.CanEdit("T_JobAssignment"))
                {
			<div>
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Position Job Assignment</h3>
                            </div>
                            <div class="panel-body" id="T_PositionJobAssignment">
                                @if ( User.CanView("T_JobAssignment"))
                                {
                                    Html.RenderAction("Index", "T_JobAssignment", new {RenderPartial=true, HostingEntity = "T_Position", HostingEntityID = @Model.Id == null ? 0 : @Model.Id, AssociatedType = "T_PositionJobAssignment" });
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
			}
</div>
   @Html.ActionLink("C", "Cancel", new { UrlReferrer = ViewData["T_PositionParentUrl"] }, new { @id = "cancel", @style = "display:none;" })
        @if (EditPermission)
        {
            <input type="submit"  name="command" id="WizardSubmit" style="display:none;" />
        }
        <input type="hidden" name="hdncommand" value="" />
    </div>
 <br />
}
<script>
    $(document).ready(function () {
        try {
            focusOnControl('frmT_Position');
        }
        catch (ex) { }
    });
</script>
 <script>

   
    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
<script>
	$("input[type='submit']").click(function (event) {
	if (!$("#frmT_Position").valid()) return;
	var $this = $(this);
					GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
	$('input:hidden[name="hdncommand"]').val($this.val());
	});
	$(document).ready(function () {
		DisableTabOnReadonlyProperty("frmT_Donation");
	});
</script>
@{
var businessrule = User.businessrules.Where(p => p.EntityName == "T_Position").ToList();

if ((businessrule != null && businessrule.Count > 0) )
{
var ruleids = businessrule.Select(q => q.Id).ToList();
var typelist  = string.Join(",", (new GeneratorBase.MVC.Models.RuleActionContext()).RuleActions.Where(p => ruleids.Contains(p.RuleActionID.Value) && p.associatedactiontype.TypeNo.HasValue).Select(p => p.associatedactiontype.TypeNo.Value).Distinct().ToList());

    <script>
		$(document).ready(function () {
				document.getElementById("ErrMsg").innerHTML = "";
				var flag = true;
                var dataurl = "";
                var form = "";
                var inlinecount = "0";

				 form = $("#frmT_Position").serialize();
				dataurl = "@Url.Action("businessruletype", "T_Position", new { ruleType = "OnEdit"})";
                ApplyBusinessRuleOnPageLoad("@typelist", dataurl, "T_Position", false, "ErrMsg", form);
				//business rules on inline associations

    });
</script>
<script>
    $("form").submit(function (event) {
	if (!$("#frmT_Position").valid()) return;
			document.getElementById("ErrMsg").innerHTML = "";
            var flag = true;
            var dataurl = "";
            var form = "";
            var inlinecount = "0";
			 form = $("#frmT_Position").serialize();
   
				 dataurl = "@Url.Action("businessruletype", "T_Position", new { ruleType = "OnEdit"})";
                 flag = ApplyBusinessRuleOnSubmit(dataurl, "T_Position", false, "ErrMsg", form);

  				 //business rules on inline associations
               
			 if (flag)
                    $("form").find(':input').removeAttr('disabled');
            return flag;
		});
		 $(document).ready(function () {
                $("input[type='submit']").on('blur', function () {
                    $("input[type='submit']").removeAttr('disabled');
                });
               
            });
</script>
}
 
}


