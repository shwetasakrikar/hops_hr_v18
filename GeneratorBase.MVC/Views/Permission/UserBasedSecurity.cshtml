@model GeneratorBase.MVC.Models.USB
@{
    ViewBag.Title = "User Based Security";
    var isHierarchy = Model.security.Any(p => !string.IsNullOrEmpty(p.Other1));
}
<link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
<script language="JavaScript">
    function SetGrid() {
        var value = $('#EntityList').val();
        var url = $('#EntityList').attr("dataurl");
        window.location.href = url + "?key=" + value;
    }
</script>
<div class="row">
    <label>@ViewData["IsHieararchy"]</label>
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-edit text-primary"></i> Set User Based Security for Application <i class="glyphicon glyphicon-chevron-right small"></i>
        </h1>
        @if (ViewData["AlreadySet"] != null)
        {
            <h2 class="text-primary">Application has security applied on - @Convert.ToString(ViewData["AlreadySet"])</h2>
        }
    </div>
</div>
<div class="form-horizontal">
    @Html.ValidationSummary(true)
    <div class="tabbable responsive">
        @using (Html.BeginForm("SaveUBS", "Permission", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-12">
                    @Html.DropDownList("EntityList", null, new { @onchange = "SetGrid();", @class = "form-control hidden", @dataurl = Url.Action("UserBasedSecurity", "Permission", null) })
                    <div id="r">
                    </div>
                </div>
            </div>
            <div id="Des_Table" class="table-responsive" style="overflow-x:inherit;">
                <table class="table table-striped table-bordered table-hover table-condensed">
                    <tr>
                        <th>Entity</th>
                        <th>Target Entity</th>
                        @*<th>Association Name</th>*@
                        <th>Ignore For Roles</th>
                        @if (isHierarchy)
                        {
                            <th>Enable Hierarchy</th>
                        }
                    </tr>
                    @*@foreach (var item in Model.security)*@
                    @for (int i = 0; i < Model.security.Count; i++)
                    {
                        var Entity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.security[i].EntityName);
                        var TargetEntity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.security[i].TargetEntityName);
                        var DisplayNameEntity = Entity == null ? Model.security[i].EntityName : Entity.DisplayName;
                        var DisplayNameTargetEntity = TargetEntity == null ? Model.security[i].TargetEntityName : TargetEntity.DisplayName;
                        <tr>
                            <td>
                                @Html.HiddenFor(modelItem => Model.security[i].EntityName)
                                @DisplayNameEntity
                            </td>
                            <td>
                                @Html.HiddenFor(modelItem => Model.security[i].TargetEntityName)
                                @DisplayNameTargetEntity
                            </td>
                            @Html.HiddenFor(modelItem => Model.security[i].AssociationName)
                            <td id="@("Roles"+i)" name="Roles">
                                @Html.TextBoxFor(modelItem => Model.security[i].RolesToIgnore, new { style = "border:none;Width:0px;" })
                                @Html.DropDownList("Roles", null, new { id = "SelectRoles_" + i, @multiple = "multiple" })
                            </td>
                            @if (isHierarchy)
                            {
                                <td id="@("Hierarchy" + i)" name="Hierarchy">
                                    @if (!string.IsNullOrEmpty(Model.security[i].Other1))
                                    {
                                        @Html.TextBoxFor(modelItem => Model.security[i].Other1, new { style = "border:none;Width:0px;" })
                                        @Html.CheckBox("Hierarchy", new { id = "EnableHierarchy_" + i })
                                    }
                                    else
                                    { <label></label> }
                                </td>
                            }
                            @Html.HiddenFor(modelItem => Model.security[i].IsMainEntity)
                        </tr>
                    }
                </table>
            </div>
            <br />
            @Html.ActionLink("Back to Admin Settings", "Index", "Admin", null, new { @class = "btn btn-default btn-sm", @style = "margin-right:3px" })
            if (User.CanAddAdminFeature("UserBasedSecurity"))
            {
                @Html.ActionLink("Reset Security", "ClearUBS", "Permission", null, new { @class = "btn btn-primary btn-sm" })
                <input type="submit" value="Save" class="btn btn-primary btn-sm" />
            }
        }
    </div>
</div>
<script>
    $("form").submit(function () {
        $('td[name=Hierarchy]').each(function (e) {
            catname = $(this).attr('id');
            var firstInput = $("#" + catname).find('input[type=text]').filter(':visible:first');
            var firstcheckbox = $("#" + catname).find('input[type=checkbox]').filter(':visible:first');
            var txtid = firstInput.attr('id');
            var chkid = firstcheckbox.attr('id');
            var checked = "false";
            if ($("input[id='" + chkid + "']:checked").length == '1')
                checked = "true";
            $("#" + txtid).val(checked);
        });
        $('td[name=Roles]').each(function (e) {
            catname = $(this).attr('id');
            var firstInput = $("#" + catname).find('input[type=text],input[type=password],input[type=radio],input[type=checkbox],textarea,select').filter(':visible:first');
            var firstButton = $("#" + catname).find('button').filter(':first');
            var txtid = firstInput.attr('id');
            var btntitle = firstButton.attr('title');
            if (firstButton != null) {
                if (btntitle != 'None selected')
                    $("#" + txtid).val(btntitle);
                else
                    $("#" + txtid).val('');
            }
        });
        if ($(this).find('.input-validation-error').length == 0) {
            $(this).find(':submit').attr('disabled', 'disabled');
        }
    });
</script>
<script src="@Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")" type="text/javascript"></script>
<script>
    $(function () {
        $("#EntityList option").each(function (i, e) {
            $("<input type='radio' name='r' >" + $(this).text() + " </input>")
            .attr("value", $(this).val())
            .attr("checked", $(this).attr("selected") == "selected")
            .click(function () {
                $("#EntityList").val($(this).val());
                $('#EntityList').trigger('change');
            })
            .appendTo("#r");
        });
        $("#EntityList").change(function () {
            $("input[name='r'][value='" + this.value + "']").attr("checked", "checked");
        });
    });
    $(document).ready(function () {
        $('td[name=Hierarchy]').each(function (e) {
            catname = $(this).attr('id');
            var firstInput = $("#" + catname).find('input[type=text]');
            if (firstInput != null && firstInput != undefined) {
                var firstcheckbox = $("#" + catname).find('input[type=checkbox]').filter(':visible:first');
                var txtid = firstInput.attr('id');
                var chkid = firstcheckbox.attr('id');
                if (firstInput != null && txtid != undefined) {
                    var txtvalue = $("#" + txtid).attr('value');
                    if (txtvalue.length > 0) {
                        if (txtvalue == "true")
                            firstcheckbox.attr("checked", "checked");
                    }
                }
            }
        });
        $('select[name=Roles]').multiselect({
            buttonWidth: '100%'
        });
        $('td[name=Roles]').each(function (e) {
            catname = $(this).attr('id');
            var firstInput = $("#" + catname).find('input[type=text],input[type=password],input[type=radio],input[type=checkbox],textarea,select').filter(':visible:first');
            var firstButton = $("#" + catname).find('button').filter(':first');
            var firstSelect = $("#" + catname).find('select').filter(':first');
            var txtid = firstInput.attr('id');
            var selectid = firstSelect.attr('id');
            var btntitle = firstButton.attr('title');
            if (firstInput != null) {
                var txtvalue = $("#" + txtid).attr('value');
                if (txtvalue.length > 0) {
                    var separated = txtvalue.split(",");
                    for (var i = 0, length = separated.length; i < length; i++) {
                        var chunk = $.trim(separated[i]);
                        var ele = document.getElementById(selectid);
                        for (var o = 0; o < ele.options.length; o++) {
                            if ($.trim(ele.options[o].value) == chunk) {
                                ele.options[o].selected = true;
                            }
                        }
                    } $("#" + selectid).multiselect('refresh');
                }
            }
        });
    });
</script>