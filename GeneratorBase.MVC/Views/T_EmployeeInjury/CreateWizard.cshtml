@model GeneratorBase.MVC.Models.T_EmployeeInjury
@{
    if (!string.IsNullOrEmpty(ViewBag.T_EmployeeInjuryIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_EmployeeInjuryIsHiddenRule);
    }
}
@using (Html.BeginForm("CreateWizard", "T_EmployeeInjury",new {UrlReferrer = Convert.ToString(ViewData["T_EmployeeInjuryParentUrl"])}, FormMethod.Post, new { enctype = "multipart/form-data" ,id="frmT_EmployeeInjury" }))
{
    @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
	 <input type="hidden" id="ErrMsg" />
                            @*<label id="ErrMsg" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
                            <div id="divDisplayThresholdLimit" style="display:none;">
                            </div>
							<div id="divDisplayBRmsgMandatory" style="display:none;">
                            </div>
                            <div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
                            </div>
							<div id="divDisplayCodeFragment" style="display:none;">
							</div>
    <div class="row">
	<br/>
	<div id = "wizard">
	<ol>
		<li>Basic Information</li>
		<li>Accident Details</li>
		<li>Restriction</li>
		<li>Notes</li>
	
			@if ( (User.CanAdd("T_ClaimType") && User.CanAdd("T_TypeofClaim")))
                {
				<li>Claim Type</li>
				}
			@if ( (User.CanAdd("T_Restrictions") && User.CanAdd("T_TypeOfRestrictions")))
                {
				<li>Restrictions</li>
				}
	</ol>
			<div>
               <div class="row">         
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default AppForm">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
<!-- T_EmployeeEmployeeInjury ---- Employee Employee Injury-->
<!-- T_TypeofClaimMCI ---- Type of Claim MCI-->
<!-- T_ClaimNo ---- Claim No.-->
<!-- T_OSHA ---- OSHA-->
<!-- T_AccidentShift ---- Accident Shift -->
<!-- T_Location ---- Location -->
                                            <h3 class="panel-title">Basic Information</h3>
                                        </div>
                                        <div class="panel-body">
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeEmployeeInjury">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeEmployeeInjuryID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeEmployeeInjuryID", null, "-- Select --", new {    @required ="required",     @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeEmployeeInjuryID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeEmployeeInjuryID)
								@if ( User.CanAdd("T_Employee"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Employee','dvPopup','" + Url.Action("CreateQuick", "T_Employee", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TypeofClaimMCI">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_TypeofClaimMCIID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_TypeofClaimMCIID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ClaimTypeMCI", @dataurl = Url.Action("GetAllValue", "T_ClaimTypeMCI",new { caller = "T_TypeofClaimMCIID" }) })
                                @Html.ValidationMessageFor(model => model.T_TypeofClaimMCIID)
								@if ( User.CanAdd("T_ClaimTypeMCI"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Type of Claim MCI','dvPopup','" + Url.Action("CreateQuick", "T_ClaimTypeMCI", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
					<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ClaimNo">
                                <div class='form-group' title="Claim  No.">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ClaimNo) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_ClaimNo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_ClaimNo)
									</div>
                                </div>
					</div>
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_OSHA">
							<div class="form-group" title="O S H A">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_OSHA) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    
									@Html.CheckBox("T_OSHA", false)
                                    @Html.ValidationMessageFor(model => model.T_OSHA)		
								</div>
                                </div>
                            </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AccidentShift">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_AccidentShiftID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_AccidentShiftID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_ShiftTime", @dataurl = Url.Action("GetAllValue", "T_ShiftTime",new { caller = "T_AccidentShiftID" }) })
                                @Html.ValidationMessageFor(model => model.T_AccidentShiftID)
								@if ( User.CanAdd("T_ShiftTime"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Shift Working When Accident Occurred','dvPopup','" + Url.Action("CreateQuick", "T_ShiftTime", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
					<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Location">
                                <div class='form-group' title="Location">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_Location) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_Location, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Location)
									</div>
                                </div>
					</div>
							</div>
                         </div>
                      </div>
				  </div>
       </div>
			<div>
               <div class="row">         
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default AppForm">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
<!-- T_FacilityAccidentOccured ---- Facility Accident Occured-->
<!-- T_UnitWhereAccidentOccured ---- Unit Where Accident Occured-->
<!-- T_EmployeInjuryFloor ---- Employe Injury Floor-->
<!-- T_LocationOfAccident ---- Location Of Accident-->
<!-- T_AccidentDate ---- Accident Date & Time-->
<!-- T_DescribeHowInjuryOrIllnessOccurred ---- Describe How Injury Or Illness Occurred-->
<!-- T_EmployeeInjuryCause ---- Employee Injury Cause-->
<!-- T_EmployeeInjuryNature ---- Employee Injury Nature-->
<!-- T_EmployeeInjuryBodyPartsAffected ---- Employee Injury Body Parts Affected-->
<!-- T_EMployeeInjuryMachineTool ---- EMployee Injury Machine Tool-->
<!-- T_InitialTreatmentList ---- Initial Treatment List-->
<!-- T_PatientInvolvedRegnoepi ---- Patient Involved (Regnoepi)-->
<!-- T_EmployeeInjuryMedicalFacilityForTreatment ---- Employee Injury Medical Facility For Treatment-->
<!-- T_ExaminingPhysician ---- Examining Physician-->
<!-- T_ReferringPhysician ---- Referring Physician-->
<!-- T_Diagnosis ---- Diagnosis -->
                                            <h3 class="panel-title">Accident Details</h3>
                                        </div>
                                        <div class="panel-body">
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FacilityAccidentOccured">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_FacilityAccidentOccuredID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_FacilityAccidentOccuredID", null, "-- Select --", new {      @onchange = Html.Raw("ClearChildDD('T_UnitWhereAccidentOccuredID',this,'false');ClearChildDD('T_EmployeInjuryFloorID',this,'false');") ,  @class = "chosen-select form-control", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_FacilityAccidentOccuredID" }) })
                                @Html.ValidationMessageFor(model => model.T_FacilityAccidentOccuredID)
								@if ( User.CanAdd("T_AllFacilities"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Facility Accident Occurred At','dvPopup','" + Url.Action("CreateQuick", "T_AllFacilities", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_UnitWhereAccidentOccured">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_UnitWhereAccidentOccuredID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_UnitWhereAccidentOccuredID", null, "-- Select --", new {    @ParentDD = "T_FacilityAccidentOccuredID" , @AssoNameWithParent = "T_UnitsforAllFaciltiesID" ,  @onchange = Html.Raw("ClearChildDD('T_EmployeInjuryFloorID',this,'false');") ,  @class = "chosen-select form-control", @HostingName = "T_AllFacilitiesUnit", @dataurl = Url.Action("GetAllValue", "T_AllFacilitiesUnit",new { caller = "T_UnitWhereAccidentOccuredID" }) })
                                @Html.ValidationMessageFor(model => model.T_UnitWhereAccidentOccuredID)
								@if ( User.CanAdd("T_AllFacilitiesUnit"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Unit Where Accident Occured','dvPopup','" + Url.Action("CreateQuick", "T_AllFacilitiesUnit", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeInjuryFloor">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeInjuryFloorID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeInjuryFloorID", null, "-- Select --", new {    @ParentDD = "T_FacilityAccidentOccuredID,T_UnitWhereAccidentOccuredID" , @AssoNameWithParent = "T_AllUnitsFloorID" ,   @class = "chosen-select form-control", @HostingName = "T_AllFacilitiesFloor", @dataurl = Url.Action("GetAllValue", "T_AllFacilitiesFloor",new { caller = "T_EmployeInjuryFloorID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeInjuryFloorID)
								@if ( User.CanAdd("T_AllFacilitiesFloor"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Floor Accident Occurred on','dvPopup','" + Url.Action("CreateQuick", "T_AllFacilitiesFloor", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_LocationOfAccident">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_LocationOfAccidentID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_LocationOfAccidentID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_WCAccident", @dataurl = Url.Action("GetAllValue", "T_WCAccident",new { caller = "T_LocationOfAccidentID" }) })
                                @Html.ValidationMessageFor(model => model.T_LocationOfAccidentID)
								@if ( User.CanAdd("T_WCAccident"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Location Of Accident','dvPopup','" + Url.Action("CreateQuick", "T_WCAccident", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AccidentDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_AccidentDate) <span class="text-danger-reg">*</span></label>
                                <div class="form-group" title="Accident Date & Time">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_AccidentDate">
                                        @Html.TextBoxFor(model => model.T_AccidentDate, new {@class = "form-control",@Value = DateTime.Now.ToString("MM/dd/yyyy hh:mm tt"),@format = "MM/DD/YYYY hh:mm" })
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                        
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_AccidentDate)
								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_AccidentDate').datetimepicker({IsRequired: true});
                                        $('#datetimepickerT_AccidentDate').datetimepicker({IsRequired: true});
                                    });
                                </script>
                            </div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DescribeHowInjuryOrIllnessOccurred">
                                <div class='form-group' title="Describe  How  Injury  Or  Illness  Occurred">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DescribeHowInjuryOrIllnessOccurred) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_DescribeHowInjuryOrIllnessOccurred, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_DescribeHowInjuryOrIllnessOccurred)
									</div>
                                </div>
						</div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeInjuryCause">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeInjuryCauseID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeInjuryCauseID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_InjuryCause", @dataurl = Url.Action("GetAllValue", "T_InjuryCause",new { caller = "T_EmployeeInjuryCauseID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeInjuryCauseID)
								@if ( User.CanAdd("T_InjuryCause"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Cause Of Injury ','dvPopup','" + Url.Action("CreateQuick", "T_InjuryCause", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeInjuryNature">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeInjuryNatureID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeInjuryNatureID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_InjuryNature", @dataurl = Url.Action("GetAllValue", "T_InjuryNature",new { caller = "T_EmployeeInjuryNatureID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeInjuryNatureID)
								@if ( User.CanAdd("T_InjuryNature"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Nature Of Injury Or Illness','dvPopup','" + Url.Action("CreateQuick", "T_InjuryNature", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeInjuryBodyPartsAffected">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeInjuryBodyPartsAffectedID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeInjuryBodyPartsAffectedID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_BodyPartsAffected", @dataurl = Url.Action("GetAllValue", "T_BodyPartsAffected",new { caller = "T_EmployeeInjuryBodyPartsAffectedID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeInjuryBodyPartsAffectedID)
								@if ( User.CanAdd("T_BodyPartsAffected"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Parts Of Body Affected','dvPopup','" + Url.Action("CreateQuick", "T_BodyPartsAffected", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EMployeeInjuryMachineTool">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EMployeeInjuryMachineToolID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EMployeeInjuryMachineToolID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_MachineTool", @dataurl = Url.Action("GetAllValue", "T_MachineTool",new { caller = "T_EMployeeInjuryMachineToolID" }) })
                                @Html.ValidationMessageFor(model => model.T_EMployeeInjuryMachineToolID)
								@if ( User.CanAdd("T_MachineTool"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Machine, Tool Or Object Causing Illness Or Injury ','dvPopup','" + Url.Action("CreateQuick", "T_MachineTool", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_InitialTreatmentList">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_InitialTreatmentListID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_InitialTreatmentListID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_InitialTreatment", @dataurl = Url.Action("GetAllValue", "T_InitialTreatment",new { caller = "T_InitialTreatmentListID" }) })
                                @Html.ValidationMessageFor(model => model.T_InitialTreatmentListID)
								@if ( User.CanAdd("T_InitialTreatment"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Initial Treatment List','dvPopup','" + Url.Action("CreateQuick", "T_InitialTreatment", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
					<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PatientInvolvedRegnoepi">
                                <div class='form-group' title="Patient Involved (Regnoepi)">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_PatientInvolvedRegnoepi) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_PatientInvolvedRegnoepi, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_PatientInvolvedRegnoepi)
									</div>
                                </div>
					</div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeInjuryMedicalFacilityForTreatment">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeInjuryMedicalFacilityForTreatmentID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeInjuryMedicalFacilityForTreatmentID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_MedicalFacilityForTreatment", @dataurl = Url.Action("GetAllValue", "T_MedicalFacilityForTreatment",new { caller = "T_EmployeeInjuryMedicalFacilityForTreatmentID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeInjuryMedicalFacilityForTreatmentID)
								@if ( User.CanAdd("T_MedicalFacilityForTreatment"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Medical Facility For Treatment','dvPopup','" + Url.Action("CreateQuick", "T_MedicalFacilityForTreatment", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ExaminingPhysician">
                                <div class='form-group' title="Examining Physician">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ExaminingPhysician) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_ExaminingPhysician, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_ExaminingPhysician)
									</div>
                                </div>
						</div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ReferringPhysician">
                                <div class='form-group' title="Referring  Physician">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ReferringPhysician) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_ReferringPhysician, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_ReferringPhysician)
									</div>
                                </div>
						</div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Diagnosis">
                                <div class='form-group' title="Diagnosis">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_Diagnosis) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_Diagnosis, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Diagnosis)
									</div>
                                </div>
						</div>
							</div>
                         </div>
                      </div>
				  </div>
       </div>
			<div>
               <div class="row">         
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default AppForm">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
<!-- T_DaysOff ---- Days Off-->
<!-- T_DaysRestricted ---- Days Restricted-->
<!-- T_DetailsOfRestriction ---- Details Of Restriction-->
<!-- T_RestrictionStartDate ---- Restriction Start Date-->
<!-- T_RestrictionEndDate ---- Restriction End Date-->
<!-- T_EmployeeInjuryRefusal ---- Employee Injury Refusal-->
                                            <h3 class="panel-title">Restriction</h3>
                                        </div>
                                        <div class="panel-body">
					<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DaysOff">
                                <div class='form-group' title="Days  Off">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DaysOff) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_DaysOff, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_DaysOff)
									</div>
                                </div>
					</div>
					<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DaysRestricted">
                                <div class='form-group' title="Days  Restricted">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DaysRestricted) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_DaysRestricted, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_DaysRestricted)
									</div>
                                </div>
					</div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DetailsOfRestriction">
                                <div class='form-group' title="Details  Of  Restriction">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_DetailsOfRestriction) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_DetailsOfRestriction, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_DetailsOfRestriction)
									</div>
                                </div>
						</div>
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_RestrictionStartDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_RestrictionStartDate) </label>
                                <div class="form-group" title="Restriction  Start  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_RestrictionStartDate">
                                        @Html.TextBoxFor(model => model.T_RestrictionStartDate, new {@class = "form-control" })
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                        
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_RestrictionStartDate)
								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_RestrictionStartDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_RestrictionStartDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_RestrictionEndDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_RestrictionEndDate) </label>
                                <div class="form-group" title="Restriction End Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_RestrictionEndDate">
                                        @Html.TextBoxFor(model => model.T_RestrictionEndDate, new {@class = "form-control" })
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                        
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_RestrictionEndDate)
								</div>
                                </div>
	
                                <script type="text/javascript">
                                    $(function () {
										$('#T_RestrictionEndDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_RestrictionEndDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
				 <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeInjuryRefusal">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeInjuryRefusalID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeInjuryRefusalID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Refusal", @dataurl = Url.Action("GetAllValue", "T_Refusal",new { caller = "T_EmployeeInjuryRefusalID" }) })
                                @Html.ValidationMessageFor(model => model.T_EmployeeInjuryRefusalID)
								@if ( User.CanAdd("T_Refusal"))
                                    {
                                <div class="input-group-btn">
									<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Restriction Refusal Reason','dvPopup','" + Url.Action("CreateQuick", "T_Refusal", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
										<span class="glyphicon glyphicon-plus-sign"></span>
                                    </a>
                                </div>
								}
                            </div>
							</div>
                        </div>
                    </div>
							</div>
                         </div>
                      </div>
				  </div>
       </div>
			<div>
               <div class="row">         
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default AppForm">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
<!-- T_AccidentNotes ---- Accident Notes-->
<!-- T_RestrictionNotes ---- Restriction Notes-->
                                            <h3 class="panel-title">Notes</h3>
                                        </div>
                                        <div class="panel-body">
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AccidentNotes">
                                <div class='form-group' title="Accident  Notes">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_AccidentNotes) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_AccidentNotes, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_AccidentNotes)
									</div>
                                </div>
						</div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_RestrictionNotes">
                                <div class='form-group' title="Restriction  Notes">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_RestrictionNotes) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    @Html.TextAreaFor(model => model.T_RestrictionNotes, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_RestrictionNotes)
									</div>
                                </div>
						</div>
							</div>
                         </div>
                      </div>
				  </div>
       </div>
			@if ( (User.CanAdd("T_ClaimType") && User.CanAdd("T_TypeofClaim")))
              {
		<div class="row">
                        <div class="col-sm-12 col-md-12 col-sx-12" id="dvT_EmployeeInjury">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                                    Claim Type
                                </div>
								 <div class="panel-body">
									 @Html.DropDownList("SelectedT_ClaimType_T_TypeofClaim", null, new { @multiple = "multiple", @HostingName = "T_ClaimType", @dataurl = Url.Action("GetAllMultiSelectValue", "T_ClaimType", null) })
								</div>
						</div>
                    </div>
             </div>
			 <script>
			$(document).ready(function () {
			 	 $('#SelectedT_ClaimType_T_TypeofClaim').multiselect({ buttonWidth: '100%'});
			});
		</script>
		}
			@if ( (User.CanAdd("T_Restrictions") && User.CanAdd("T_TypeOfRestrictions")))
              {
		<div class="row">
                        <div class="col-sm-12 col-md-12 col-sx-12" id="dvT_EmployeeInjury">
                            <div class="panel panel-default">
                                <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                                    Restrictions
                                </div>
								 <div class="panel-body">
									 @Html.DropDownList("SelectedT_Restrictions_T_TypeOfRestrictions", null, new { @multiple = "multiple", @HostingName = "T_Restrictions", @dataurl = Url.Action("GetAllMultiSelectValue", "T_Restrictions", null) })
								</div>
						</div>
                    </div>
             </div>
			 <script>
			$(document).ready(function () {
			 	 $('#SelectedT_Restrictions_T_TypeOfRestrictions').multiselect({ buttonWidth: '100%'});
			});
		</script>
		}
	</div>

							 @if (ViewBag.IsDDAdd == null && User.CanEdit("T_EmployeeInjury"))
                                {
                                    <input type="submit" name="command" id="WizardSubmit" style="display:none;" />
                                }
                                @Html.ActionLink("C", "Cancel", new { UrlReferrer = ViewData["T_EmployeeInjuryParentUrl"] }, new { @id = "cancel", @style = "display:none;" })
                                <input type="hidden" name="hdncommand" value="" />
          
				</div>
			<br/>
}
<script>
    $(document).ready(function () {
        try {
             focusOnControl('frmT_EmployeeInjury');
        }
        catch (ex) { }
    });
</script>
<script>
		   $(".js-example-basic-multiple").select2({placeholder: "Select/Search",allowClear: true}); 
	    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
	<script>
            $("input[type='submit']").click(function (event) {
	if (!$("#frmT_EmployeeInjury").valid()) return;

                var $this = $(this);
                $('input:hidden[name="hdncommand"]').val($this.val());
            });
			$(document).ready(function () {
				DisableTabOnReadonlyProperty("frmT_Donation");
			});
	</script>
@{
    var businessrule = User.businessrules.Where(p => p.EntityName == "T_EmployeeInjury").ToList();
if ((businessrule != null && businessrule.Count > 0) )
    {
        <script>
            $("form").submit(function (event) {
			if (!$("#frmT_EmployeeInjury").valid()) return;
				document.getElementById("ErrMsg").innerHTML = "";
                var flag = true;
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                
                
                //var form = $(this).serialize();
 form = $("#frmT_EmployeeInjury").serialize();
                dataurl = "@Url.Action("businessruletype", "T_EmployeeInjury", new { ruleType = "OnCreate"})";
                flag = ApplyBusinessRuleOnSubmit(dataurl, "T_EmployeeInjury", false, "ErrMsg", form);
				//business rules on inline associations
				return flag;
			 });	
            $(document).ready(function () {
                $("input[type='submit']").on('blur', function () {
                    $("input[type='submit']").removeAttr('disabled');
                });
            });
        </script>
    }
    else
    {
           
    }
}
    


