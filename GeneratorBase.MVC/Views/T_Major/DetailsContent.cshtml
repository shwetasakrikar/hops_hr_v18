@model GeneratorBase.MVC.Models.T_Major
@using PagedList;
@{
    ViewBag.Title = "View Major";
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Major");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "Major";
}
<script>
    $(document).ready(function () {
			 if ($.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') != null) {
				$('a[href="#' + $.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') + '"]').click();
			 }
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.T_MajorIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_MajorIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_MajorIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.T_MajorIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_MajorIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_MajorIsSetValueUIRule);
    }
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-hand-down text-primary"></i> @EntityDisplayName  <i class="glyphicon glyphicon-chevron-right small"></i> <span>View</span>
        </h1>
        <h2 class="text-primary"><span id="HostingEntityDisplayValue">@Html.DisplayFor(model => model.DisplayValue)</span>
			<div class="btn-group pull-right fixactionbut">
            <button data-toggle="dropdown" class="btn btn-xs dropdown-toggle btn-default pull-right">
                Action
                <span class="caret">    </span>
            </button>
			<ul class="dropdown-menu pull-left">               
				<li>
                    @if ( User.CanEdit("T_Major"))
                    {
                        <a href="@Url.Action("Edit","T_Major", new { id = Model.Id,  UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)"><i class="glyphicon glyphicon-edit"></i>  Edit</a>
                    }
                </li>             
				<li>
                    @if ( User.CanDelete("T_Major"))
                    {
                        <a href="@Url.Action("Delete", "T_Major", new { id = Model.Id, UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)"><i class="glyphicon glyphicon-remove-sign"></i>  Delete</a>
                    }
                </li>
	<li class="divider" style="clear:both"></li>
	<li class="dropdown-submenu pull-left">
	<a tabindex="-1" href="#" style="margin-bottom:10px;"><i class="fam-anchor small"></i> Add</a>
    <ul class="dropdown-menu pull-left">
				@if ( User.CanAdd("T_Education"))
				{
					<li>
						<a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Education", 
						new { UrlReferrer = Request.Url,
								AssociatedType ="T_MajorInMultiCheckBox", 
							HostingEntityName = "T_Major",
							HostingEntityID = @Convert.ToString(Model.Id) }, null) + "');")>
							<i class="glyphicon glyphicon-plus"></i>  Major In
						</a>
					</li>
				}
			</ul>
</li>
			</ul>
</div>
		</h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="tabbable responsive">
    <ul class="nav nav-tabs">
	 <li class="active"><a href="#Details" onclick="ClearTabCookie('@User.JavaScriptEncodedName@Model.Id');" data-toggle="tab">Details</a></li>
		 <li @(!User.CanView("T_Education")?"style=display:none;":"")><a onclick="LoadTab('T_MajorInMultiCheckBox','@User.JavaScriptEncodedName@Model.Id','@Html.Raw(Url.Action("Index", "T_Education", new {RenderPartial=true, HostingEntity ="T_Major", HostingEntityID = @Model.Id, AssociatedType = "T_MajorInMultiCheckBox",TabToken = DateTime.Now.Ticks,}))')" href="#T_MajorInMultiCheckBox" data-toggle="tab">
		 Major In
		 <span class="badge bg-blue"><div id="dvcnt_T_MajorInMultiCheckBox">@ViewBag.T_MajorInMultiCheckBoxCount</div></span>
		 		 </a></li>
		 <li @(!User.CanView("JournalEntry")?"style=display:none;":"")><a onclick="LoadTab('JournalEntryToT_MajorRelation','@User.JavaScriptEncodedName@Model.Id','@Url.Action("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "T_Major", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry", TabToken = DateTime.Now.Ticks })')" href="#JournalEntryToT_MajorRelation" data-toggle="tab">Major Journal</a></li>
    </ul>
	    <div class="tab-content">
		   <div class="tab-pane fade in active" id="Details">
				 <div class="panel panel-default AppForm">
					<div class="panel-body">
                                  
			<div class="row">
				<div class="col-sm-12 col-md-12 col-xs-12">
			<div class="row">
@if(User.CanView("T_Major","T_Name"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Name">
	<div class='form-group' title="Name">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_Name) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_Name</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Major","T_Description"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Description">
	<div class='form-group' title="Description">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_Description)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		<p class="viewlabel">@Model.T_Description</p>
		</div>
	</div>
</div>
}
		</div>
				</div>
			</div>
		</div>
			</div>
			<div class="row">
				<div class="col-md-12 col-sm-12 col-xs-12">
					@Html.ActionLink("Back", "Cancel", new { UrlReferrer = Request.UrlReferrer }, new { @class = "btn btn-default btn-sm pull-left formbuttonfix" })
					 @if ( User.CanEdit("T_Major"))
                     {
                          @Html.ActionLink("Edit", "Edit", new { id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, new { @class = "btn btn-primary btn-sm pull-left formbuttonfix" })
                     }
				</div>
			</div>    

<div class="dropdown pull-left formbuttonfix" style="margin-top:-30px; margin-left:102px;">
<button type="button" class="btn btn-primary btn-sm dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown">
            Add Association
            <span class="caret"></span>
        </button>
		 <ul class="dropdown-menu " role="menu" aria-labelledby="dropdownMenu1">
           
			@if ( User.CanAdd("T_Education"))
            {
				 <li>
				 <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Education",
						new { UrlReferrer = Request.Url,
								AssociatedType ="T_MajorInMultiCheckBox", 
						HostingEntityName = "T_Major",
                              HostingEntityID = @Convert.ToString(Model.Id)
                        }, null) + "');") style="margin-top:5px;">
                   Add  Major In</a>
			</li>
            }
			

        </ul>

			</div>
	</div>    
<div class="tab-pane fade in" id="T_MajorInMultiCheckBox">
     @if ( User.CanView("T_Education"))
	{
	  // Html.RenderAction("Index", "T_Education", new {RenderPartial=true, HostingEntity = "T_Major", HostingEntityID = @Model.Id, AssociatedType = "T_MajorInMultiCheckBox" }); 
	}
  </div>
<div class="tab-pane fade in" id="JournalEntryToT_MajorRelation">
            @if ( User.CanView("JournalEntry"))
		   {
			//	Html.RenderAction("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "T_Major", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry" });
		   }
  </div>
	</div> <!-- /tab-content --><br />

<br/>
</div>
 
