@model List<GeneratorBase.MVC.Models.ScheduledTaskHistory>
@{
    Layout = null;
}
<div id="TaskHistory">
    <style>
        .table-responsive > .fixed-column {
            position: absolute;
            display: block;
            width: auto;
            border: 0px solid transparent;
            border-top: 1px solid #c3ddec;
        }

        .fixed-column th {
            background: #fff;
        }

        .fixed-column td {
            background: #fff;
        }
    </style>
    <script>
        function DoubleClickBusinessRule(RecordID) {
            var url = "@Url.Action("Details", "BusinessRule", new { id = "_Id" }, null)".replace("_Id", RecordID);
            window.location.replace(url);
        }
        $(document).ready(function () {
            $(".pagination a").click(function (e) {
                PaginationClick(e, 'BusinessRule', '@User.JavaScriptEncodedName')
            })
            if ("@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString().ToUpper()" == "FSEARCH") {
                $("#fsearchBusinessRule").addClass('in');
            }
            $("#SearchStringT_Employee").keypress(function (e) {
                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                    $("#T_EmployeeSearch").bind("click", (function () {
                    }));
                    $('#T_EmployeeSearch').trigger("click");
                    return false;
                }
            })
            $("#SearchStringBusinessRule").keypress(function (e) {
                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                    $("#BusinessRuleSearch").bind("click", (function () {
                    }));
                    $('#BusinessRuleSearch').trigger("click");
                    return false;
                }
            })

            $("#btnShowHideBusinessRule").mouseup(function () {
                if (document.getElementById('ColumnShowHideBusinessRule').className == 'collapse') {
                    $('#lblBusinessRule').css('display', 'none');
                }
            })
        });
    </script>
    @functions {
        object getSortHtmlAttributes(string sortby, bool IsPaging, int? page, bool? IsExport)
        {
            if (IsPaging)
            {
                return new
                {
                    page,
                    sortBy = ViewBag.CurrentSort,
                    isAsc = ViewBag.IsAsc,
                    currentFilter = ViewBag.CurrentFilter,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),
                    HostingEntityName = @Convert.ToString(ViewData["HostingEntityName"]),
                    IsDisable = @Convert.ToString(ViewData["IsDisable"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    HostingEntityID = ViewData["HostingEntityID"],
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    IsFilter = @Convert.ToBoolean(ViewData["IsFilter"]),
                    associatedbusinessruletype = Request.QueryString["associatedbusinessruletype"],
                    DateCreated1From = Request.QueryString["DateCreated1From"],
                    DateCreated1To = Request.QueryString["DateCreated1To"],
                    search = Request.QueryString["search"],
                };
            }
            else
            {
                return new
                {
                    sortBy = sortby,
                    currentFilter = Request.QueryString["currentFilter"],
                    searchString = Request.QueryString["searchString"],
                    isAsc = (ViewBag.IsAsc == "ASC" ? "DESC" : ""),
                    page = ViewBag.Pages,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),

                    HostingEntityName = @Convert.ToString(ViewData["HostingEntityName"]),
                    IsDisable = @Convert.ToString(ViewData["IsDisable"]),
                    HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    associatedbusinessruletype = Request.QueryString["associatedbusinessruletype"],
                    DateCreated1From = Request.QueryString["DateCreated1From"],
                    DateCreated1To = Request.QueryString["DateCreated1To"],
                    search = Request.QueryString["search"],
                };
            }
        }
    }
    <script type="text/javascript">
        $(document).ready(function () {
            $(".tip-top").tooltip({
                placement: 'top'
            });
            $(".tip-right").tooltip({
                placement: 'right'
            });
            $(".tip-bottom").tooltip({
                placement: 'bottom'
            });
            $(".tip-left").tooltip({
                placement: 'left'
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('input[type="checkbox"]').click(function () {
                var index = $(this).attr('name').substr(3);
                index--;
                $('table tr').each(function () {
                    $('td:eq(' + index + ')', this).toggle();
                });
                $('th.' + $(this).attr('name')).toggle();
            });
        });
        $(document).ready(function () {
            var usrName = "@HttpContext.Current.User.Identity.Name";
            var myCookie = usrName + "BusinessRule";
            if ($.cookie(myCookie) != null) {
                var column = $.cookie(myCookie).split(',');
                for (var i = 0; i < column.length; i++) {
                    if (column[i] == "col1")
                        continue;
                    $('input[name=' + column[i] + ']').attr('checked', false);
                    var index = column[i].substr(3)
                    index--;
                    $('table tr').each(function () {
                        $('td:eq(' + index + ')', this).toggle();
                    });
                    $('th.' + column[i]).toggle();
                }
            }
        });
        function SaveCookiesBusinessRule() {
            var usrName = "@HttpContext.Current.User.Identity.Name";
            var myCookie = usrName + "BusinessRule";
            if ($.cookie(myCookie) != null) {
                $.removeCookie(myCookie);
            }
            var selected = [];
            $('#ColumnShowHideBusinessRule input[type=checkbox]').each(function () {
                if ($(this).prop('checked') == false) {
                    selected.push($(this).attr('name'));
                }
            });
            if (selected != "") {
                $.cookie(myCookie, selected);
                $('#lblBusinessRule').css('display', 'block');
            }
        }
    </script>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-sx-12">
            <div class="panel panel-default">

                <div class="panel-body" style="margin:0px; padding:8px;">



                    <div id="Des_Table" class="table-responsive" style="overflow-x:auto;">
                        <table class="table table-striped table-bordered table-hover table-condensed">
                            <thead>
                                <tr>
                                    <th class="col1">TaskId</th>

                                    <th class="col2">
                                        Business Rule
                                    </th>
                                    @if (User.CanView("BusinessRule", "RuleName"))
                                    {
                                        <th class="col3">
                                            Status
                                        </th>
                                    }
                                    @if (User.CanView("BusinessRule", "EntityName"))
                                    {
                                        <th class="col4">
                                            RunTime
                                        </th>
                                    }


                                </tr>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DisplayValue)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </td>
                                        <td id=@Html.Raw("'timeRunDateTime" + item.Id + "'")>
                                            @*@Html.DisplayFor(modelItem => item.RunDateTime)*@
                                        </td>
                                        @Html.Raw("<script> $(function () {$('timeRunDateTime" + item.Id + "').datetimepickerIndex({divid:'timeRunDateTime" + item.Id + "',format: 'MM/DD/YYYY hh:mm',val:'" + Html.DisplayFor(modelItem => item.RunDateTime) + "'})});</script>")
                                    </tr>
                                }
                        </table>
                    </div>



                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="quickaddBusinessRule" tabindex="-1" role="dialog" aria-labelledby="quickaddBusinessRuleLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddBusinessRuleLabel"> Create Business Rule</h4>
            </div>
            <div id="dvQAddquickaddBusinessRule" class="modal-body" data-url="@Url.Action("CreateQuick", "BusinessRule",new {UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) })">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="quickaddTimeRule" tabindex="-1" role="dialog" aria-labelledby="quickaddTimeRuleLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddTimeRuleLabel"> Create Time Based Alert</h4>
            </div>
            <div id="dvQAddquickaddTimeRule" class="modal-body" data-url="@Url.Action("CreateQuickTimeRule", "BusinessRule",new {UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) })">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="setFSearchBusinessRule" tabindex="-1" role="dialog" aria-labelledby="setFSearchBusinessRuleLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="shortdetails">
            <div class="modal-header">
                <button id="closeshortdetails" type="button" class="close hidden" data-dismiss="modal" aria-hidden="true">&times;</button>
                <b><p class="modal-title" id="setFSearchBusinessRuleLabel"></p></b>
            </div>
            <div id="dvsetFSearchBusinessRule" class="modal-body" data-url="@Url.Action("SetFSearch", "BusinessRule",new {searchString = ViewBag.CurrentFilter, UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) })">
            </div>
        </div>
    </div>
</div>

