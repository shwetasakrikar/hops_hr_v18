@model PagedList.IPagedList<GeneratorBase.MVC.Models.RuleAction>
@using PagedList.Mvc;
@{string propertyValue = "";  }
@Scripts.Render("~/bundles/jqueryval")
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
<div class="row">
    <div class="col-md-12 col-sm-12 col-sx-12">
        <div>
            <div id="Des_Table" class="table-responsive" style="overflow-x:auto;">
                <table id="tblActionList" style="table-layout: fixed;" class="table table-striped table-bordered table-hover table-condensed">
                    <thead>
                        <tr>
                            @if (User.CanView("RuleAction", "RuleActionID"))
                            {
                                @*<th class="col1" @(Convert.ToString(ViewData["HostingEntity"]) == "BusinessRule" ? "hidden" : "")>
                                        @Html.ActionLink("Business Rule", ActionNameUrl, "RuleAction", getSortHtmlAttributes("RuleActionID", false, null, false), new { @class = "SortLink" })
                                        @if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "RuleActionID")
                                            {<i class="fa fa-sort-desc"></i>}
                                        @if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "RuleActionID")
                                            {<i class="fa fa-sort-asc"></i>}
                                    </th>*@
                            }
                            @if (User.CanView("RuleAction", "AssociatedActionTypeID"))
                            {
                                <th class="col5" @(Convert.ToString(ViewData["HostingEntity"]) == "ActionType" ? "hidden" : "")>
                                    Action Type
                                </th>
                            }
                            <th class="col1">Action Parameters</th>
                            <th class="col1">Is Else Action</th>
                            <th class="col1">Remove</th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            if (item.AssociatedActionTypeID == 9) { continue; }
                            <tr ondblclick="DoubleClickRuleAction(@item.Id);">
                                @if (User.CanView("RuleAction", "RuleActionID"))
                                {
                                    <td @(Convert.ToString(ViewData["HostingEntity"]) == "BusinessRule" ? "hidden" : "")>
                                        @Html.DisplayFor(modelItem => item.ruleaction.DisplayValue)
                                    </td>
                                }
                                @if (User.CanView("RuleAction", "AssociatedActionTypeID"))
                                {
                                    <td @(Convert.ToString(ViewData["HostingEntity"]) == "ActionType" ? "hidden" : "")>
                                        @Html.DisplayFor(modelItem => item.associatedactiontype.DisplayValue)
                                        @Html.Hidden("AssociatedActionTypeIDhdn", item.AssociatedActionTypeID)
                                    </td>
                                }
                                @if (item.associatedactiontype != null && (item.associatedactiontype.TypeNo == 2 || item.associatedactiontype.TypeNo == 4 || item.associatedactiontype.TypeNo == 6 || item.associatedactiontype.TypeNo == 7 || item.associatedactiontype.TypeNo == 8 || item.associatedactiontype.TypeNo == 5 || item.associatedactiontype.TypeNo == 12))
                                {
                                    foreach (var item1 in item.actionarguments)
                                    {
                                        if (item.associatedactiontype.TypeNo == 7)
                                        {
                                            propertyValue += item1.ParameterName + "=" + item1.ParameterValue + "<br/>";
                                        }
                                        else if (item.associatedactiontype.TypeNo == 12)
                                        {
                                            propertyValue += item1.ParameterName.Remove(0, item1.ParameterName.IndexOf('|') + 1) + ",";
                                        }
                                        else
                                        {
                                            propertyValue += item1.ParameterName + ",";
                                        }
                                    }
                                    <td style="word-wrap:break-word">
                                        @if (item.associatedactiontype.TypeNo == 7 || item.associatedactiontype.TypeNo == 8 || item.associatedactiontype.TypeNo == 5 || item.associatedactiontype.TypeNo == 12)
                                        {
                                            @Html.Raw(propertyValue.TrimEnd(','))
                                        }

                                        else
                                        {
                                            <a style="cursor:pointer;" data-target="#quickaddActionArgs" data-toggle="modal" onclick=@Html.Raw("OpenQuickActionArgs('dvQAddquickaddActionArgs','"+item.Id+"','"+item.AssociatedActionTypeID+"');")><i class="glyphicon glyphicon-add-sign"></i>@Html.Raw(propertyValue.TrimEnd(','))</a>
                                        }
                                    </td>
                                        propertyValue = "";
                                }
                                else
                                {
                                    if (item.associatedactiontype != null && (item.associatedactiontype.TypeNo == 3))
                                    {
                                        <td style="word-wrap:break-word">
                                            <a style="cursor:pointer;" data-target="#quickaddActionArgsMail" data-toggle="modal" onclick=@Html.Raw("OpenQuickActionArgsMail('dvQAddquickaddActionArgsMail','" + item.Id + "','" + item.AssociatedActionTypeID + "');")>
                                                Notify within :- @Html.DisplayFor(modelItem => item.actionarguments.FirstOrDefault(p => p.ParameterName == "TimeValue").ParameterValue, new { @class = "text-success" }) days,
                                                <br />Notify to :- @Html.DisplayFor(modelItem => item.actionarguments.FirstOrDefault(p => p.ParameterName == "NotifyTo").ParameterValue, new { @class = "text-success" })
                                                <br />Extra email-ids :- @Html.DisplayFor(modelItem => item.actionarguments.FirstOrDefault(p => p.ParameterName == "NotifyToExtra").ParameterValue, new { @class = "text-success" })
                                                <br />Notify to Roles :-
                                                @if (item.actionarguments.FirstOrDefault(p => p.ParameterName == "NotifyToRole") != null)
                                                {
                                                    @item.getRolesNameById(item.actionarguments.FirstOrDefault(p => p.ParameterName == "NotifyToRole").ParameterValue)
                                                }
                                            </a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td> No parameter required</td>
                                    }
                                }
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsElseAction)
                                </td>
                                <td>
                                    <a href="@Url.Action("Delete", "RuleAction", new { id = item.Id }, null)"><i class="fam-delete"></i> </a>
                                </td>
                            </tr>
                        }
                </table>
            </div>
            <ul id="Mob_List" class="list-group">
                @foreach (var item in Model)
                {
                    <li class="list-group-item">
                        @if (User.CanView("RuleAction", "ActionName"))
                        {
                            <p>
                                <span class="text-primary"> Action Name </span> : <span>
                                    @Html.DisplayFor(modelItem => item.ActionName)
                                </span>
                            </p>
                        }
                        @if (User.CanView("RuleAction", "ErrorMessage"))
                        {
                            <p>
                                <span class="text-primary"> Error Message </span> : <span>
                                    @Html.DisplayFor(modelItem => item.ErrorMessage)
                                </span>
                            </p>
                        }
                        @if (User.CanView("RuleAction", "RuleActionID"))
                        {
                            <p @(Convert.ToString(ViewData["HostingEntity"]) == "BusinessRule" ? "hidden" : "")>
                                <span class="text-primary"> Rule Action </span> : <span>
                                    @Html.DisplayFor(modelItem => item.ruleaction.DisplayValue)
                                </span>
                            </p>
                        }
                        @if (User.CanView("RuleAction", "AssociatedActionTypeID"))
                        {
                            <p @(Convert.ToString(ViewData["HostingEntity"]) == "ActionType" ? "hidden" : "")>
                                <span class="text-primary"> Associated  Action Type </span> : <span>
                                    @Html.DisplayFor(modelItem => item.associatedactiontype.DisplayValue)
                                </span>
                            </p>
                        }
                        <span class="label label-primary text-linkwhite">
                            @Html.ActionLink("View", "Details", "RuleAction", new { id = item.Id }, null)
                        </span>
                        <span class="label label-warning text-linkwhite">
                            @if ( User.CanEdit("RuleAction"))
                            {
                                @Html.ActionLink("Edit", "Edit", "RuleAction", new { id = item.Id }, null)
                            }
                        </span>
                        <span class="label label-danger text-linkwhite">
                            @if ( User.CanDelete("RuleAction"))
                            {
                                @Html.ActionLink("Delete", "Delete", "RuleAction", new { id = item.Id }, null)
                            }
                        </span>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
@*Edit Email Notification*@
<div class="modal fade" id="quickaddActionArgsMail" tabindex="-1" role="dialog" aria-labelledby="quickaddActionArgsMailLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddActionArgsMailLabel">Edit Action Arguments</h4>
            </div>
            <div id="dvQAddquickaddActionArgsMail" class="modal-body" data-url="@Url.Action("CreateQuickEmail", "ActionArgs", new { UrlReferrer = Request.Url})">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="quickaddActionArgs" tabindex="-1" role="dialog" aria-labelledby="quickaddActionArgsLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddActionArgsLabel">Edit Action Arguments</h4>
            </div>
            <div id="dvQAddquickaddActionArgs" class="modal-body" data-url="@Url.Action("CreateQuick", "ActionArgs",new {UrlReferrer = Request.Url })">
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function OpenQuickActionArgs(dvName, id, ActionTypeId) {
        var url = $("#" + dvName).data("url");
        url += "&HostingEntityName=RuleAction&HostingEntityID=" + id;
        url += "&ActionTypeId=" + ActionTypeId;
        url += "&BusinessRuleId=" + "@Convert.ToString(ViewData["HostingEntityID"])";
        $("#" + dvName).load(url);
    }
    $(document).ready(function () {
        $('#myModal').modal('show');
    });
    function OpenQuickActionArgsMail(dvName, id, ActionTypeId) {
        var url = $("#" + dvName).data("url");
        url += "&HostingEntityName=RuleAction&HostingEntityID=" + id;
        url += "&ActionTypeId=" + ActionTypeId;
        url += "&BusinessRuleId=" + "@Convert.ToString(ViewData["HostingEntityID"])";
        url += "&EntityNameRuleAction=" + "@Convert.ToString(ViewData["EntityNameRuleAction"])";
        $("#" + dvName).load(url);
    }
    //$(document).ready(function () {
    //    $('#myModal').modal('show');
    //});
</script>
