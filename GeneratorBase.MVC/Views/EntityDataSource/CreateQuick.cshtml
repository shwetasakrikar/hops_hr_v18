@model GeneratorBase.MVC.Models.EntityDataSource
@{
    ViewBag.Title = "Create Entity Data Source";
    Layout = null;
}
<script>
    $(document).ready(function () {
        try {
            var hostingEntityName = "";
            if ('@Convert.ToString(ViewData["AssociatedType"])' != null) {
                hostingEntityName = '@Convert.ToString(ViewData["AssociatedType"])';
                $('#' + hostingEntityName + 'ID').attr("lock", "true");
                $('#' + hostingEntityName + 'ID').trigger("change");
            }
        }
        catch (ex) { }
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.EntityDataSourceIsHiddenRule))
    {
        @Html.Raw(ViewBag.EntityDataSourceIsHiddenRule);
    }
}
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("CreateQuick", "EntityDataSource", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
                            Html.ValidationSummary(true);
                            Html.EnableClientValidation();
                            <label id="ErrMsgQuickAdd" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>
                            <div id="errorContainerQuickAdd" style="display: none">
                                <div id="errorsMsgQuickAdd"></div>
                                <div id="errorsQuickAdd"></div>
                            </div>
                            <div class="row">
                                @Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"]))
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default AppForm">
                                        <div class="panel-body">
                                            <div class="row">
                                                @*<div class='col-sm-6' id="dvEntityName">
                                                                <div class='form-group'>
                                                                    <label>@Html.LabelFor(model => model.EntityName) <span class="text-danger-reg">*</span></label>

                                                                    @Html.TextBoxFor(model => model.EntityName, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(model => model.EntityName)

                                                                </div>
                                                    </div>*@
                                                <div class='col-sm-6' id="cmbEntity">
                                                    <div class='form-group'>
                                                        <label>Select Entity<span class="text-danger-reg">*</span></label>
                                                        @Html.DropDownList("EntityName", null, "-- Select --", new { @required = "required", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.EntityName)
                                                    </div>
                                                </div>
                                                <div class='col-sm-12' id="dvDataSource">
                                                    <div class='form-group'>
                                                        <label>@Html.LabelFor(model => model.DataSource) </label>
                                                        @Html.TextAreaFor(model => model.DataSource, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.DataSource)
                                                    </div>
                                                </div>
                                                <div class='col-sm-6' id="dvSourceType">
                                                    <div class='form-group'>
                                                        <label>@Html.LabelFor(model => model.SourceType) </label>

                                                        @*@Html.TextBoxFor(model => model.SourceType, new { @class = "form-control" })*@
                                                        <select id="SourceType" name="SourceType" class="form-control">
                                                            <option value="JSON">Json</option>
                                                            <option value="XML">XML</option>
                                                            <option value="DATABASE">Database</option>
                                                        </select>
                                                        @Html.ValidationMessageFor(model => model.SourceType)

                                                    </div>
                                                </div>
                                                <div class='col-sm-6' id="dvMethodType">
                                                    <div class='form-group'>
                                                        <label>@Html.LabelFor(model => model.MethodType) </label>

                                                        @*@Html.TextBoxFor(model => model.MethodType, new { @class = "form-control" })*@
                                                        <select id="MethodType" name="MethodType" class="form-control">
                                                            <option value="GET">GET</option>
                                                            <option value="POST">POST</option>
                                                        </select>
                                                        @Html.ValidationMessageFor(model => model.MethodType)

                                                    </div>
                                                </div>
                                                <div class='col-sm-6' id="dvAction">
                                                    <div class='form-group'>
                                                        <label>@Html.LabelFor(model => model.Action) </label>

                                                        @*@Html.TextBoxFor(model => model.Action, new { @class = "form-control" })*@
                                                        <select id="Action" name="Action" class="form-control">
                                                            <option value="GETLIST">GetList</option>
                                                            <option value="CREATE">Create</option>
                                                            <option value="UPDATE">Update</option>
                                                            <option value="GETITEM">GetItem</option>
                                                        </select>
                                                        @Html.ValidationMessageFor(model => model.Action)

                                                    </div>
                                                </div>
                                                <div class='col-sm-6' id="dvother">
                                                    <div class='form-group'>
                                                        <label>@Html.LabelFor(model => model.other) </label>

                                                        @Html.TextBoxFor(model => model.other, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.other)

                                                    </div>
                                                </div>
                                                <div class='col-sm-6' id="dvflag">
                                                    <label>
                                                        @Html.LabelFor(model => model.flag)
                                                    </label>
                                                    <div>
                                                        @*@Html.CheckBoxFor(model => model.flag)*@
                                                        @Html.CheckBox("flag", false)
                                                        @Html.ValidationMessageFor(model => model.flag)
                                                    </div>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button id="CancelQuickAdd" type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
                            var busineesrule = User.businessrules.Where(p => p.EntityName == "EntityDataSource").ToList();
                            if (ViewBag.IsAddPop != null)
                            {
                                <input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="QuickAdd(event,'@busineesrule',@busineesrule.Count);" />
                            }
                            else
                            {
                                <input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="QuickAddFromIndex(event,true,'EntityDataSource','@ViewData["AssociatedType"]','@busineesrule',@busineesrule.Count);" />
                            }
}
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Common3/chosen.jquery.js" type="text/javascript"></script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>


