@model IEnumerable<GeneratorBase.MVC.Models.EditRoleViewModel>
@{
    ViewBag.Title = "Role List";
    var userrolelist = (new GeneratorBase.MVC.Models.CustomRoleProvider()).GetRolesForUser(User.Name);
    var PageUrl = HttpUtility.ParseQueryString(Request.Url.Query);
    if (PageUrl["RenderPartial"] != null)
    {
        Layout = null;
    }
}
@if (PageUrl["RenderPartial"] == null)
{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-title">
                <i class="glyphicon glyphicon-edit text-primary"></i> Admin  <i class="glyphicon glyphicon-chevron-right small"></i> <span>Role List</span>
            </h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
}
<div class="col-md-12 col-sm-12 col-xs-12" style="padding:0px; margin:5px 0px 0px 0px;">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix " style="margin:0px; padding:8px;">
                    @if (User.CanAddAdminFeature("Role"))
                    {
                        <button class="btn btn-default tip-top" data-placement="top" data-original-title="Create Role" style="padding:3px 5px;" data-toggle="modal" data-target="#quickaddRole" onclick=@Html.Raw("OpenQuickQddPopUp('dvQAddquickaddRole');")>
                            <span class="fa fa-plus-circle"> </span> Create Role
                        </button>
                    }
                    <span class="pull-right">
                        <u><b>@ViewBag.DefaultRoleForNewUser</b></u>
                        is set as default for new user
                    </span>
                </div>
                <div class="panel-body  AppForm">
                    <div id="Des_Table" class="table-responsive" style="overflow-x:auto;">
                        <table class="table table-striped table-bordered table-hover table-condensed">
                            <tr>
                                <th width="80px;">Actions</th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RoleType)
                                </th>
                            </tr>
                            @foreach (var item in Model.Where(m => m.Name != System.Configuration.ConfigurationManager.AppSettings["AdministratorRoles"]))
                            {
                                if (PageUrl["TenantId"] != null)
                                {
                                    long tenantid;
                                    if (!item.TenantId.HasValue || (Int64.TryParse(Convert.ToString(PageUrl["TenantId"]), out tenantid) && item.TenantId.HasValue && tenantid != item.TenantId.Value))
                                    {
                                        continue;
                                    }
                                }
                                <tr>
                                    <td>
                                        <div style="width:60px;">
                                            <div class="btn-group" style="position:absolute; margin-top:-2px">
                                                <button data-toggle="dropdown" class="btn btn-sm dropdown-toggle btn-default ">
                                                    Action
                                                    <span class="caret">    </span>
                                                </button>
                                                <ul class="dropdown-menu pull-left">
                                                    @if (User.CanEditAdminFeature("Role"))
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Edit", "EditRole", new { id = item.id })
                                                        </li>
                                                    }
                                                    @if (User.CanViewAdminFeature("RoleEntityPermission") && !userrolelist.Contains(item.Name))
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Permission", "Index", "Permission", new { RoleName = item.Name }, null)
                                                        </li>
                                                    }
                                                    @if (User.CanViewAdminFeature("FieldLevelSecurity") && !userrolelist.Contains(item.Name))
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Field Level Security", "Fls", "Permission", new { RoleName = item.Name }, null)
                                                        </li>
                                                    }
                                                    @if (User.CanDeleteAdminFeature("Role") && !userrolelist.Contains(item.Name))
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Delete", "DeleteRole", new { id = item.id })
                                                        </li>
                                                    }
                                                    @if (User.CanViewAdminFeature("AssignUserRole"))
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Assign Users", "UsersInRole", new { id = item.id })
                                                        </li>
                                                    }
                                                    @if (User.IsAdmin)
                                                    {
                                                        <li>
                                                            @Html.ActionLink("Set this as Default Role for New User", "SetDefaultRole", "Admin", new { RoleName = item.Name }, null)
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>

                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RoleType)
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="clear:both; margin-bottom:20px;"></div>
<div class="modal fade" id="quickaddRole" tabindex="-1" role="dialog" aria-labelledby="quickaddUserRole" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddUserLabel"> Create Role</h4>
            </div>
            @if (PageUrl["TenantId"] != null)
            {
                <div id="dvQAddquickaddRole" class="modal-body" data-url="@Url.Action("CreateRole", "Account", new { UrlReferrer = Request.UrlReferrer, TenantId = PageUrl["TenantId"] })">

                </div>
            }
            else
            {
                <div id="dvQAddquickaddRole" class="modal-body" data-url="@Url.Action("CreateRole", "Account")">

                </div>
            }
        </div>
    </div>
</div>
