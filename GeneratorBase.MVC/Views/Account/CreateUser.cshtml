@model GeneratorBase.MVC.Models.RegisterViewModel
@{
    ViewBag.Title = "Create User";
    Layout = null;
}
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    function bindForm() {
        debugger;
        var selectedRoles = "";
        $('#ulRoleId input:checked').each(function () {
            selectedRoles += $(this).attr('name') + ",";
        });


        $.ajax({
            url: '@Url.Action("RegisterUser", "Account")' + '?selectedRoles=' + selectedRoles,
            data: $('#createForm').serialize(),
            type: 'post',
            success: function (data) {
                if (data.success) {
                    var url = '@Url.Action("Index", "Account")';
                    if (data.UrlReferrer != undefined && data.UrlReferrer.length > 0)
                        window.location.href = data.UrlReferrer;
                    else
                        window.location.href = url;
                }
                else {
                    fillErrorList(data);
                    showValidationErrors(true);
                }
            },
            error: function (xhr, status) {
                //Display error message
            }
        });
        return false;
    }
    function showValidationErrors(isShown) {
        if (isShown) {
            $("#errorContainer").show();
        } else {
            $("#errorContainer").hide();
        }
    }
    function fillErrorList(errors) {
        $("#errors").html("");
        var list = document.createElement('ul');
        for (var i = 0; i < errors.length; i++) {
            var item = document.createElement('li');
            item.appendChild(document.createTextNode(errors[i]));
            list.appendChild(item);
        }
        $("#errors").html(list);
    }
</script>
@using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { id = "createForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="errorContainer" class="alert alert-danger" style="display: none">
        <div id="errors"></div>
    </div>


    <div class="container-page">
        <div class="col-md-6 col-sm-6 col-xs-6" style="padding-left:0px;">
            <p>To create a new user, enter the information in the form below.</p>
            <div class="row">
                <div class="form-group col-xs-12">
                    <label>Username</label>
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                </div>

                <div class="form-group col-md-6 col-sm-6 col-xs-6">
                    <label>Password</label>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>

                <div class="form-group col-md-6 col-sm-6 col-xs-6">
                    <label>Confirm Password</label>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
                <div class="form-group col-md-6 col-sm-6 col-xs-6">
                    <label>First Name</label>
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>

                <div class="form-group col-md-6 col-sm-6 col-xs-6">
                    <label>Last Name</label>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                </div>
                <div class="form-group col-xs-12">
                    <label>Email Address</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
                <div class="form-group col-xs-12" style="padding-top:8px;">
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
                    @if (User.CanAddAdminFeature("User"))
                    {
                    <input type="submit" value="Create" onclick="return bindForm();" class="btn btn-primary btn-sm" />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-6">
            <h4 class="dark-grey" style="margin-top:0px;">Assign Roles</h4>
            <p>To <strong>assign roles</strong> to the user, Switch on corresponding to the new user.</p>
            <ul id="ulRoleId" class="list-group" style="height:200px; overflow-y:auto;">
                @foreach (var role in ViewBag.RoleList)
                {
                    <li class="list-group-item" style="border-top: 1px solid #c3ddec !important;">
                        @role.Name | @role.RoleType
                        <div class="material-switch pull-left">
                            <input id="@role.Name" name="@role.Name" type="checkbox" />
                            <label for="someSwitchOptionSuccess2" class="label-success"></label>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div style="clear:both;"></div>
    @Html.Hidden("UrlReferrer", ViewData["UrlReferrer"])
    @Html.Hidden("TenantId", ViewData["TenantId"])
}
