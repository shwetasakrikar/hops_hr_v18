@model GeneratorBase.MVC.Models.T_Chart
@{
    ViewBag.Title = "Create Chart";
    Layout = null;
}
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("CreateQuick", "Chart", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-default AppForm">
                <div class="panel-body">
                    <div class="row">
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.EntityName) <span class="text-danger-reg">*</span></label>
                                @Html.DropDownList("EntityName", null, "-- Select --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EntityName)
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.ChartTitle) <span class="text-danger-reg">*</span></label>
                                @Html.TextBoxFor(model => model.ChartTitle, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ChartTitle)
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.ChartType) </label>
                                <div class="input-group" style="width: 100%;">
                                    @Html.DropDownList("ChartType", null, "-- Select --", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ChartType)
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.XAxis)</label>
                                @Html.DropDownList("XAxis", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.XAxis)
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.YAxis)</label>
                                @Html.DropDownList("YAxis", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YAxis)
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <div class='form-group'>
                                <label>@Html.LabelFor(model => model.ShowInDashBoard) </label>
                                @Html.CheckBoxFor(model => model.ShowInDashBoard, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShowInDashBoard)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button id="CancelQuickAdd" type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
    <input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="QuickAddFromIndex(event,true,'T_Chart','null','null',0);" />
}
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Common3/chosen.jquery.js" type="text/javascript"></script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>
<script>
    $(document).ready(function () {
        $('#EntityName').change(function () {

            var SelectedText = $('#EntityName :selected').val();
            if (SelectedText.length == 0) {
                window.location.reload();
                return false;
            }
            $.ajax({
                url: '@Url.Action("GetPropertiesofEntity", "BusinessRule")' + '?Entity=' + SelectedText,
                type: "GET",
                cache: false,
                async: false,
                success: function (result) {
                    var optionDOM = '<option value="SelectProperty">--Select Property--</option>';
                    for (i = 0; i < result.length; i++) {
                        optionDOM += '<option value="' + result[i].Name + '">' + result[i].DisplayName + '</option>';
                    }
                    $("#" + "XAxis").html(optionDOM);
                    $("#" + "YAxis").html(optionDOM);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("error");
                }
            })
        });
    })
</script>