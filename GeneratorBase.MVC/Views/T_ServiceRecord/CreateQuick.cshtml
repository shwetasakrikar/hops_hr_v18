@model GeneratorBase.MVC.Models.T_ServiceRecord
@{
    ViewBag.Title = "Create Service Record";
    Layout = null;
}
<script>
    $(document).ready(function () {
        try {
            var hostingEntityName = "";
            if ('@Convert.ToString(ViewData["AssociatedType"])' != null) {
                hostingEntityName = '@Convert.ToString(ViewData["AssociatedType"])';
                 $('#' + hostingEntityName + 'ID').attr("lock","true");
				  $('#' + hostingEntityName + 'ID').trigger("change");
            }
			
        }
        catch (ex) { }
		
		 
    });
</script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.T_ServiceRecordIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_ServiceRecordIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_ServiceRecordIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.T_ServiceRecordIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_ServiceRecordIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_ServiceRecordIsSetValueUIRule);
    }
}
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("CreateQuick", "T_ServiceRecord",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
	<input type="hidden" id="ErrMsgQuickAdd" />
	@*<label id="ErrMsgQuickAdd" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
    <div id="errorContainerQuickAdd" style="display: none">
        <div id="errorsMsgQuickAdd"></div>
        <div id="errorsQuickAdd"></div>
    </div>
	<div id="divDisplayThresholdLimit" style="display:none;">
	</div>
	 <div id="divDisplayBRmsgMandatory" style="display:none;">
	</div>
	<div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
	</div>
		    <div class="row">
	@Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"]))
	@Html.Hidden("HostingEntityName", Convert.ToString(ViewData["HostingEntityName"]))
    @Html.Hidden("HostingEntityID", Convert.ToString(ViewData["HostingEntityID"]))
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-default AppForm">
                <div class="panel-body">
               					<div class="row">
				        
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48893">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
                                            <h3 class="panel-title" alt="Basic Profile" title="Basic Profile">Basic Profile</h3>
                                        </div>
                                        <div class="panel-body">
                                    

			@if(User.CanView("T_ServiceRecord","T_EmployeeEmploymentProfileID"))
				{
					
							<div class='col-sm-6'  id="dvT_EmployeeEmploymentProfileID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_EmployeeEmploymentProfileID) <span class="text-danger-reg">*</span></label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_EmployeeEmploymentProfileID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeEmploymentProfileID" }) })
 @*<script>
    $(function () {
        LoadUserDropdown('ID');
    });
</script>*@
                                @Html.ValidationMessageFor(model => model.T_EmployeeEmploymentProfileID)
                            </div>
                        </div>
                    </div>
     
		}
                                    

			@if(User.CanView("T_ServiceRecord","T_EmploymentRecordEmployeeTypeID"))
				{
					
							<div class='col-sm-6'  id="dvT_EmploymentRecordEmployeeTypeID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_EmploymentRecordEmployeeTypeID) <span class="text-danger-reg">*</span></label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_EmploymentRecordEmployeeTypeID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_EmployeeType", @dataurl = Url.Action("GetAllValue", "T_EmployeeType",new { caller = "T_EmploymentRecordEmployeeTypeID" }) })
 @*<script>
    $(function () {
        LoadUserDropdown('ID');
    });
</script>*@
                                @Html.ValidationMessageFor(model => model.T_EmploymentRecordEmployeeTypeID)
                            </div>
                        </div>
                    </div>
     
		}

						 @if(User.CanView("T_ServiceRecord","T_IsCurrent"))
			{
     						<div class='col-sm-6' id="dvT_IsCurrent">
                                <label >
                                    @Html.LabelFor(model => model.T_IsCurrent) 
                                </label>
                                <div class="form-group" title="Current Active Service Record">
									@Html.CheckBox("T_IsCurrent", false)
                                    @Html.ValidationMessageFor(model => model.T_IsCurrent)
                                </div>
                            </div>
			}
                            
                                    

			@if(User.CanView("T_ServiceRecord","T_EmploymentRecordHiredAtFacilityID"))
				{
					
							<div class='col-sm-6'  id="dvT_EmploymentRecordHiredAtFacilityID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_EmploymentRecordHiredAtFacilityID) <span class="text-danger-reg">*</span></label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_EmploymentRecordHiredAtFacilityID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmploymentRecordHiredAtFacilityID" }) })
 @*<script>
    $(function () {
        LoadUserDropdown('ID');
    });
</script>*@
                                @Html.ValidationMessageFor(model => model.T_EmploymentRecordHiredAtFacilityID)
                            </div>
                        </div>
                    </div>
     
		}

@if(User.CanView("T_ServiceRecord","T_HireDate"))
{
     
                            <div class='col-sm-6' id="dvT_HireDate">
                                <label >@Html.LabelFor(model => model.T_HireDate)<span class="text-danger-reg">*</span></label>
                                <div class="form-group" title="Hire  Date">
                                    <div class="input-group date" id="datetimepickerT_HireDate">
							@Html.TextBoxFor(model => model.T_HireDate, new {@id = "T_HireDate" ,@class = "form-control",@Value = DateTime.Now.ToString("MM/dd/yyyy") })
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_HireDate)
                                </div>
                                <script type="text/javascript">
                                    $(function () {
										$('#T_HireDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_HireDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
		}



@if(User.CanView("T_ServiceRecord","T_TerminationDate"))
{
     
                            <div class='col-sm-6' id="dvT_TerminationDate">
                                <label >@Html.LabelFor(model => model.T_TerminationDate)</label>
                                <div class="form-group" title="Separation Date">
                                    <div class="input-group date" id="datetimepickerT_TerminationDate">
							@Html.TextBoxFor(model => model.T_TerminationDate, new {@id = "T_TerminationDate" ,@class = "form-control" })
										<span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_TerminationDate)
                                </div>
                                <script type="text/javascript">
                                    $(function () {
										$('#T_TerminationDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_TerminationDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>
		}


							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				        
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48891">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
                                            <h3 class="panel-title" alt="Probation Details" title="Probation Details">Probation Details</h3>
                                        </div>
                                        <div class="panel-body">

@if(User.CanView("T_ServiceRecord","T_ThreeMonthDue"))
{
     
                            <div class='col-sm-6' id="dvT_ThreeMonthDue">
                                <label >@Html.LabelFor(model => model.T_ThreeMonthDue)</label>
                                <div class="form-group" title="Three Month Due">
                                    <div class="input-group date" id="datetimepickerT_ThreeMonthDue">
							@Html.TextBoxFor(model => model.T_ThreeMonthDue, new {@id = "T_ThreeMonthDue" ,@class = "form-control" ,@format = "hh:mm", @readonly = "readonly"})
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
										
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ThreeMonthDue)
                                </div>
                            </div>
		}



						 @if(User.CanView("T_ServiceRecord","T_ThreeMonthReviewCompleted"))
			{
     						<div class='col-sm-6' id="dvT_ThreeMonthReviewCompleted">
                                <label >
                                    @Html.LabelFor(model => model.T_ThreeMonthReviewCompleted) 
                                </label>
                                <div class="form-group" title="Three Month Review Completed">
									@Html.CheckBox("T_ThreeMonthReviewCompleted", false)
                                    @Html.ValidationMessageFor(model => model.T_ThreeMonthReviewCompleted)
                                </div>
                            </div>
			}
                            
							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				        
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48892">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
                                            <h3 class="panel-title" alt="Separation Details" title="Separation Details">Separation Details</h3>
                                        </div>
                                        <div class="panel-body">
                                    

			@if(User.CanView("T_ServiceRecord","T_EmployeeTerminationReasonID"))
				{
					
							<div class='col-sm-6'  id="dvT_EmployeeTerminationReasonID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_EmployeeTerminationReasonID) </label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_EmployeeTerminationReasonID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_TerminationReason", @dataurl = Url.Action("GetAllValue", "T_TerminationReason",new { caller = "T_EmployeeTerminationReasonID" }) })
 @*<script>
    $(function () {
        LoadUserDropdown('ID');
    });
</script>*@
                                @Html.ValidationMessageFor(model => model.T_EmployeeTerminationReasonID)
                            </div>
                        </div>
                    </div>
     
		}
                                    

			@if(User.CanView("T_ServiceRecord","T_EmployeeRecordTerminationFacilityID"))
				{
					
							<div class='col-sm-6'  id="dvT_EmployeeRecordTerminationFacilityID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_EmployeeRecordTerminationFacilityID) </label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_EmployeeRecordTerminationFacilityID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmployeeRecordTerminationFacilityID" }) })
 @*<script>
    $(function () {
        LoadUserDropdown('ID');
    });
</script>*@
                                @Html.ValidationMessageFor(model => model.T_EmployeeRecordTerminationFacilityID)
                            </div>
                        </div>
                    </div>
     
		}

						 @if(User.CanView("T_ServiceRecord","T_EligibleForRehire"))
			{
     						<div class='col-sm-6' id="dvT_EligibleForRehire">
                                <label >
                                    @Html.LabelFor(model => model.T_EligibleForRehire) 
                                </label>
                                <div class="form-group" title="Not  Eligible  For  Rehire">
									@Html.CheckBox("T_EligibleForRehire", false)
                                    @Html.ValidationMessageFor(model => model.T_EligibleForRehire)
                                </div>
                            </div>
			}
                            
							</div>
                         </div>
                      </div>
       </div>
                        </div>
                    </div>
                </div>
        </div>
		<button id="CancelQuickAdd" type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>

		var busineesrule = User.businessrules.Where(p => p.EntityName == "T_ServiceRecord").ToList();
		 var lstinlineentityname = "";
		 var lstinlineassocdispname ="";
		 var lstinlineassocname = "";
        if (ViewBag.IsAddPop != null)
		{
			<input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');QuickAdd(event,'T_ServiceRecord','@busineesrule',@busineesrule.Count,'OnCreate','ErrMsgQuickAdd',false,'@lstinlineassocname','@lstinlineassocdispname','@lstinlineentityname');" />
 <input type="submit"  value="Create & Continue" btnval="createcontinue" class="btn btn-primary btn-sm" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');QuickAdd(event,'T_ServiceRecord','@busineesrule',@busineesrule.Count,'OnCreate','ErrMsgQuickAdd',false,'@lstinlineassocname','@lstinlineassocdispname','@lstinlineentityname');" />
		}
		else
		{
			<input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');QuickAddFromIndex(event,true,'T_ServiceRecord','@ViewData["AssociatedType"]','@busineesrule',@busineesrule.Count,'OnCreate','ErrMsgQuickAdd',false,'@lstinlineassocname','@lstinlineassocdispname','@lstinlineentityname');" />
 <input type="submit" value="Create & Continue" btnval="createcontinue" class="btn btn-primary btn-sm" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');QuickAddFromIndex(event,true,'T_ServiceRecord','@ViewData["AssociatedType"]','@busineesrule',@busineesrule.Count,'OnCreate','ErrMsgQuickAdd',false,'@lstinlineassocname','@lstinlineassocdispname','@lstinlineentityname');" />
		}
}
<script src="@Url.Content("~/bundles/jqueryval")" type="text/javascript"></script>
<script src="@Url.Content("~/bundles/common3")" type="text/javascript"></script>


<script type='text/javascript'>
    $(document).ready(function () {
        try {
            document.getElementsByTagName("body")[0].focus();
            $("#addPopup").removeAttr("tabindex");
            var cltcoll = $("#dvPopup").find('input[type=text]:not([class=hidden]):not([readonly]),textarea:not([readonly])');
            var cltid = "";
            $(cltcoll).each(function () {
			  if ($(this).attr("id") == undefined)
                    return
                var dvhidden = $("#dv" + $(this).attr("id"));
				var dvDate = $("#datetimepicker" + $(this).attr("id")).attr("id");

                if (!(dvhidden.css('display') == 'none') && dvDate == undefined) {
                    cltid = $(this);
                    return false;
                }
            });
            if (cltid != "" && cltid != undefined)
                setTimeout(function () { $(cltid).focus(); }, 500);
			var ctrlReadonly = $("#dvPopup").find('input[type=text][readonly],textarea[readonly]');
            $(ctrlReadonly).each(function () {
                $(ctrlReadonly).attr("tabindex", "-1");
            });
        }
        catch (ex) { }
    });
</script>

