@model GeneratorBase.MVC.Models.T_ServiceRecord
@using PagedList;
@{
    ViewBag.Title = "Edit Service Record";
	var EditPermission = User.CanEditItem("T_ServiceRecord", Model, User);
	var DeletePermission = User.CanDeleteItem("T_ServiceRecord", Model, User);
}
@functions {
    object getHtmlAttributes(string Property)
    {
		if(Property=="T_ThreeMonthDue")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_SixMonthDue")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_TwelveMonthDue")
		 return new { @class = "form-control", @readonly = "readonly" };
        if (User.CanEdit("T_ServiceRecord", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_ServiceRecordIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_ServiceRecordIsHiddenRule);
    }
}
@using (Html.BeginForm("EditWizard", "T_ServiceRecord", new { UrlReferrer = Convert.ToString(ViewData["T_ServiceRecordParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data",@id="frmT_ServiceRecord" })) 
{
	@Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
    @Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.ConcurrencyKey)
	@*<label id="ErrMsg" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
    <input type="hidden" id="ErrMsg" />
    <div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
    </div>
    <div id="divDisplayBRmsgMandatory" style="display:none;">
    </div>
    <div id="divDisplayLockRecord" style="display:none;">
    </div>
    <div id="divDisplayBRReadOnly" style="display:none;">
    </div>
	<div id="divDisplayCodeFragment" style="display:none;">
	</div>
			<div class="row">
        <br />
        <div id=wizard>
			<ol>
		<li>Basic Profile</li>
		<li>Probation Details</li>
		<li>Separation Details</li>
		<li>Notes</li>
            @if ( User.CanEdit("T_Comment"))
                {
				<li>Comment</li>
				}
       		</ol>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Basic Profile</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_ServiceRecord","T_EmployeeEmploymentProfileID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeEmploymentProfileID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EmployeeEmploymentProfileID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_ServiceRecord", "T_EmployeeEmploymentProfileID"))
		{
			@Html.DropDownList("T_EmployeeEmploymentProfileID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeEmploymentProfileID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_EmployeeEmploymentProfileID, new { @class = "form-control" })
			@Html.DropDownList("T_EmployeeEmploymentProfileID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeEmploymentProfileID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_EmployeeEmploymentProfileID)
								 @if ( User.CanAdd("T_Employee"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Employee','dvPopup','" + Url.Action("CreateQuick", "T_Employee", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_Employee"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_Employee" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_Employee" target="_blank" href="@Url.Action("Details", "T_Employee", new { Id = Html.DisplayFor(model => model.t_employeeemploymentprofile.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_employeeemploymentprofile == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Employee").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_Employee").attr("title", '@Model.t_employeeemploymentprofile.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_EmployeeEmploymentProfileID, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_EmploymentRecordEmployeeTypeID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmploymentRecordEmployeeTypeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EmploymentRecordEmployeeTypeID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_ServiceRecord", "T_EmploymentRecordEmployeeTypeID"))
		{
			@Html.DropDownList("T_EmploymentRecordEmployeeTypeID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_EmployeeType", @dataurl = Url.Action("GetAllValue", "T_EmployeeType",new { caller = "T_EmploymentRecordEmployeeTypeID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_EmploymentRecordEmployeeTypeID, new { @class = "form-control" })
			@Html.DropDownList("T_EmploymentRecordEmployeeTypeID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_EmployeeType", @dataurl = Url.Action("GetAllValue", "T_EmployeeType",new { caller = "T_EmploymentRecordEmployeeTypeID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_EmploymentRecordEmployeeTypeID)
								 @if ( User.CanAdd("T_EmployeeType"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Employee Type','dvPopup','" + Url.Action("CreateQuick", "T_EmployeeType", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_EmployeeType"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_EmployeeType" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_EmployeeType" target="_blank" href="@Url.Action("Details", "T_EmployeeType", new { Id = Html.DisplayFor(model => model.t_employmentrecordemployeetype.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_employmentrecordemployeetype == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_EmployeeType").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_EmployeeType").attr("title", '@Model.t_employmentrecordemployeetype.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_EmploymentRecordEmployeeTypeID, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_IsCurrent"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_IsCurrent">
							<div class="form-group" title="Current Active Service Record">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_IsCurrent) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_IsCurrent", Model.T_IsCurrent.HasValue ? Model.T_IsCurrent : false)
                                    @Html.ValidationMessageFor(model => model.T_IsCurrent)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_IsCurrent, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_EmploymentRecordHiredAtFacilityID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmploymentRecordHiredAtFacilityID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EmploymentRecordHiredAtFacilityID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_ServiceRecord", "T_EmploymentRecordHiredAtFacilityID"))
		{
			@Html.DropDownList("T_EmploymentRecordHiredAtFacilityID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmploymentRecordHiredAtFacilityID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_EmploymentRecordHiredAtFacilityID, new { @class = "form-control" })
			@Html.DropDownList("T_EmploymentRecordHiredAtFacilityID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmploymentRecordHiredAtFacilityID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_EmploymentRecordHiredAtFacilityID)
								 @if ( User.CanAdd("T_AllFacilities"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Hired At Facility','dvPopup','" + Url.Action("CreateQuick", "T_AllFacilities", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_AllFacilities"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_AllFacilities" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_AllFacilities" target="_blank" href="@Url.Action("Details", "T_AllFacilities", new { Id = Html.DisplayFor(model => model.t_employmentrecordhiredatfacility.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_employmentrecordhiredatfacility == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_AllFacilities").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_AllFacilities").attr("title", '@Model.t_employmentrecordhiredatfacility.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_EmploymentRecordHiredAtFacilityID, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_HireDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_HireDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_HireDate) <span class="text-danger-reg">*</span></label>
                                <div class="form-group" title="Hire  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_HireDate">
									    @Html.TextBoxFor(model => model.T_HireDate, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_HireDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_HireDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_HireDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_HireDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_HireDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_HireDate, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_TerminationDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TerminationDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_TerminationDate) </label>
                                <div class="form-group" title="Separation Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_TerminationDate">
									    @Html.TextBoxFor(model => model.T_TerminationDate, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_TerminationDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_TerminationDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_TerminationDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_TerminationDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_TerminationDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_TerminationDate, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Probation Details</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_ServiceRecord","T_ThreeMonthDue"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ThreeMonthDue">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ThreeMonthDue) </label>
                                <div class="form-group" title="Three Month Due">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ThreeMonthDue">
									    @Html.TextBoxFor(model => model.T_ThreeMonthDue, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_ThreeMonthDue") ? (object)new {@class = "form-control",@actualvalue = Model.T_ThreeMonthDue.HasValue ? Model.T_ThreeMonthDue.Value : DateTime.UtcNow,@format = "hh:mm" } : (object)new { @class = "form-control", @readonly="readonly",@actualvalue = Model.T_ThreeMonthDue.HasValue ? Model.T_ThreeMonthDue.Value : DateTime.UtcNow,@format = "hh:mm"})
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ThreeMonthDue)
								</div>
                                </div>
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ThreeMonthDue, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_ThreeMonthReviewCompleted"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ThreeMonthReviewCompleted">
							<div class="form-group" title="Three Month Review Completed">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_ThreeMonthReviewCompleted) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_ThreeMonthReviewCompleted", Model.T_ThreeMonthReviewCompleted.HasValue ? Model.T_ThreeMonthReviewCompleted : false)
                                    @Html.ValidationMessageFor(model => model.T_ThreeMonthReviewCompleted)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_ThreeMonthReviewCompleted, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_SixMonthDue"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_SixMonthDue">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_SixMonthDue) </label>
                                <div class="form-group" title="Six Month Due">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_SixMonthDue">
									    @Html.TextBoxFor(model => model.T_SixMonthDue, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_SixMonthDue") ? (object)new {@class = "form-control",@actualvalue = Model.T_SixMonthDue.HasValue ? Model.T_SixMonthDue.Value : DateTime.UtcNow,@format = "hh:mm" } : (object)new { @class = "form-control", @readonly="readonly",@actualvalue = Model.T_SixMonthDue.HasValue ? Model.T_SixMonthDue.Value : DateTime.UtcNow,@format = "hh:mm"})
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_SixMonthDue)
								</div>
                                </div>
								
                            </div>
} else { @Html.HiddenFor(model => model.T_SixMonthDue, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_SixMonthReviewCompleted"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_SixMonthReviewCompleted">
							<div class="form-group" title="Six  Month  Review  Completed">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_SixMonthReviewCompleted) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_SixMonthReviewCompleted", Model.T_SixMonthReviewCompleted.HasValue ? Model.T_SixMonthReviewCompleted : false)
                                    @Html.ValidationMessageFor(model => model.T_SixMonthReviewCompleted)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_SixMonthReviewCompleted, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_TwelveMonthDue"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TwelveMonthDue">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_TwelveMonthDue) </label>
                                <div class="form-group" title="Twelve Month Due">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_TwelveMonthDue">
									    @Html.TextBoxFor(model => model.T_TwelveMonthDue, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_TwelveMonthDue") ? (object)new {@class = "form-control",@actualvalue = Model.T_TwelveMonthDue.HasValue ? Model.T_TwelveMonthDue.Value : DateTime.UtcNow,@format = "hh:mm" } : (object)new { @class = "form-control", @readonly="readonly",@actualvalue = Model.T_TwelveMonthDue.HasValue ? Model.T_TwelveMonthDue.Value : DateTime.UtcNow,@format = "hh:mm"})
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_TwelveMonthDue)
								</div>
                                </div>
								
                            </div>
} else { @Html.HiddenFor(model => model.T_TwelveMonthDue, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_TwelveMonthReviewCompleted"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TwelveMonthReviewCompleted">
							<div class="form-group" title="Twelve  Month  Review  Completed">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_TwelveMonthReviewCompleted) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_TwelveMonthReviewCompleted", Model.T_TwelveMonthReviewCompleted.HasValue ? Model.T_TwelveMonthReviewCompleted : false)
                                    @Html.ValidationMessageFor(model => model.T_TwelveMonthReviewCompleted)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_TwelveMonthReviewCompleted, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_ProbationaryExtensionDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ProbationaryExtensionDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ProbationaryExtensionDate) </label>
                                <div class="form-group" title="Probationary  Extension  Date">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ProbationaryExtensionDate">
									    @Html.TextBoxFor(model => model.T_ProbationaryExtensionDate, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_ProbationaryExtensionDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ProbationaryExtensionDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_ProbationaryExtensionDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ProbationaryExtensionDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_ProbationaryExtensionDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ProbationaryExtensionDate, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_ExtensionReviewCompleted"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ExtensionReviewCompleted">
							<div class="form-group" title="Extension Review Completed">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_ExtensionReviewCompleted) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_ExtensionReviewCompleted", Model.T_ExtensionReviewCompleted.HasValue ? Model.T_ExtensionReviewCompleted : false)
                                    @Html.ValidationMessageFor(model => model.T_ExtensionReviewCompleted)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_ExtensionReviewCompleted, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Separation Details</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_ServiceRecord","T_EmployeeTerminationReasonID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeTerminationReasonID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EmployeeTerminationReasonID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_ServiceRecord", "T_EmployeeTerminationReasonID"))
		{
			@Html.DropDownList("T_EmployeeTerminationReasonID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_TerminationReason", @dataurl = Url.Action("GetAllValue", "T_TerminationReason",new { caller = "T_EmployeeTerminationReasonID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_EmployeeTerminationReasonID, new { @class = "form-control" })
			@Html.DropDownList("T_EmployeeTerminationReasonID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_TerminationReason", @dataurl = Url.Action("GetAllValue", "T_TerminationReason",new { caller = "T_EmployeeTerminationReasonID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_EmployeeTerminationReasonID)
								 @if ( User.CanAdd("T_TerminationReason"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Separation Reason','dvPopup','" + Url.Action("CreateQuick", "T_TerminationReason", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_TerminationReason"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_TerminationReason" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_TerminationReason" target="_blank" href="@Url.Action("Details", "T_TerminationReason", new { Id = Html.DisplayFor(model => model.t_employeeterminationreason.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_employeeterminationreason == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_TerminationReason").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_TerminationReason").attr("title", '@Model.t_employeeterminationreason.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_EmployeeTerminationReasonID, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_EmployeeRecordTerminationFacilityID"))
{
                    <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeRecordTerminationFacilityID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_EmployeeRecordTerminationFacilityID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
							<div class="input-group" style="width:100%;">									
									@if (User.CanEdit("T_ServiceRecord", "T_EmployeeRecordTerminationFacilityID"))
		{
			@Html.DropDownList("T_EmployeeRecordTerminationFacilityID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmployeeRecordTerminationFacilityID" }) })
		}
		else
		{
			@Html.HiddenFor(model => model.T_EmployeeRecordTerminationFacilityID, new { @class = "form-control" })
			@Html.DropDownList("T_EmployeeRecordTerminationFacilityID", null, "-- Select --", new {      @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_AllFacilities", @dataurl = Url.Action("GetAllValue", "T_AllFacilities",new { caller = "T_EmployeeRecordTerminationFacilityID" }) })
		}
                                @Html.ValidationMessageFor(model => model.T_EmployeeRecordTerminationFacilityID)
								 @if ( User.CanAdd("T_AllFacilities"))
                                    {
                                <div class="input-group-btn">
										<a class="btn btn-default btn ie8fix"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','After Termination Joined Facility','dvPopup','" + Url.Action("CreateQuick", "T_AllFacilities", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
											<span class="glyphicon glyphicon-plus-sign"></span>
										</a>
                                </div>
								}
								                                            
											 @if ( User.CanView("T_AllFacilities"))
                                                    {
                                                        <div class="input-group-btn" id="dvLinkToT_AllFacilities" title="">
                                                            <a class="btn btn-default btn ie8fix" id="aLinkToT_AllFacilities" target="_blank" href="@Url.Action("Details", "T_AllFacilities", new { Id = Html.DisplayFor(model => model.t_employeerecordterminationfacility.Id).ToString()}, null)"><i class="glyphicon glyphicon-eye-open"></i></a>
                                                        </div>
                                                        if (Model.t_employeerecordterminationfacility == null)
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_AllFacilities").hide();
                                                                });
                                                            </script>
                                                        }
                                                        else
                                                        {
                                                            <script>
                                                                $(function () {
                                                                    $("#dvLinkToT_AllFacilities").attr("title", '@Model.t_employeerecordterminationfacility.DisplayValue');
                                                                });
                                                            </script>
                                                        }
                                                    }
                                        

							</div>
							</div>
                        </div>
                    </div>
					} else { @Html.HiddenFor(model => model.T_EmployeeRecordTerminationFacilityID, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_TwoWeekNoticeGiven"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TwoWeekNoticeGiven">
							<div class="form-group" title="Two  Week  Notice  Given">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_TwoWeekNoticeGiven) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_TwoWeekNoticeGiven", Model.T_TwoWeekNoticeGiven.HasValue ? Model.T_TwoWeekNoticeGiven : false)
                                    @Html.ValidationMessageFor(model => model.T_TwoWeekNoticeGiven)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_TwoWeekNoticeGiven, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_NoticeGivenDate"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_NoticeGivenDate">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_NoticeGivenDate) </label>
                                <div class="form-group" title="">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_NoticeGivenDate">
									    @Html.TextBoxFor(model => model.T_NoticeGivenDate, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_NoticeGivenDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_NoticeGivenDate)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_NoticeGivenDate"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_NoticeGivenDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_NoticeGivenDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_NoticeGivenDate, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_ThirtyDaysSinceTermination"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ThirtyDaysSinceTermination">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ThirtyDaysSinceTermination) </label>
                                <div class="form-group" title="Thirty Days Since Separation">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ThirtyDaysSinceTermination">
									    @Html.TextBoxFor(model => model.T_ThirtyDaysSinceTermination, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_ThirtyDaysSinceTermination") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ThirtyDaysSinceTermination)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_ThirtyDaysSinceTermination"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ThirtyDaysSinceTermination').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_ThirtyDaysSinceTermination').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ThirtyDaysSinceTermination, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_ThirteenWeeksSinceTermination"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ThirteenWeeksSinceTermination">
                                <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ThirteenWeeksSinceTermination) </label>
                                <div class="form-group" title="Thirteen Weeks Since Separation">
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
                                    <div class="input-group date" id="datetimepickerT_ThirteenWeeksSinceTermination">
									    @Html.TextBoxFor(model => model.T_ThirteenWeeksSinceTermination, "{0:MM/dd/yyyy}", User.CanEdit("T_ServiceRecord", "T_ThirteenWeeksSinceTermination") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"})
									 <span class="input-group-addon btn-default calendar">
                                           <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.T_ThirteenWeeksSinceTermination)
								</div>
                                </div>
	
                               @if(User.CanEdit("T_ServiceRecord", "T_ThirteenWeeksSinceTermination"))
								{
                                <script type="text/javascript">
                                    $(function () {
										$('#T_ThirteenWeeksSinceTermination').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_ThirteenWeeksSinceTermination').datetimepicker({ pickTime:false });
                                    });
                                </script>
								}
								
                            </div>
} else { @Html.HiddenFor(model => model.T_ThirteenWeeksSinceTermination, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_EligibleForRehire"))
{
                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EligibleForRehire">
							<div class="form-group" title="Not  Eligible  For  Rehire">
                                <label class="col-sm-5 col-md-5 col-xs-12" >
                                    @Html.LabelFor(model => model.T_EligibleForRehire) 
                                </label>
								<div class="input-group col-sm-7 col-md-7 col-xs-12">
									@Html.CheckBox("T_EligibleForRehire", Model.T_EligibleForRehire.HasValue ? Model.T_EligibleForRehire : false)
                                    @Html.ValidationMessageFor(model => model.T_EligibleForRehire)
                                </div>
								</div>
                            </div>
} else { @Html.HiddenFor(model => model.T_EligibleForRehire, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
			<div style="background-color:transparent; padding:0px;">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default AppForm">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Notes</h3>
                            </div>
                            <div class="panel-body">
@if(User.CanView("T_ServiceRecord","T_ProbationNotes"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ProbationNotes">
							<div class='form-group' title="Probation  Notes">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_ProbationNotes) </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								@Html.TextAreaFor(model => model.T_ProbationNotes, getHtmlAttributes("T_ProbationNotes"))
									@Html.ValidationMessageFor(model => model.T_ProbationNotes)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_ProbationNotes, new { @class = "form-control" })}
@if(User.CanView("T_ServiceRecord","T_TerminationNotes"))
{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TerminationNotes">
							<div class='form-group' title="Separation Notes">
								<label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_TerminationNotes) </label>
                                <div class="input-group col-sm-7 col-md-7 col-xs-12">
								@Html.TextAreaFor(model => model.T_TerminationNotes, getHtmlAttributes("T_TerminationNotes"))
									@Html.ValidationMessageFor(model => model.T_TerminationNotes)
								</div>
                             </div>
						</div>
} else { @Html.HiddenFor(model => model.T_TerminationNotes, new { @class = "form-control" })}
							</div>
                         </div>
                      </div>
					</div>
				</div>
@if ( User.CanEdit("T_Comment"))
                {
			<div>
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="panel panel-default">
                            <div class="panel-heading clearfix">
                                <i class="icon-calendar"></i>
                                <h3 class="panel-title">Comment</h3>
                            </div>
                            <div class="panel-body" id="T_ServiceRecordComments">
                                @if ( User.CanView("T_Comment"))
                                {
                                    Html.RenderAction("Index", "T_Comment", new {RenderPartial=true, HostingEntity = "T_ServiceRecord", HostingEntityID = @Model.Id == null ? 0 : @Model.Id, AssociatedType = "T_ServiceRecordComments" });
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
			}
</div>
   @Html.ActionLink("C", "Cancel", new { UrlReferrer = ViewData["T_ServiceRecordParentUrl"] }, new { @id = "cancel", @style = "display:none;" })
        @if (EditPermission)
        {
            <input type="submit"  name="command" id="WizardSubmit" style="display:none;" />
        }
        <input type="hidden" name="hdncommand" value="" />
    </div>
 <br />
}
<script>
    $(document).ready(function () {
        try {
            focusOnControl('frmT_ServiceRecord');
        }
        catch (ex) { }
    });
</script>
 <script>

   
    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
<script>
	$("input[type='submit']").click(function (event) {
	if (!$("#frmT_ServiceRecord").valid()) return;
	var $this = $(this);
					GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
	$('input:hidden[name="hdncommand"]').val($this.val());
	});
	$(document).ready(function () {
		DisableTabOnReadonlyProperty("frmT_Donation");
	});
</script>
@{
var businessrule = User.businessrules.Where(p => p.EntityName == "T_ServiceRecord").ToList();

if ((businessrule != null && businessrule.Count > 0) )
{
var ruleids = businessrule.Select(q => q.Id).ToList();
var typelist  = string.Join(",", (new GeneratorBase.MVC.Models.RuleActionContext()).RuleActions.Where(p => ruleids.Contains(p.RuleActionID.Value) && p.associatedactiontype.TypeNo.HasValue).Select(p => p.associatedactiontype.TypeNo.Value).Distinct().ToList());

    <script>
		$(document).ready(function () {
				document.getElementById("ErrMsg").innerHTML = "";
				var flag = true;
                var dataurl = "";
                var form = "";
                var inlinecount = "0";

				 form = $("#frmT_ServiceRecord").serialize();
				dataurl = "@Url.Action("businessruletype", "T_ServiceRecord", new { ruleType = "OnEdit"})";
                ApplyBusinessRuleOnPageLoad("@typelist", dataurl, "T_ServiceRecord", false, "ErrMsg", form);
				//business rules on inline associations

    });
</script>
<script>
    $("form").submit(function (event) {
	if (!$("#frmT_ServiceRecord").valid()) return;
			document.getElementById("ErrMsg").innerHTML = "";
            var flag = true;
            var dataurl = "";
            var form = "";
            var inlinecount = "0";
			 form = $("#frmT_ServiceRecord").serialize();
   
				 dataurl = "@Url.Action("businessruletype", "T_ServiceRecord", new { ruleType = "OnEdit"})";
                 flag = ApplyBusinessRuleOnSubmit(dataurl, "T_ServiceRecord", false, "ErrMsg", form);

  				 //business rules on inline associations
               
			 if (flag)
                    $("form").find(':input').removeAttr('disabled');
            return flag;
		});
		 $(document).ready(function () {
                $("input[type='submit']").on('blur', function () {
                    $("input[type='submit']").removeAttr('disabled');
                });
               
            });
</script>
}
 
}


