@model GeneratorBase.MVC.Models.T_UnitX
@{
    if (!string.IsNullOrEmpty(ViewBag.T_UnitXIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_UnitXIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_UnitXIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.T_UnitXIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_UnitXIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_UnitXIsSetValueUIRule);
    }
}
@using (Html.BeginForm("Create", "T_UnitX",new {UrlReferrer = Convert.ToString(ViewData["T_UnitXParentUrl"]), IsDDAdd = ViewBag.IsDDAdd }, FormMethod.Post, new { enctype = "multipart/form-data",id="frmT_UnitX" }))
{
   @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
	<input type="hidden" id="ErrMsg" />
	@*<label id="ErrMsg" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>*@
    <div id="errorContainer" style="display: none">
        <div id="errorsMsg"></div>
        <div id="errors"></div>
    </div>
	 
	 <div id="divDisplayThresholdLimit" style="display:none;">
	</div>
	 <div id="divDisplayBRmsgMandatory" style="display:none;">
	</div>
	<div id="divDisplayBRmsgBeforeSaveProp" style="display:none;">
	</div>
	<div id="divDisplayCodeFragment" style="display:none;">
	</div>

	<div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="AppForm">
                <div class="">
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48907">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#basicdetailsbody" alt="Basic Details" title="Basic Details"><span class="glyphicon glyphicon-chevron-down"></span> Basic Details</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="basicdetailsbody">					
      <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FacilityUnitXID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_FacilityUnitXID) <span class="text-danger-reg">*</span></label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_FacilityUnitXID", null, "-- Select --", new {   @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Facility", @dataurl = Url.Action("GetAllValue", "T_Facility",new { caller = "T_FacilityUnitXID" }) })
			@Html.ValidationMessageFor(model => model.T_FacilityUnitXID)
			@if ( User.CanAdd("T_Facility"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Facility"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Facility','dvPopup','" + Url.Action("CreateQuick", "T_Facility", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
@if(User.CanView("T_UnitX","T_UnitXUnitAssociationID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_UnitXUnitAssociationID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_UnitXUnitAssociationID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_UnitXUnitAssociationID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Unit", @dataurl = Url.Action("GetAllValue", "T_Unit",new { caller = "T_UnitXUnitAssociationID" }) })
			@Html.ValidationMessageFor(model => model.T_UnitXUnitAssociationID)
			@if ( User.CanAdd("T_Unit"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Unit"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Unit Name','dvPopup','" + Url.Action("CreateQuick", "T_Unit", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_UnitX","T_WardDepartmentID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_WardDepartmentID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_WardDepartmentID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_WardDepartmentID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Department", @dataurl = Url.Action("GetAllValue", "T_Department",new { caller = "T_WardDepartmentID" }) })
			@Html.ValidationMessageFor(model => model.T_WardDepartmentID)
			@if ( User.CanAdd("T_Department"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Department"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Department','dvPopup','" + Url.Action("CreateQuick", "T_Department", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_UnitX","T_UnitXDepartmentAreaID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_UnitXDepartmentAreaID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_UnitXDepartmentAreaID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_UnitXDepartmentAreaID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_DepartmentArea", @dataurl = Url.Action("GetAllValue", "T_DepartmentArea",new { caller = "T_UnitXDepartmentAreaID" }) })
			@Html.ValidationMessageFor(model => model.T_UnitXDepartmentAreaID)
			@if ( User.CanAdd("T_DepartmentArea"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_DepartmentArea"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Department Area','dvPopup','" + Url.Action("CreateQuick", "T_DepartmentArea", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_UnitX","T_WardOrgCodeID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_WardOrgCodeID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_WardOrgCodeID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_WardOrgCodeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_OrgCodes", @dataurl = Url.Action("GetAllValue", "T_OrgCodes",new { caller = "T_WardOrgCodeID" }) })
			@Html.ValidationMessageFor(model => model.T_WardOrgCodeID)
			@if ( User.CanAdd("T_OrgCodes"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_OrgCodes"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Org Code','dvPopup','" + Url.Action("CreateQuick", "T_OrgCodes", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  			 @if(User.CanView("T_UnitX","T_Unit"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Unit">
                                <div class='form-group' title="Unit">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_Unit) <span class="text-danger-reg">*</span></label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_Unit, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Unit)
									</div>
                                </div>
					</div>
				}

					
@if(User.CanView("T_UnitX","T_UnitXFloorID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_UnitXFloorID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_UnitXFloorID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_UnitXFloorID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Floor", @dataurl = Url.Action("GetAllValue", "T_Floor",new { caller = "T_UnitXFloorID" }) })
			@Html.ValidationMessageFor(model => model.T_UnitXFloorID)
			@if ( User.CanAdd("T_Floor"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Floor"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Floor','dvPopup','" + Url.Action("CreateQuick", "T_Floor", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  			 @if(User.CanView("T_UnitX","T_UnitPhoneNumber"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_UnitPhoneNumber">
                                <div class='form-group' title="Unit Phone Number">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_UnitPhoneNumber) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_UnitPhoneNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_UnitPhoneNumber)
									</div>
                                </div>
					</div>
				}

					
			 @if(User.CanView("T_UnitX","T_MailDistributor"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_MailDistributor">
                                <div class='form-group' title="Mail  Distributor">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_MailDistributor) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_MailDistributor, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_MailDistributor)
									</div>
                                </div>
					</div>
				}

					
@if(User.CanView("T_UnitX","T_EmployeeAdministratorID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeAdministratorID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeAdministratorID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeAdministratorID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeAdministratorID" }) })
			@Html.ValidationMessageFor(model => model.T_EmployeeAdministratorID)
			@if ( User.CanAdd("T_Employee"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Employee"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Administrator','dvPopup','" + Url.Action("CreateQuick", "T_Employee", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  @if(User.CanView("T_UnitX","T_EmployeeUnitXHeadID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeUnitXHeadID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_EmployeeUnitXHeadID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_EmployeeUnitXHeadID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeUnitXHeadID" }) })
			@Html.ValidationMessageFor(model => model.T_EmployeeUnitXHeadID)
			@if ( User.CanAdd("T_Employee"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_Employee"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Head','dvPopup','" + Url.Action("CreateQuick", "T_Employee", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48909">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#bedsbody" alt="Beds" title="Beds"><span class="glyphicon glyphicon-chevron-down"></span> Beds</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="bedsbody">					
			 @if(User.CanView("T_UnitX","T_MaleBeds"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_MaleBeds">
                                <div class='form-group' title="Male  Beds">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_MaleBeds) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_MaleBeds, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_MaleBeds)
									</div>
                                </div>
					</div>
				}

					
			 @if(User.CanView("T_UnitX","T_FemaleBeds"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FemaleBeds">
                                <div class='form-group' title="Female  Beds">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_FemaleBeds) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_FemaleBeds, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_FemaleBeds)
									</div>
                                </div>
					</div>
				}

					
			 @if(User.CanView("T_UnitX","T_TotalBeds"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_TotalBeds">
                                <div class='form-group' title="Total  Beds">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_TotalBeds) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_TotalBeds, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_TotalBeds)
									
									<div class="input-group-btn">
										<a class="btn btn-default btn ie8fix" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');">
											<span class="fam-arrow-refresh"></span>
                                        </a>
                                    </div>
									</div>
                                </div>
					</div>
				}

					
							</div>
                         </div>
                      </div>
       </div>
               					<div class="row">
				       
								<div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="panel panel-default" id="dvGroup48908">
                                        <div class="panel-heading clearfix">
                                            <i class="icon-calendar"></i>
								<h3 class="panel-title"> <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#accountingcodesbody" alt="Accounting Codes" title="Accounting Codes"><span class="glyphicon glyphicon-chevron-down"></span> Accounting Codes</a></h3>
                               </div>
							  <div class="panel-body panel-collapse in" id="accountingcodesbody">					
@if(User.CanView("T_UnitX","T_WardCostCenterID"))
	{
        <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_WardCostCenterID">
                        <div class='form-group'>
                            <label class="col-sm-5 col-md-5 col-xs-12">@Html.LabelFor(model => model.T_WardCostCenterID) </label>
							<div class="input-group col-sm-7 col-md-7 col-xs-12">
                            <div class="input-group" style="width:100%;">
									@Html.DropDownList("T_WardCostCenterID", null, "-- Select --", new {   @derivedurl = Url.Action("GetDerivedDetails", "T_UnitX"),   @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_CostCenter", @dataurl = Url.Action("GetAllValue", "T_CostCenter",new { caller = "T_WardCostCenterID" }) })
			@Html.ValidationMessageFor(model => model.T_WardCostCenterID)
			@if ( User.CanAdd("T_CostCenter"))
				{
			<div class="input-group-btn">
				<a class="btn btn-default btn ie8fix" id="addT_CostCenter"  data-target="#dvPopup" onclick="@Html.Raw("OpenPopUpEntity('addPopup','Cost Center','dvPopup','" + Url.Action("CreateQuick", "T_CostCenter", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")">
					<span class="glyphicon glyphicon-plus-sign"></span>
				</a>
			</div>
			}
		                                
                            </div>
							</div>
                        </div>
                    </div>
}
  			 @if(User.CanView("T_UnitX","T_Program"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Program">
                                <div class='form-group' title="Program">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_Program) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_Program, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_Program)
									</div>
                                </div>
					</div>
				}

					
			 @if(User.CanView("T_UnitX","T_Fund"))
								{
     <div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Fund">
                                <div class='form-group' title="Fund">
                                   <label class="col-sm-5 col-md-5 col-xs-12" >@Html.LabelFor(model => model.T_Fund) </label>
									<div class="input-group col-sm-7 col-md-7 col-xs-12">
									
                                    @Html.TextBoxFor(model => model.T_Fund, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_Fund)
									</div>
                                </div>
					</div>
				}

					
							</div>
                         </div>
                      </div>
       </div>
                        </div>
                    </div>
                </div>
        </div>
		<a class="btn btn-default btn-sm" onclick="goBack('@Url.Action("Index","T_UnitX")');" alt="Cancel" title="Cancel">Cancel</a>
          @*@Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["T_UnitXParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" })*@
	<input type="submit" name="command" value="Create" class="btn btn-primary btn-sm" alt="Create" title="Create"/>
    if (ViewBag.IsDDAdd == null && User.CanEdit("T_UnitX"))
    {
	<input type="submit" name="command" value="Create & Continue" class="btn btn-primary btn-sm" alt="Create & Continue" title="Create & Continue"/>
	}
	 <input type="hidden" name="hdncommand" value="" />
	<br/><br/>
}
	<script>
	    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
	
@{
		var businessrule = User.businessrules.Where(p => p.EntityName == "T_UnitX").ToList();
		
if ((businessrule != null && businessrule.Count > 0) )
    {
        <script>
            $("form").submit(function (event) {
			if (!$("#frmT_UnitX").valid()) return;
			var flag = true;
							document.getElementById("ErrMsg").innerHTML = "";
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                //var form = $(this).serialize();
 form = $("#frmT_UnitX").serialize();
  
                dataurl = "@Url.Action("businessruletype", "T_UnitX", new { ruleType = "OnCreate"})";
                flag = ApplyBusinessRuleOnSubmit(dataurl, "T_UnitX", false, "ErrMsg", form);
				//business rules on inline associations
				if (flag) {
								GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
                    $('input:hidden[name="hdncommand"]').val($(document.activeElement).val());

					 $("#frmT_UnitX").find(':input').removeAttr('disabled');
                }
				return flag;
			 });	
        </script>
    }
    else
    {
	<script>
            $("input[type='submit']").click(function (event) {
			if (!$("#frmT_UnitX").valid()) return;
                var $this = $(this);
				GetCalculationValue(event,'@Url.Action("GetCalculationValues")');
                $('input:hidden[name="hdncommand"]').val($this.val());
            });
	</script>
           
    }
}

 <script type='text/javascript'>$(document).ready(function () {   $('#T_UnitPhoneNumber').mask('999-999-9999');  });</script>
<script type='text/javascript'>
    $(document).ready(function () {
        try {
		 focusOnControl('frmT_UnitX');
        }
        catch (ex) { }
    });
</script>
<script>
    $(document).ready(function () {
        try {
            var hostingEntityName = "";
            if ('@Convert.ToString(ViewData["AssociatedType"])'.length > 0) {
                hostingEntityName = '@Convert.ToString(ViewData["AssociatedType"])';
                 $('#' + hostingEntityName + 'ID').attr("lock","true");
				  $('#' + hostingEntityName + 'ID').trigger("change");
            }
			
        }
        catch (ex) { }
		});
</script>

