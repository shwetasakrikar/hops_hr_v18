@model GeneratorBase.MVC.Models.CustomReports
@{
    ViewBag.Title = "Delete CustomReports";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-hand-down text-primary"></i>Delete CustomReports  <i class="glyphicon glyphicon-chevron-right small"></i>
            <span style="color:red;">  Are you sure you want to delete this?</span>
        </h1>
        <h2 class="text-primary">@Html.DisplayFor(model => model.DisplayValue)</h2>
    </div>
</div>
<div class="row">
    <label id="ErrMsg" class="text-primary small" style="color:red; vertical-align:middle; font-weight:100;"></label>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ConcurrencyKey)
        @Html.HiddenFor(model => model.Id)

        <dl class="dl-horizontal">


            @Html.HiddenFor(model => model.RelatedEntity)
            @Html.HiddenFor(model => model.ForeignKeyEntity)

            @Html.HiddenFor(model => model.RelationName)

            @Html.HiddenFor(model => model.EntityValues)
            @Html.HiddenFor(model => model.CrossTabPropertyValues)
            @Html.HiddenFor(model => model.QueryConditionValues)
            @Html.HiddenFor(model => model.RelationsValues)
            @Html.HiddenFor(model => model.OtherValues)
            @Html.HiddenFor(model => model.ResultProperty)
            @Html.HiddenFor(model => model.CrossTabRow)
            @Html.HiddenFor(model => model.FilterProperty)
            @Html.HiddenFor(model => model.ColumnOrder)
            @Html.HiddenFor(model => model.CrossTabColumn)
            @Html.HiddenFor(model => model.FilterCondition)
            @Html.HiddenFor(model => model.AggregateEntity)
            @Html.HiddenFor(model => model.GroupBy)
            @Html.HiddenFor(model => model.AggregateFunction)
            @Html.HiddenFor(model => model.SelectValueFromList)
            @Html.HiddenFor(model => model.SelectProperty)
            @Html.HiddenFor(model => model.OrderBy)
            @Html.HiddenFor(model => model.AggregateProperty)
            @Html.HiddenFor(model => model.FilterValue)
            @Html.HiddenFor(model => model.FilterType)

            <dt>
                @Html.DisplayNameFor(model => model.ReportName)
            </dt>
            <dd class="clearfix">
                @Html.DisplayFor(model => model.ReportName)
                @Html.HiddenFor(model => model.ReportName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ReportType)
            </dt>
            <dd class="clearfix">
                @Html.DisplayFor(model => model.ReportType)
                @Html.HiddenFor(model => model.ReportType)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CreatedByUserID)
            </dt>
            <dd class="clearfix">
                @Html.DisplayFor(model => model.createdbyuser.UserName)
                @Html.HiddenFor(model => model.CreatedByUserID)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </dt>
            <dd class="clearfix">
                @Html.DisplayFor(model => model.CreatedOn)
                @Html.HiddenFor(model => model.CreatedOn)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="clearfix">
                @Html.DisplayFor(model => model.Description)
                @Html.HiddenFor(model => model.Description)
            </dd>
          
        </dl>
        <br />
        <div class="row deletefix">
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default btn-sm" })

                @if ( User.CanDelete("CustomReports"))
                {
                    <input type="submit" value="Delete" class="btn btn-primary btn-sm" />
                }
            </div>
        </div>
    }
</div>
