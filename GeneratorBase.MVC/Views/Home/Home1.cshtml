@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Home";
}
<script>
    function HomeSearchClick(e, EntityName, url) {
        var txtval = $("#SearchString" + EntityName).val();
        url = url + "?searchString=" + txtval + "&IsDeepSearch=true&parent=Home";
        window.location.href = url;
    }
    function SearchKeyPress(e, entityName) {
        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
            $("#" + entityName + "Search").bind("click", (function () {
            }));
            $("#" + entityName + "Search").trigger("click");
        }
    }
</script>
@if (ViewBag.SelectedMainEntityValue != null && ViewBag.SelectedMainEntityValue.Count > 1 && !User.IsAdmin)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#SelectedMainEntityValue").val("All");
            $("#SelectedMainEntity").on("change", function () {
                $("#SelectedMainEntityValue").val($("#SelectedMainEntity option:selected").text());
            });
        });
        function getSelectedMainEntityValue() {
            var data = { "key": $("#SelectedMainEntity").val() };
            var urlSet = '@Url.Action("setSelectedMainentityValue", "Home")' + "?SelectedMainEntity=" + $("#SelectedMainEntity").val() + "&SelectedMainEntityValue=" + $("#SelectedMainEntityValue").val();
            var url = '@Url.Action("Index", "Home")';
            $.getJSON(urlSet, data, function (data) {
                if (data == true) {
                    window.location.href = url;
                }
            });
        }
    </script>

    <div class="modal fade" id="myModalSelectMainEntity" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                            Select Facility
                        </div>
                        <div class="form-group">
                            @Html.DropDownList("SelectedMainEntity", null, new { @data_live_search = "true", @class = "selectpicker form-control" })
                            @Html.Hidden("SelectedMainEntityValue")
                        </div>
                    </div>
                    <a onclick="getSelectedMainEntityValue();" id="mtsbtn" class="btn btn-primary btn-sm">Submit</a>
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-default btn-sm"> Logout</a>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.PageRoles != null && ViewBag.PageContent == null)
{
      <script type="text/javascript">
        $(document).ready(function () {
            $('#myModal').modal('show');
        });
		function getrole() {
            var selctedvalues = "";
            $("input[name='rdbroles']").each(function () {
                chkid = $(this).attr('id');
                var checked = "false";
                if ($("input[id='" + chkid + "']:checked").length == '1') {
                    selctedvalues += $(this).attr('value') + ",";
                }
            })
            if (selctedvalues != '' && typeof selctedvalues != 'undefined') {
                var data = { "key": selctedvalues };
                var urlSet = '@Url.Action("setRoleValue", "Home")';
                var url = '@Url.Action("Index", "Home")';
                $.getJSON(urlSet, data, function (data) {
                    if (data == true) {
						$('#myModal').modal('hide');
                        $.getJSON('@Url.Action("isAdmin", "Home")', function (data1) {
                            if (data1 == 'false') {
                                $('#myModalSelectMainEntity').modal('show');
                            }
                            else {
                                $('#myModalSelectMainEntity').modal('hide');
                                window.location.href = url;
                            }
                        });
                    }
                });
            }
            else {
                alert('Please select at lease one role.')
            }
        }
    </script>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                            Please select roles to login with
                        </div>
                        <div class="panel-body" style="margin:0px; padding:8px;">
                            @foreach (string pagerole in ViewBag.PageRoles)
                            {
								<div style="display:block;">
								<label for="@pagerole" class="check">
                                    <input type="checkbox" id="@pagerole" name="rdbroles" value="@pagerole" /> @pagerole
                                </label>
								 </div>
                            }
                        </div>
                    </div>
                    <a onclick="getrole();" class="btn btn-primary btn-sm">Login</a>
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-default btn-sm" > Logout</a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <script>
        $(document).ready(function () {
          var len = $('select#SelectedMainEntity option').length;
            if (len == 2 && len != undefined) {
                var text = $('select#SelectedMainEntity option')[1].text
                $("#SelectedMainEntityValue").val(text);
                $("#mtsbtn").click();
            }
            else
                $('#myModalSelectMainEntity').modal('show');
        });
    </script>
}
@if (ViewBag.RegistrationEntity != null)
{
    var AutoRegistration = Convert.ToString(ViewBag.RegistrationEntity).Split(",".ToCharArray());
    <script type="text/javascript">
        $(document).ready(function () {
            $('#RegistrationModal').modal('show');
        });
    </script>
    <div class="modal fade" id="RegistrationModal" tabindex="-1" role="dialog" aria-labelledby="RegistrationModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                           <span class="fam-application-form-edit"></span> Click to Register as
                        </div>
                        <div class="panel-body" style="margin:0px; padding:8px;">
                            <div style="display:block;">
                                @foreach (string reg in AutoRegistration)
                                {
                                    var Ent = ModelReflector.Entities.FirstOrDefault(p => p.Name == reg);
                                    if (Ent != null)
                                    {
                                        @Html.ActionLink(Ent.DisplayName, "AutoRegistration", reg, new { UserId = ViewBag.UserId }, new { @class = "btn btn-default btn-sm", @style="margin-right:5px;"})
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <br />
                    @Html.ActionLink("Continue without Registration", "Index", "Home", null, new { @class = "btn btn-default btn-sm" })
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-primary btn-sm pull-right"> Logout</a>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.PageRoles == null && ViewBag.PageContent == null && ViewBag.RegistrationEntity == null)
{
<script>
$(document).ready(function () {
var datevalue = $("#lastlogin").html();
if(datevalue != undefined && datevalue.length > 0)
{
	var date = new Date(datevalue+' UTC');
	$("#lastlogin").html(date.toLocaleString());
} else $("#lastlogin").html("You logged in first time.");
$("a:first",$("#graph")).click();
});
</script>
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-home text-primary" style="margin-bottom:-20px;"></i> Home
        </h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row">
        <div class="clearfix"></div>
        <div class="col-sm-12">
		<ul class="nav nav-tabs">
<li class="active"><a href="#systeminfo" data-toggle="tab">Home</a></li>
                <li class=""><a href="#graph" data-toggle="tab">Graph</a></li>
				<li><a href="#allentity" data-toggle="tab">All Entities</a></li>
                <li><a href="#favorite" data-toggle="tab">My Favorite</a></li>
                <li><a href="#about" data-toggle="tab">About</a></li>
            </ul>
             <div class="tab-content" style="border-bottom: 0px solid #ddd;">
	<div class="tab-pane fade in" id="graph">
        <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
            <div class="panel-body" style="min-height:240px;">
 @if (User.CanView("T_Position"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Position");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_Position" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Position');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_EmployeeInjury"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeInjury");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Injury";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_EmployeeInjury" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Employee Injury');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_Employee"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Employee");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_Employee" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Employee');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_JobAssignment"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_JobAssignment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Job Assignment";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_JobAssignment" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Job Assignment');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_BackgroundCheck"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_BackgroundCheck");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Background Check";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_BackgroundCheck" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Background Check');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_DrugAlcoholTest"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DrugAlcoholTest");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Drug & Alcohol Test";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_DrugAlcoholTest" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Drug & Alcohol Test');">
                                       @DisplayString
				</a> 
}
 @if (User.CanView("T_Licenses"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Licenses");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Licenses";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_Licenses" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Licenses');">
                                       @DisplayString
				</a> 
}
			<div class="panel panel-default" style="margin:10px 0px 0px 0px;">
                                <div class="panel-heading clearfix" style="padding:8px;">
                                    <h4 class="panel-title" style="display:block; " id="EntityGraphLabel"></h4>
                                </div>
                                <div class="panel-body" style="padding:0px 0px 0px 0px; border:0px;">
                                    <div id="EntityGraph">
                                    </div>
                                </div>
            </div>
            </div>
			
        </div>
    </div>
  
	 <div class="tab-pane active" id="systeminfo">
                     <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body" >

                           
                                <div class="row">
                                    <div class="col-md-6 col-sm-6" style="padding:4px 10px;">
                                         <div class="dashboard-block" style="height: 165px; display:-ms-flexbox;">
                                            <div class="rotate">
                                                <i class="fa fa-user"></i>
                                            </div>
                                            <div class="details" style="height: 137%;overflow-y: auto;overflow-x:hidden;width: 108%;">
                                                <span class="title">User Information </span>
                                                <span class="sub text-info">@User.Name</span><small>@ViewBag.UserName </small><br /> <small>@ViewBag.Useremail</small>
												 <br/><small> Role : @String.Join(",", ViewBag.LoginRoles)</small>
                                            </div><!--/details-->

                                        </div>
                                    </div>
									 @if (ViewBag.LastLoggedIn != null)
									{
                                    <div class="col-md-6 col-sm-6" style="padding:4px 10px;">
                                        <div class="dashboard-block" style="height:165px;">
                                            <div class="rotate">
                                               <i class="fa fa-sign-in"></i>
                                            </div>
                                            <div class="details">
                                                <span class="title">Last Logged-In</span>
                                                <span id="lastlogin" class="sub text-danger">@ViewBag.LastLoggedIn</span>
                                            </div><!--/details-->

                                        </div>
                                    </div>
									}
                                        
 </div><!--/row-->
										          @if ( User.CanView("T_Position"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Position");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Position"})">
                    <h4 class="text-info"><span class="label label-info pull-right">@ViewBag.T_PositionCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_PositionC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_PositionCSearch" onclick="HomeSearchClick(event,'T_PositionC','@Html.Raw(Url.Action("Index", "T_Position"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Position"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_Position"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Position", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_Employee"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Employee");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Employee"})">
                    <h4 class="text-success"><span class="label label-success pull-right">@ViewBag.T_EmployeeCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_EmployeeC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_EmployeeCSearch" onclick="HomeSearchClick(event,'T_EmployeeC','@Html.Raw(Url.Action("Index", "T_Employee"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Employee"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_Employee"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Employee", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_JobAssignment"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_JobAssignment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Job Assignment";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_JobAssignment"})">
                    <h4 class="text-warning"><span class="label label-warning pull-right">@ViewBag.T_JobAssignmentCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_JobAssignmentC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_JobAssignmentC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_JobAssignmentCSearch" onclick="HomeSearchClick(event,'T_JobAssignmentC','@Html.Raw(Url.Action("Index", "T_JobAssignment"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_JobAssignment"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_JobAssignment"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_JobAssignment", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_Licenses"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Licenses");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Licenses";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Licenses"})">
                    <h4 class="text-danger"><span class="label label-danger pull-right">@ViewBag.T_LicensesCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_LicensesC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LicensesC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_LicensesCSearch" onclick="HomeSearchClick(event,'T_LicensesC','@Html.Raw(Url.Action("Index", "T_Licenses"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Licenses"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_Licenses"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Licenses", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_EmployeeInjury"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeInjury");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Injury";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_EmployeeInjury"})">
                    <h4 class="text-primary"><span class="label label-primary pull-right">@ViewBag.T_EmployeeInjuryCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_EmployeeInjuryC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeInjuryC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_EmployeeInjuryCSearch" onclick="HomeSearchClick(event,'T_EmployeeInjuryC','@Html.Raw(Url.Action("Index", "T_EmployeeInjury"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_EmployeeInjury"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_EmployeeInjury"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EmployeeInjury", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_DrugAlcoholTest"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DrugAlcoholTest");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Drug & Alcohol Test";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_DrugAlcoholTest"})">
                    <h4 class="text-info"><span class="label label-info pull-right">@ViewBag.T_DrugAlcoholTestCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_DrugAlcoholTestC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_DrugAlcoholTestC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_DrugAlcoholTestCSearch" onclick="HomeSearchClick(event,'T_DrugAlcoholTestC','@Html.Raw(Url.Action("Index", "T_DrugAlcoholTest"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_DrugAlcoholTest"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_DrugAlcoholTest"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_DrugAlcoholTest", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if ( User.CanView("T_BackgroundCheck"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_BackgroundCheck");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Background Check";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_BackgroundCheck"})">
                    <h4 class="text-success"><span class="label label-success pull-right">@ViewBag.T_BackgroundCheckCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_BackgroundCheckC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_BackgroundCheckC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_BackgroundCheckCSearch" onclick="HomeSearchClick(event,'T_BackgroundCheckC','@Html.Raw(Url.Action("Index", "T_BackgroundCheck"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_BackgroundCheck"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if ( User.CanAdd("T_BackgroundCheck"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_BackgroundCheck", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
                               
                        </div>
                    </div>
	</div>
    <div class="tab-pane fade" id="about">
        <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
            <div class="panel-body" style="min-height:240px;">
                @if (ViewBag.AboutCompany != null)
				{
					@Html.Raw(ViewBag.AboutCompany)
				}
            </div>
        </div>
    </div>
	 <div class="tab-pane fade" id="allentity">
                    <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body">
	 <div id="Des_Table" class="table-responsive">
                                <table class="table table-bordered table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th class="col1" style="width:70px;">Actions</th>
                                            <th style="width:30%;">Entity Name</th>
                                            <th style="width:30%;">Entity Description</th>
                                            <th>Search</th>
                                        </tr>
                                    </thead>
				@if (User.CanView("T_Accommodation"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Accommodation");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Accommodation";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Accommodation" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Accommodation"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Accommodation", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Accommodation" })">@DisplayString</a></td>
                                            <td>Accommodation</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_AccommodationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_AccommodationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_AccommodationASearch" onclick="HomeSearchClick(event,'T_AccommodationA','@Html.Raw(Url.Action("Index", "T_Accommodation"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Address"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Address");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Address";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Address" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Address"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Address", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Address" })">@DisplayString</a></td>
                                            <td>Address</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_AddressA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_AddressA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_AddressASearch" onclick="HomeSearchClick(event,'T_AddressA','@Html.Raw(Url.Action("Index", "T_Address"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_AllFacilities"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_AllFacilities");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "All Facilities";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilities" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_AllFacilities"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_AllFacilities", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilities" })">@DisplayString</a></td>
                                            <td>All Facilities</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_AllFacilitiesA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_AllFacilitiesA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_AllFacilitiesASearch" onclick="HomeSearchClick(event,'T_AllFacilitiesA','@Html.Raw(Url.Action("Index", "T_AllFacilities"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_AllFacilitiesFloor"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_AllFacilitiesFloor");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "All Facilities Floor";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilitiesFloor" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_AllFacilitiesFloor"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_AllFacilitiesFloor", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilitiesFloor" })">@DisplayString</a></td>
                                            <td>All Facilities Floor</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_AllFacilitiesFloorA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_AllFacilitiesFloorA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_AllFacilitiesFloorASearch" onclick="HomeSearchClick(event,'T_AllFacilitiesFloorA','@Html.Raw(Url.Action("Index", "T_AllFacilitiesFloor"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_AllFacilitiesUnit"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_AllFacilitiesUnit");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "All Facilities Unit";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilitiesUnit" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_AllFacilitiesUnit"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_AllFacilitiesUnit", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_AllFacilitiesUnit" })">@DisplayString</a></td>
                                            <td>All Facilities Unit</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_AllFacilitiesUnitA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_AllFacilitiesUnitA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_AllFacilitiesUnitASearch" onclick="HomeSearchClick(event,'T_AllFacilitiesUnitA','@Html.Raw(Url.Action("Index", "T_AllFacilitiesUnit"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_BackgroundCheck"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_BackgroundCheck");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Background Check";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_BackgroundCheck" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_BackgroundCheck"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_BackgroundCheck", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_BackgroundCheck" })">@DisplayString</a></td>
                                            <td>Background Check</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_BackgroundCheckA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_BackgroundCheckA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_BackgroundCheckASearch" onclick="HomeSearchClick(event,'T_BackgroundCheckA','@Html.Raw(Url.Action("Index", "T_BackgroundCheck"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_BodyPartsAffected"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_BodyPartsAffected");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Body Parts Affected";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_BodyPartsAffected" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_BodyPartsAffected"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_BodyPartsAffected", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_BodyPartsAffected" })">@DisplayString</a></td>
                                            <td>Body  Parts  Affected</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_BodyPartsAffectedA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_BodyPartsAffectedA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_BodyPartsAffectedASearch" onclick="HomeSearchClick(event,'T_BodyPartsAffectedA','@Html.Raw(Url.Action("Index", "T_BodyPartsAffected"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_CardEmplGrp"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_CardEmplGrp");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "CardEmplGrp";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CardEmplGrp" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_CardEmplGrp"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_CardEmplGrp", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CardEmplGrp" })">@DisplayString</a></td>
                                            <td>CardEmplGrp</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CardEmplGrpA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CardEmplGrpA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CardEmplGrpASearch" onclick="HomeSearchClick(event,'T_CardEmplGrpA','@Html.Raw(Url.Action("Index", "T_CardEmplGrp"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_CardLvPlan"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_CardLvPlan");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "CardLvPlan";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CardLvPlan" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_CardLvPlan"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_CardLvPlan", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CardLvPlan" })">@DisplayString</a></td>
                                            <td>CardLvPlan</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CardLvPlanA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CardLvPlanA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CardLvPlanASearch" onclick="HomeSearchClick(event,'T_CardLvPlanA','@Html.Raw(Url.Action("Index", "T_CardLvPlan"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_City"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_City");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "City";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_City" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_City"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_City", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_City" })">@DisplayString</a></td>
                                            <td>City</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CityA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CityA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CityASearch" onclick="HomeSearchClick(event,'T_CityA','@Html.Raw(Url.Action("Index", "T_City"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ClaimType"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ClaimType");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Claim Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClaimType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ClaimType"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ClaimType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClaimType" })">@DisplayString</a></td>
                                            <td>Claim  Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ClaimTypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ClaimTypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ClaimTypeASearch" onclick="HomeSearchClick(event,'T_ClaimTypeA','@Html.Raw(Url.Action("Index", "T_ClaimType"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ClaimTypeMCI"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ClaimTypeMCI");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Claim Type MCI";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClaimTypeMCI" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ClaimTypeMCI"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ClaimTypeMCI", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClaimTypeMCI" })">@DisplayString</a></td>
                                            <td>Claim  Type  M C I</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ClaimTypeMCIA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ClaimTypeMCIA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ClaimTypeMCIASearch" onclick="HomeSearchClick(event,'T_ClaimTypeMCIA','@Html.Raw(Url.Action("Index", "T_ClaimTypeMCI"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ClassCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ClassCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Class Code";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClassCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ClassCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ClassCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ClassCode" })">@DisplayString</a></td>
                                            <td>Class  Code</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ClassCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ClassCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ClassCodeASearch" onclick="HomeSearchClick(event,'T_ClassCodeA','@Html.Raw(Url.Action("Index", "T_ClassCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Comment"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Comment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Comment";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Comment" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Comment"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Comment", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Comment" })">@DisplayString</a></td>
                                            <td>Comment</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CommentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CommentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CommentASearch" onclick="HomeSearchClick(event,'T_CommentA','@Html.Raw(Url.Action("Index", "T_Comment"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Commenttype"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Commenttype");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Comment Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Commenttype" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Commenttype"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Commenttype", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Commenttype" })">@DisplayString</a></td>
                                            <td>Comment Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CommenttypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CommenttypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CommenttypeASearch" onclick="HomeSearchClick(event,'T_CommenttypeA','@Html.Raw(Url.Action("Index", "T_Commenttype"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ConversationalEmployeeForeignLanguage"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ConversationalEmployeeForeignLanguage");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Conversational Employee Foreign Language";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ConversationalEmployeeForeignLanguage" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ConversationalEmployeeForeignLanguage"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ConversationalEmployeeForeignLanguage", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ConversationalEmployeeForeignLanguage" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between Employee and Langauge.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ConversationalEmployeeForeignLanguageA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ConversationalEmployeeForeignLanguageA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ConversationalEmployeeForeignLanguageASearch" onclick="HomeSearchClick(event,'T_ConversationalEmployeeForeignLanguageA','@Html.Raw(Url.Action("Index", "T_ConversationalEmployeeForeignLanguage"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_CostCenter"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_CostCenter");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Cost Center";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CostCenter" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_CostCenter"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_CostCenter", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CostCenter" })">@DisplayString</a></td>
                                            <td>Cost  Center</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CostCenterA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CostCenterA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CostCenterASearch" onclick="HomeSearchClick(event,'T_CostCenterA','@Html.Raw(Url.Action("Index", "T_CostCenter"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Country"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Country");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Country";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Country" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Country"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Country", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Country" })">@DisplayString</a></td>
                                            <td>Country</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CountryA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CountryA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CountryASearch" onclick="HomeSearchClick(event,'T_CountryA','@Html.Raw(Url.Action("Index", "T_Country"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_CPSResults"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_CPSResults");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "CPS Results";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CPSResults" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_CPSResults"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_CPSResults", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_CPSResults" })">@DisplayString</a></td>
                                            <td>C P S  Results</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CPSResultsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CPSResultsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CPSResultsASearch" onclick="HomeSearchClick(event,'T_CPSResultsA','@Html.Raw(Url.Action("Index", "T_CPSResults"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Credential"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Credential");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Credential";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Credential" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Credential"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Credential", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Credential" })">@DisplayString</a></td>
                                            <td>Credential</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_CredentialA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_CredentialA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_CredentialASearch" onclick="HomeSearchClick(event,'T_CredentialA','@Html.Raw(Url.Action("Index", "T_Credential"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Department"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Department");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Department";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Department" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Department"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Department", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Department" })">@DisplayString</a></td>
                                            <td>Department</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_DepartmentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_DepartmentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_DepartmentASearch" onclick="HomeSearchClick(event,'T_DepartmentA','@Html.Raw(Url.Action("Index", "T_Department"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_DepartmentArea"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DepartmentArea");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Department Area";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DepartmentArea" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_DepartmentArea"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_DepartmentArea", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DepartmentArea" })">@DisplayString</a></td>
                                            <td>Department  Area</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_DepartmentAreaA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_DepartmentAreaA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_DepartmentAreaASearch" onclick="HomeSearchClick(event,'T_DepartmentAreaA','@Html.Raw(Url.Action("Index", "T_DepartmentArea"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_DrugAlcoholTest"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DrugAlcoholTest");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Drug & Alcohol Test";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DrugAlcoholTest" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_DrugAlcoholTest"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_DrugAlcoholTest", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DrugAlcoholTest" })">@DisplayString</a></td>
                                            <td>Drug &  Alcohol  Test</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_DrugAlcoholTestA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_DrugAlcoholTestA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_DrugAlcoholTestASearch" onclick="HomeSearchClick(event,'T_DrugAlcoholTestA','@Html.Raw(Url.Action("Index", "T_DrugAlcoholTest"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_DrugTestResult"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DrugTestResult");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Drug Test Result";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DrugTestResult" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_DrugTestResult"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_DrugTestResult", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_DrugTestResult" })">@DisplayString</a></td>
                                            <td>Drug  Test  Result</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_DrugTestResultA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_DrugTestResultA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_DrugTestResultASearch" onclick="HomeSearchClick(event,'T_DrugTestResultA','@Html.Raw(Url.Action("Index", "T_DrugTestResult"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Education"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Education");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Education";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Education" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Education"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Education", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Education" })">@DisplayString</a></td>
                                            <td>Education</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EducationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EducationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EducationASearch" onclick="HomeSearchClick(event,'T_EducationA','@Html.Raw(Url.Action("Index", "T_Education"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EducationLevel"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EducationLevel");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Education Level";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EducationLevel" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EducationLevel"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EducationLevel", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EducationLevel" })">@DisplayString</a></td>
                                            <td>Education  Level</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EducationLevelA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EducationLevelA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EducationLevelASearch" onclick="HomeSearchClick(event,'T_EducationLevelA','@Html.Raw(Url.Action("Index", "T_EducationLevel"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Vendor"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Vendor");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Education Verification Vendor";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Vendor" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Vendor"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Vendor", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Vendor" })">@DisplayString</a></td>
                                            <td>This is the vendor that the education qualifications of an employee are sent for verification</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_VendorA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_VendorA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_VendorASearch" onclick="HomeSearchClick(event,'T_VendorA','@Html.Raw(Url.Action("Index", "T_Vendor"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EEOCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EEOCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "EEO Code";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EEOCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EEOCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EEOCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EEOCode" })">@DisplayString</a></td>
                                            <td>E E O  Code</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EEOCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EEOCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EEOCodeASearch" onclick="HomeSearchClick(event,'T_EEOCodeA','@Html.Raw(Url.Action("Index", "T_EEOCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Employee"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Employee");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Employee" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Employee"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Employee", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Employee" })">@DisplayString</a></td>
                                            <td>Employee</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EmployeeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EmployeeASearch" onclick="HomeSearchClick(event,'T_EmployeeA','@Html.Raw(Url.Action("Index", "T_Employee"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EmployeeInjury"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeInjury");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Injury";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeInjury" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EmployeeInjury"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EmployeeInjury", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeInjury" })">@DisplayString</a></td>
                                            <td>Employee  Injury</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EmployeeInjuryA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeInjuryA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EmployeeInjuryASearch" onclick="HomeSearchClick(event,'T_EmployeeInjuryA','@Html.Raw(Url.Action("Index", "T_EmployeeInjury"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EmployeeStatusCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeStatusCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Status Code";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeStatusCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EmployeeStatusCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EmployeeStatusCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeStatusCode" })">@DisplayString</a></td>
                                            <td>Employee  Status  Code</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EmployeeStatusCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeStatusCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EmployeeStatusCodeASearch" onclick="HomeSearchClick(event,'T_EmployeeStatusCodeA','@Html.Raw(Url.Action("Index", "T_EmployeeStatusCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EmployeeTerminationFacility"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeTerminationFacility");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Termination Facility";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeTerminationFacility" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EmployeeTerminationFacility"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EmployeeTerminationFacility", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeTerminationFacility" })">@DisplayString</a></td>
                                            <td>The new facility that the employee joined after being terminated at the current facility. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EmployeeTerminationFacilityA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeTerminationFacilityA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EmployeeTerminationFacilityASearch" onclick="HomeSearchClick(event,'T_EmployeeTerminationFacilityA','@Html.Raw(Url.Action("Index", "T_EmployeeTerminationFacility"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_EmployeeType"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_EmployeeType");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Employee Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_EmployeeType"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_EmployeeType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_EmployeeType" })">@DisplayString</a></td>
                                            <td>Employee  Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_EmployeeTypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_EmployeeTypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_EmployeeTypeASearch" onclick="HomeSearchClick(event,'T_EmployeeTypeA','@Html.Raw(Url.Action("Index", "T_EmployeeType"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Facility"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Facility");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Facility";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Facility" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Facility"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Facility", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Facility" })">@DisplayString</a></td>
                                            <td>Facility</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_FacilityA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_FacilityA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_FacilityASearch" onclick="HomeSearchClick(event,'T_FacilityA','@Html.Raw(Url.Action("Index", "T_Facility"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_FacilityConfiguration"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_FacilityConfiguration");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Facility Configuration";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_FacilityConfiguration" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_FacilityConfiguration"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_FacilityConfiguration", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_FacilityConfiguration" })">@DisplayString</a></td>
                                            <td>FacilityConfiguration</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_FacilityConfigurationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_FacilityConfigurationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_FacilityConfigurationASearch" onclick="HomeSearchClick(event,'T_FacilityConfigurationA','@Html.Raw(Url.Action("Index", "T_FacilityConfiguration"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_FacilityUser"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_FacilityUser");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Facility User";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_FacilityUser" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_FacilityUser"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_FacilityUser", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_FacilityUser" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between Facility and User.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_FacilityUserA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_FacilityUserA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_FacilityUserASearch" onclick="HomeSearchClick(event,'T_FacilityUserA','@Html.Raw(Url.Action("Index", "T_FacilityUser"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Floor"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Floor");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Floor";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Floor" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Floor"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Floor", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Floor" })">@DisplayString</a></td>
                                            <td>Floor</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_FloorA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_FloorA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_FloorASearch" onclick="HomeSearchClick(event,'T_FloorA','@Html.Raw(Url.Action("Index", "T_Floor"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Fund"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Fund");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Fund";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Fund" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Fund"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Fund", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Fund" })">@DisplayString</a></td>
                                            <td>Fund</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_FundA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_FundA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_FundASearch" onclick="HomeSearchClick(event,'T_FundA','@Html.Raw(Url.Action("Index", "T_Fund"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Gender"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Gender");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Gender";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Gender" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Gender"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Gender", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Gender" })">@DisplayString</a></td>
                                            <td>Gender</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_GenderA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_GenderA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_GenderASearch" onclick="HomeSearchClick(event,'T_GenderA','@Html.Raw(Url.Action("Index", "T_Gender"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_InitialTreatment"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_InitialTreatment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Initial Treatment";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InitialTreatment" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_InitialTreatment"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_InitialTreatment", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InitialTreatment" })">@DisplayString</a></td>
                                            <td>Initial  Treatment</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_InitialTreatmentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_InitialTreatmentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_InitialTreatmentASearch" onclick="HomeSearchClick(event,'T_InitialTreatmentA','@Html.Raw(Url.Action("Index", "T_InitialTreatment"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_InjuryCause"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_InjuryCause");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Injury Cause";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InjuryCause" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_InjuryCause"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_InjuryCause", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InjuryCause" })">@DisplayString</a></td>
                                            <td>Injury  Cause</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_InjuryCauseA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_InjuryCauseA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_InjuryCauseASearch" onclick="HomeSearchClick(event,'T_InjuryCauseA','@Html.Raw(Url.Action("Index", "T_InjuryCause"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_InjuryNature"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_InjuryNature");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Injury Nature";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InjuryNature" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_InjuryNature"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_InjuryNature", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_InjuryNature" })">@DisplayString</a></td>
                                            <td>Injury  Nature</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_InjuryNatureA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_InjuryNatureA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_InjuryNatureASearch" onclick="HomeSearchClick(event,'T_InjuryNatureA','@Html.Raw(Url.Action("Index", "T_InjuryNature"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_JobAssignment"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_JobAssignment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Job Assignment";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_JobAssignment" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_JobAssignment"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_JobAssignment", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_JobAssignment" })">@DisplayString</a></td>
                                            <td>Job  Assignment</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_JobAssignmentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_JobAssignmentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_JobAssignmentASearch" onclick="HomeSearchClick(event,'T_JobAssignmentA','@Html.Raw(Url.Action("Index", "T_JobAssignment"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Langauge"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Langauge");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Language";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Langauge" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Langauge"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Langauge", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Langauge" })">@DisplayString</a></td>
                                            <td>Language</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LangaugeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LangaugeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LangaugeASearch" onclick="HomeSearchClick(event,'T_LangaugeA','@Html.Raw(Url.Action("Index", "T_Langauge"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_LanguageCertifiedIn"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LanguageCertifiedIn");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Language Certified In";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LanguageCertifiedIn" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_LanguageCertifiedIn"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LanguageCertifiedIn", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LanguageCertifiedIn" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between Employee and Langauge.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LanguageCertifiedInA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LanguageCertifiedInA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LanguageCertifiedInASearch" onclick="HomeSearchClick(event,'T_LanguageCertifiedInA','@Html.Raw(Url.Action("Index", "T_LanguageCertifiedIn"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_LeaveProfile"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LeaveProfile");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Leave";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveProfile" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_LeaveProfile"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LeaveProfile", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveProfile" })">@DisplayString</a></td>
                                            <td>Used to track employee leave</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LeaveProfileA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LeaveProfileA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LeaveProfileASearch" onclick="HomeSearchClick(event,'T_LeaveProfileA','@Html.Raw(Url.Action("Index", "T_LeaveProfile"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_LeaveProfileReason"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LeaveProfileReason");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Leave Profile Reason";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveProfileReason" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_LeaveProfileReason"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LeaveProfileReason", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveProfileReason" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between LeaveProfile and LeaveReason.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LeaveProfileReasonA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LeaveProfileReasonA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LeaveProfileReasonASearch" onclick="HomeSearchClick(event,'T_LeaveProfileReasonA','@Html.Raw(Url.Action("Index", "T_LeaveProfileReason"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_LeaveReason"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LeaveReason");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Leave Reason";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveReason" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_LeaveReason"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LeaveReason", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LeaveReason" })">@DisplayString</a></td>
                                            <td>Leave  Reason</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LeaveReasonA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LeaveReasonA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LeaveReasonASearch" onclick="HomeSearchClick(event,'T_LeaveReasonA','@Html.Raw(Url.Action("Index", "T_LeaveReason"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Licenses"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Licenses");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Licenses";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Licenses" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Licenses"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Licenses", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Licenses" })">@DisplayString</a></td>
                                            <td>Track professional licenses for employees such as nursing. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LicensesA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LicensesA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LicensesASearch" onclick="HomeSearchClick(event,'T_LicensesA','@Html.Raw(Url.Action("Index", "T_Licenses"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Licensestype"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Licensestype");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Licenses Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Licensestype" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Licensestype"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Licensestype", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Licensestype" })">@DisplayString</a></td>
                                            <td>Licenses Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LicensestypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LicensestypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LicensestypeASearch" onclick="HomeSearchClick(event,'T_LicensestypeA','@Html.Raw(Url.Action("Index", "T_Licensestype"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_MachineTool"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_MachineTool");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Machine Tool";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_MachineTool" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_MachineTool"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_MachineTool", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_MachineTool" })">@DisplayString</a></td>
                                            <td>Machine  Tool</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_MachineToolA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_MachineToolA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_MachineToolASearch" onclick="HomeSearchClick(event,'T_MachineToolA','@Html.Raw(Url.Action("Index", "T_MachineTool"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Major"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Major");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Major";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Major" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Major"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Major", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Major" })">@DisplayString</a></td>
                                            <td>Major</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_MajorA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_MajorA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_MajorASearch" onclick="HomeSearchClick(event,'T_MajorA','@Html.Raw(Url.Action("Index", "T_Major"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_MedicalFacilityForTreatment"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_MedicalFacilityForTreatment");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Medical Facility For Treatment";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_MedicalFacilityForTreatment" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_MedicalFacilityForTreatment"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_MedicalFacilityForTreatment", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_MedicalFacilityForTreatment" })">@DisplayString</a></td>
                                            <td>Separate from Facility. This is a facility, outside of WSH/CCCA, that the employees who have work related injuries are sent for treatment. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_MedicalFacilityForTreatmentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_MedicalFacilityForTreatmentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_MedicalFacilityForTreatmentASearch" onclick="HomeSearchClick(event,'T_MedicalFacilityForTreatmentA','@Html.Raw(Url.Action("Index", "T_MedicalFacilityForTreatment"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Nationality"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Nationality");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Nationality";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Nationality" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Nationality"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Nationality", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Nationality" })">@DisplayString</a></td>
                                            <td>Nationality</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_NationalityA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_NationalityA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_NationalityASearch" onclick="HomeSearchClick(event,'T_NationalityA','@Html.Raw(Url.Action("Index", "T_Nationality"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_OrgCodes"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_OrgCodes");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Org Codes";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_OrgCodes" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_OrgCodes"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_OrgCodes", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_OrgCodes" })">@DisplayString</a></td>
                                            <td>Org  Codes</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_OrgCodesA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_OrgCodesA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_OrgCodesASearch" onclick="HomeSearchClick(event,'T_OrgCodesA','@Html.Raw(Url.Action("Index", "T_OrgCodes"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_OvertimeEligibility"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_OvertimeEligibility");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Overtime Eligibility";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_OvertimeEligibility" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_OvertimeEligibility"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_OvertimeEligibility", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_OvertimeEligibility" })">@DisplayString</a></td>
                                            <td>This entity contains whether an employee is allowed to be paid overtime or not. There are two choices- Exempt & non-exempt. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_OvertimeEligibilityA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_OvertimeEligibilityA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_OvertimeEligibilityASearch" onclick="HomeSearchClick(event,'T_OvertimeEligibilityA','@Html.Raw(Url.Action("Index", "T_OvertimeEligibility"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Patient"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Patient");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Patient";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Patient" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Patient"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Patient", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Patient" })">@DisplayString</a></td>
                                            <td>Patient</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PatientA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PatientA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PatientASearch" onclick="HomeSearchClick(event,'T_PatientA','@Html.Raw(Url.Action("Index", "T_Patient"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PayDetails"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PayDetails");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Pay Details ";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PayDetails" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PayDetails"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PayDetails", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PayDetails" })">@DisplayString</a></td>
                                            <td>Pay Details</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PayDetailsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PayDetailsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PayDetailsASearch" onclick="HomeSearchClick(event,'T_PayDetailsA','@Html.Raw(Url.Action("Index", "T_PayDetails"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PayType"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PayType");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Pay Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PayType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PayType"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PayType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PayType" })">@DisplayString</a></td>
                                            <td>Drop-down to select the type of pay for an employee- salary, wage or bonus</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PayTypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PayTypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PayTypeASearch" onclick="HomeSearchClick(event,'T_PayTypeA','@Html.Raw(Url.Action("Index", "T_PayType"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Position"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Position");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Position" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Position"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Position", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Position" })">@DisplayString</a></td>
                                            <td>Position</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionASearch" onclick="HomeSearchClick(event,'T_PositionA','@Html.Raw(Url.Action("Index", "T_Position"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PositionFillReason"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PositionFillReason");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position Fill Reason";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionFillReason" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PositionFillReason"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PositionFillReason", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionFillReason" })">@DisplayString</a></td>
                                            <td>Position  Fill  Reason</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionFillReasonA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionFillReasonA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionFillReasonASearch" onclick="HomeSearchClick(event,'T_PositionFillReasonA','@Html.Raw(Url.Action("Index", "T_PositionFillReason"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PositionLevel"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PositionLevel");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position Level";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionLevel" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PositionLevel"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PositionLevel", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionLevel" })">@DisplayString</a></td>
                                            <td>Position  Level</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionLevelA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionLevelA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionLevelASearch" onclick="HomeSearchClick(event,'T_PositionLevelA','@Html.Raw(Url.Action("Index", "T_PositionLevel"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PositionPostStatus"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PositionPostStatus");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position Post Status";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionPostStatus" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PositionPostStatus"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PositionPostStatus", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionPostStatus" })">@DisplayString</a></td>
                                            <td>This entity will be used to record when a position is being posted. Some acceptable values are: Clear, Interviewing, Offered, Posted and Withdrawn. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionPostStatusA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionPostStatusA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionPostStatusASearch" onclick="HomeSearchClick(event,'T_PositionPostStatusA','@Html.Raw(Url.Action("Index", "T_PositionPostStatus"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Positionstatus"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Positionstatus");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position Status";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Positionstatus" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Positionstatus"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Positionstatus", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Positionstatus" })">@DisplayString</a></td>
                                            <td>Position Status</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionstatusA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionstatusA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionstatusASearch" onclick="HomeSearchClick(event,'T_PositionstatusA','@Html.Raw(Url.Action("Index", "T_Positionstatus"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_PositionType"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_PositionType");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Position Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_PositionType"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_PositionType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_PositionType" })">@DisplayString</a></td>
                                            <td>Position  Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_PositionTypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_PositionTypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_PositionTypeASearch" onclick="HomeSearchClick(event,'T_PositionTypeA','@Html.Raw(Url.Action("Index", "T_PositionType"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Program"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Program");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Program";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Program" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Program"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Program", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Program" })">@DisplayString</a></td>
                                            <td>Program</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ProgramA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ProgramA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ProgramASearch" onclick="HomeSearchClick(event,'T_ProgramA','@Html.Raw(Url.Action("Index", "T_Program"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Race"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Race");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Race";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Race" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Race"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Race", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Race" })">@DisplayString</a></td>
                                            <td>Race</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RaceA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RaceA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RaceASearch" onclick="HomeSearchClick(event,'T_RaceA','@Html.Raw(Url.Action("Index", "T_Race"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ReasonForDrugTest"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ReasonForDrugTest");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Reason For Drug Test";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ReasonForDrugTest" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ReasonForDrugTest"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ReasonForDrugTest", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ReasonForDrugTest" })">@DisplayString</a></td>
                                            <td>Reason  For  Drug  Test</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ReasonForDrugTestA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ReasonForDrugTestA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ReasonForDrugTestASearch" onclick="HomeSearchClick(event,'T_ReasonForDrugTestA','@Html.Raw(Url.Action("Index", "T_ReasonForDrugTest"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ReasonforHire"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ReasonforHire");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Reason for Hire";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ReasonforHire" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ReasonforHire"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ReasonforHire", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ReasonforHire" })">@DisplayString</a></td>
                                            <td>This entity contains the details about the kind of job assignment assigned to an employee such as promotion, demotion etc. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ReasonforHireA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ReasonforHireA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ReasonforHireASearch" onclick="HomeSearchClick(event,'T_ReasonforHireA','@Html.Raw(Url.Action("Index", "T_ReasonforHire"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Refusal"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Refusal");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Refusal";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Refusal" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Refusal"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Refusal", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Refusal" })">@DisplayString</a></td>
                                            <td>Refusal</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RefusalA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RefusalA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RefusalASearch" onclick="HomeSearchClick(event,'T_RefusalA','@Html.Raw(Url.Action("Index", "T_Refusal"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_RequiredEducation"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_RequiredEducation");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Required Education";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RequiredEducation" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_RequiredEducation"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_RequiredEducation", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RequiredEducation" })">@DisplayString</a></td>
                                            <td>This entity contains the minimum education / credentials required by an employee assigned to a particular role code and SOC code combination. </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RequiredEducationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RequiredEducationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RequiredEducationASearch" onclick="HomeSearchClick(event,'T_RequiredEducationA','@Html.Raw(Url.Action("Index", "T_RequiredEducation"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Restrictions"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Restrictions");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Restrictions";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Restrictions" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Restrictions"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Restrictions", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Restrictions" })">@DisplayString</a></td>
                                            <td>Restrictions</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RestrictionsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RestrictionsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RestrictionsASearch" onclick="HomeSearchClick(event,'T_RestrictionsA','@Html.Raw(Url.Action("Index", "T_Restrictions"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ResultsForDrugTest"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ResultsForDrugTest");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Results For Drug Test";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ResultsForDrugTest" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ResultsForDrugTest"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ResultsForDrugTest", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ResultsForDrugTest" })">@DisplayString</a></td>
                                            <td>Results  For  Drug  Test</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ResultsForDrugTestA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ResultsForDrugTestA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ResultsForDrugTestASearch" onclick="HomeSearchClick(event,'T_ResultsForDrugTestA','@Html.Raw(Url.Action("Index", "T_ResultsForDrugTest"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ResultsTable"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ResultsTable");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "ResultsTable";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ResultsTable" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ResultsTable"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ResultsTable", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ResultsTable" })">@DisplayString</a></td>
                                            <td>Results Table</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ResultsTableA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ResultsTableA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ResultsTableASearch" onclick="HomeSearchClick(event,'T_ResultsTableA','@Html.Raw(Url.Action("Index", "T_ResultsTable"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_RetainTable"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_RetainTable");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "RetainTable";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RetainTable" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_RetainTable"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_RetainTable", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RetainTable" })">@DisplayString</a></td>
                                            <td>Retain Table</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RetainTableA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RetainTableA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RetainTableASearch" onclick="HomeSearchClick(event,'T_RetainTableA','@Html.Raw(Url.Action("Index", "T_RetainTable"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_RoleCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_RoleCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Role Code";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RoleCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_RoleCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_RoleCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_RoleCode" })">@DisplayString</a></td>
                                            <td>Role  Code</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_RoleCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_RoleCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_RoleCodeASearch" onclick="HomeSearchClick(event,'T_RoleCodeA','@Html.Raw(Url.Action("Index", "T_RoleCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SalaryBand"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SalaryBand");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Salary Band";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SalaryBand" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_SalaryBand"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SalaryBand", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SalaryBand" })">@DisplayString</a></td>
                                            <td>Salary  Band</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SalaryBandA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SalaryBandA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SalaryBandASearch" onclick="HomeSearchClick(event,'T_SalaryBandA','@Html.Raw(Url.Action("Index", "T_SalaryBand"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SalaryRange"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SalaryRange");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Salary Range";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SalaryRange" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_SalaryRange"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SalaryRange", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SalaryRange" })">@DisplayString</a></td>
                                            <td>Salary Range</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SalaryRangeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SalaryRangeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SalaryRangeASearch" onclick="HomeSearchClick(event,'T_SalaryRangeA','@Html.Raw(Url.Action("Index", "T_SalaryRange"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ServiceRecord"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ServiceRecord");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Service Record";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ServiceRecord" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ServiceRecord"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ServiceRecord", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ServiceRecord" })">@DisplayString</a></td>
                                            <td>Service  Record</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ServiceRecordA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ServiceRecordA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ServiceRecordASearch" onclick="HomeSearchClick(event,'T_ServiceRecordA','@Html.Raw(Url.Action("Index", "T_ServiceRecord"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ShiftDuration"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ShiftDuration");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Shift Duration";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftDuration" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ShiftDuration"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ShiftDuration", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftDuration" })">@DisplayString</a></td>
                                            <td>Stores the total hours worked in a shift </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ShiftDurationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ShiftDurationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ShiftDurationASearch" onclick="HomeSearchClick(event,'T_ShiftDurationA','@Html.Raw(Url.Action("Index", "T_ShiftDuration"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ShiftMealTime"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ShiftMealTime");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Shift Meal Time";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftMealTime" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ShiftMealTime"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ShiftMealTime", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftMealTime" })">@DisplayString</a></td>
                                            <td>Stores the lunch minutes available to the employee working in that shift </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ShiftMealTimeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ShiftMealTimeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ShiftMealTimeASearch" onclick="HomeSearchClick(event,'T_ShiftMealTimeA','@Html.Raw(Url.Action("Index", "T_ShiftMealTime"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_ShiftTime"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_ShiftTime");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Shift Time";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftTime" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_ShiftTime"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_ShiftTime", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_ShiftTime" })">@DisplayString</a></td>
                                            <td>Signifies if the shift is day/evening/night.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ShiftTimeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ShiftTimeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ShiftTimeASearch" onclick="HomeSearchClick(event,'T_ShiftTimeA','@Html.Raw(Url.Action("Index", "T_ShiftTime"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SocCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SocCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "SOC Code";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SocCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_SocCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SocCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SocCode" })">@DisplayString</a></td>
                                            <td>SOC Code</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SocCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SocCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SocCodeASearch" onclick="HomeSearchClick(event,'T_SocCodeA','@Html.Raw(Url.Action("Index", "T_SocCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_State"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_State");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "State";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_State" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_State"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_State", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_State" })">@DisplayString</a></td>
                                            <td>State</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_StateA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_StateA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_StateASearch" onclick="HomeSearchClick(event,'T_StateA','@Html.Raw(Url.Action("Index", "T_State"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_TerminationReason"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TerminationReason");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Termination Reason";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TerminationReason" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_TerminationReason"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TerminationReason", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TerminationReason" })">@DisplayString</a></td>
                                            <td>Termination  Reason</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_TerminationReasonA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TerminationReasonA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_TerminationReasonASearch" onclick="HomeSearchClick(event,'T_TerminationReasonA','@Html.Raw(Url.Action("Index", "T_TerminationReason"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_TestType"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TestType");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Test Type";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TestType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_TestType"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TestType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TestType" })">@DisplayString</a></td>
                                            <td>Test  Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_TestTypeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TestTypeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_TestTypeASearch" onclick="HomeSearchClick(event,'T_TestTypeA','@Html.Raw(Url.Action("Index", "T_TestType"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_TypeofClaim"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TypeofClaim");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Type of Claim";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TypeofClaim" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_TypeofClaim"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TypeofClaim", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TypeofClaim" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between EmployeeInjury and ClaimType.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_TypeofClaimA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TypeofClaimA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_TypeofClaimASearch" onclick="HomeSearchClick(event,'T_TypeofClaimA','@Html.Raw(Url.Action("Index", "T_TypeofClaim"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_TypeOfRestrictions"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TypeOfRestrictions");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Type Of Restrictions";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TypeOfRestrictions" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_TypeOfRestrictions"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TypeOfRestrictions", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TypeOfRestrictions" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between EmployeeInjury and Restrictions.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_TypeOfRestrictionsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TypeOfRestrictionsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_TypeOfRestrictionsASearch" onclick="HomeSearchClick(event,'T_TypeOfRestrictionsA','@Html.Raw(Url.Action("Index", "T_TypeOfRestrictions"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Unit"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Unit");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Unit";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Unit" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_Unit"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Unit", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Unit" })">@DisplayString</a></td>
                                            <td>Unit</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_UnitA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_UnitA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_UnitASearch" onclick="HomeSearchClick(event,'T_UnitA','@Html.Raw(Url.Action("Index", "T_Unit"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_UnitX"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_UnitX");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "UnitX";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_UnitX" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_UnitX"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_UnitX", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_UnitX" })">@DisplayString</a></td>
                                            <td>WardX</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_UnitXA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_UnitXA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_UnitXASearch" onclick="HomeSearchClick(event,'T_UnitXA','@Html.Raw(Url.Action("Index", "T_UnitX"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_VeteranStatus"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_VeteranStatus");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Veteran Status";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_VeteranStatus" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_VeteranStatus"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_VeteranStatus", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_VeteranStatus" })">@DisplayString</a></td>
                                            <td>Veteran  Status</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_VeteranStatusA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_VeteranStatusA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_VeteranStatusASearch" onclick="HomeSearchClick(event,'T_VeteranStatusA','@Html.Raw(Url.Action("Index", "T_VeteranStatus"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_WCAccident"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_WCAccident");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "WCAccident";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WCAccident" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_WCAccident"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_WCAccident", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WCAccident" })">@DisplayString</a></td>
                                            <td>W C Accident</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_WCAccidentA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_WCAccidentA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_WCAccidentASearch" onclick="HomeSearchClick(event,'T_WCAccidentA','@Html.Raw(Url.Action("Index", "T_WCAccident"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_WCCode"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_WCCode");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "WCCode";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WCCode" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_WCCode"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_WCCode", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WCCode" })">@DisplayString</a></td>
                                            <td>Worker's Compensation Code </td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_WCCodeA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_WCCodeA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_WCCodeASearch" onclick="HomeSearchClick(event,'T_WCCodeA','@Html.Raw(Url.Action("Index", "T_WCCode"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_WorkingTitle"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_WorkingTitle");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Working Title ";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WorkingTitle" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("T_WorkingTitle"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_WorkingTitle", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_WorkingTitle" })">@DisplayString</a></td>
                                            <td>Working Title</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_WorkingTitleA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_WorkingTitleA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_WorkingTitleASearch" onclick="HomeSearchClick(event,'T_WorkingTitleA','@Html.Raw(Url.Action("Index", "T_WorkingTitle"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
					@if (User.CanView("ApplicationFeedback"))
                    {
						<tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedback" })" class="btn btn-default btn-xs"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("ApplicationFeedback"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedback", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") class="btn btn-default btn-xs"><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                       </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedback" })">Application Feedback</a></td>
                                            <td>Application Feedback</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedback", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedback');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="ApplicationFeedbackSearch" onclick="HomeSearchClick(event,'ApplicationFeedback','@Html.Raw(Url.Action("Index", "ApplicationFeedback"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					@if (User.CanView("ApplicationFeedbackStatus"))
                    {
                        <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackStatus" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("ApplicationFeedbackStatus"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedbackStatus", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackStatus" })">Application Feedback Status</a></td>
                                            <td>Application Feedback Status</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedbackStatus", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedbackStatus');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="ApplicationFeedbackStatusSearch" onclick="HomeSearchClick(event,'ApplicationFeedbackStatus','@Html.Raw(Url.Action("Index", "ApplicationFeedbackStatus"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("ApplicationFeedbackType"))
                    {
                        <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("ApplicationFeedbackType"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedbackType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                     </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackType" })">Application Feedback Type</a></td>
                                            <td>Application Feedback Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedbackType", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedbackType');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="ApplicationFeedbackTypeSearch" onclick="HomeSearchClick(event,'ApplicationFeedbackType','@Html.Raw(Url.Action("Index", "ApplicationFeedbackType"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					@if (User.CanView("FeedbackPriority"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackPriority" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("FeedbackPriority"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackPriority", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
										 	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackPriority" })">Feedback Priority</a></td>
                                            <td>Feedback Priority</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackPriority", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackPriority');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackPrioritySearch" onclick="HomeSearchClick(event,'FeedbackPriority','@Html.Raw(Url.Action("Index", "FeedbackPriority"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("FeedbackSeverity"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackSeverity" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("FeedbackSeverity"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackSeverity", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
												}
                                            	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackSeverity" })">Feedback Severity</a></td>
                                            <td>Feedback Severity</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackSeverity", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackSeverity');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackSeveritySearch" onclick="HomeSearchClick(event,'FeedbackSeverity','@Html.Raw(Url.Action("Index", "FeedbackSeverity"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("FeedbackResource"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackResource" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("FeedbackResource"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackResource", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                     	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackResource" })">Feedback Resource</a></td>
                                            <td>Feedback Resource</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackResource", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackResource');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackResourceSearch" onclick="HomeSearchClick(event,'FeedbackResource','@Html.Raw(Url.Action("Index", "FeedbackResource"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					 @if (User.CanView("JournalEntry"))
				     {
					   <tr>
							<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("Index", "JournalEntry")"><i class="glyphicon glyphicon-eye-open"></i></a>
											</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("Index", "JournalEntry")">Journal Entry</a></td>
                                            <td>Journal Entry</td>
                                            <td>
                                            </td>
                                        </tr>
                     }
					@if (User != null)
                    {
                        if (User.CanView("ImportConfiguration"))
                        {
                             <tr>
							<td>
							 <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ImportConfiguration" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if ( User.CanAdd("ImportConfiguration"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ImportConfiguration", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                        </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ImportConfiguration" })">Import Configuration</a></td>
                                            <td>Import Configuration</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringImportConfiguration", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ImportConfiguration');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="ImportConfigurationSearch" onclick="HomeSearchClick(event,'ImportConfiguration','@Html.Raw(Url.Action("Index", "ImportConfiguration"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                        }
                    }
                           @if (User.IsAdmin)
                            {
									 <tr>
							<td>
							 <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("Index", "Admin")"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("Index", "Admin")">Admin</a></td>
                                            <td>Admin</td>
                                            <td>
                                            </td>
                                        </tr>
                            }
							 </table>
                            </div>
	  </div>
        </div>
    </div>
	 <div class="tab-pane fade" id="favorite">
                    <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body">
                            <div class="dashboard-block">
                                <div class="rotate">
                                    <i class="fa fa-star"></i>
                                </div>
                                <div class="details" style="width: 100%;">
                                    <span class="title"> Favorite Items <span class="badge bg-grey">@ViewBag.FavoriteCount</span></span>
                                    <ul style="max-height:100px; overflow:auto; width:100%; padding:0px">
                                        @if (ViewBag.FavoriteItem != null)
                                        {
										 foreach (GeneratorBase.MVC.Models.FavoriteItem fItem in ViewBag.FavoriteItem)
                                            {
                                            if (fItem.LinkAddress.Contains("IsReports=true"))
                                                {
                                                    var EntityNameRef = ModelReflector.Entities.FirstOrDefault(p => p.Name == fItem.EntityName);
                                                    var EntityDispName = EntityNameRef != null ? EntityNameRef.DisplayName : fItem.EntityName;
                                                    @*/@GeneratorBase.MVC.Models.CommonFunction.Instance.AppURL().ToString()@fItem.LinkAddress*@
                                                    <li style="list-style:none; border-bottom:1px solid #ddd; height:30px; padding:5px;">
                                                        <a id="rptViewLink" title="Show Reports of @fItem.Name" class="pull-left" data-placement="top" title="Show Reports" data-original-title="Show Reports" data-toggle="modal" data-target="#ShowReoprts"
                                                           onclick="ViewReports('@fItem.LinkAddress','@EntityDispName');">
                                                            @fItem.Name
                                                        </a>
                                                        <div class="pull-right">
                                                            <a id="rptView" data-placement="top" title="Show Reports of @fItem.Name" data-original-title="Show Reports" data-toggle="modal" data-target="#ShowReoprts"
                                                               onclick="ViewReports('@fItem.LinkAddress','@EntityDispName');">
                                                                <span class="fa fam-page-gear"></span>
                                                            </a>
                                                            <a onclick="deleteReport(@fItem.Id ,'@fItem.Name')"><span class="fam-cross"></span></a>
                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li style="list-style:none; border-bottom:1px solid #ddd; height:30px; padding:5px;">
                                                        <a href='@GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri()@fItem.LinkAddress' class="pull-left" style="width:90%">@fItem.Name</a>
                                                        <a href="@Url.Action("FavoriteDelete", "Home", new { id = fItem.Id })" class="pull-right" style="width:2%"><span class="fam-cross"></span></a>
                                                    </li>
                                                }
											}
                                        }
                                    </ul>
                                </div><!--/details-->
                            </div>
                        </div>
                    </div>
                </div>
	</div>  
  
            
       
		
  </div>
   </div>
}
@if (ViewBag.PageContent != null && ViewBag.PageRoles == null)
{
     <script>
        
        $(document).ready(function () {
            document.getElementsByTagName("html")[0].style.visibility = "visible";

            $("div").remove(".preview");
            $("a").remove(".remove, .drag, .clone, .settings");
            $("div").removeClass("TurantoRow ui-draggable ui-droppable ui-sortable view column row clearfix");
            $(".panel-body").css({ "min-height": "auto" });
            $(".container").css({ "padding": "0px", "margin": "0px", "width": "100%" });
			var userdiv = $(this).find('div#dvuserFavorite');
            if (userdiv != undefined) {
                userdiv.html('');
                userdiv.html($("#dvMyFavorite").html());
            }
        });
    
    </script>

    <link href="~/PageBuilder/css/HomePage1.css" rel="stylesheet" type="text/css" />
    <link href="~/PageBuilder/font-awesome/css/font-awesome.css" rel="stylesheet" />
    
    <script>
    $(window).load(function () {

        // Delay show just to simulate a real page with tons of content to load
        window.setInterval(showPage, 3000);

        function showPage() {
            $('body').show();
        }

    });
    </script>

    <div class="row">
        <div class="col-lg-12" style="padding-right:14px;">
            <h1 class="page-title">
                <i class="glyphicon glyphicon-home text-primary" style="margin-bottom:-20px;"></i> Home
            </h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    @Html.Raw(ViewBag.PageContent)
<div style="clear:both;"></div>
}
<div id="dvMyFavorite" style="display:none">
    @if (ViewBag.FavoriteItem != null)
    {
        foreach (GeneratorBase.MVC.Models.FavoriteItem fItem in ViewBag.FavoriteItem)
        {
            <div class="TurantoRow ui-draggable ui-droppable" style="display: block;">
                <div class="view">
                    <a class="udplink" href="@GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri()@fItem.LinkAddress">
                        @fItem.Name
                    </a>
                    <a onclick="deleteFavraite(@fItem.Id ,'@fItem.Name')" class="pull-right" style="margin-top:-30px;position:absolute; right:35px"><span class="fam-cross"></span></a>
                </div>
            </div>
        }
    }
</div>
<div class="modal fade" id="ShowReoprts" tabindex="-1" role="dialog" aria-labelledby="ShowReoprtsLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="ShowReoprtsLabel">Reports of</h4>
            </div>
            <div class="modal-body">
                <div id="LoadReportsDiv"></div>
                <div style="clear:both"></div>
            </div>

        </div>
    </div>
</div>
<script>
    function deleteReport(Id, rptname) {

        var r = confirm("Do you want to delete " + rptname + " report!");
        if (r == true) {
            var thelink = "@Url.Action("DeleteCustomReports", "Reports")";

            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: Id },
                success: function (data) {
                    if (data == "success") {
                        window.location.reload();
                    }

                }
            })
        }
        else {
            return true;
        }

    }
	function deleteFavraite(Id, favname) {

        var r = confirm("Do you want to delete " + favname + " Favorite!");
        if (r == true) {
            var thelink = "@Url.Action("FavoriteDeleteUDF", "Home")";

            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: Id },
                success: function (data) {
                    if (data == "success") {
                        window.location.reload();
                    }

                }
            })
        }
        else {
            return true;
        }

    }
</script>
