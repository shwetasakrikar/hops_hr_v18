#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.PropertyMapping
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\PropertyMapping\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/PropertyMapping/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.PropertyMapping>
    {
        
        #line 8 "..\..\Views\PropertyMapping\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("PropertyMapping", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\PropertyMapping\Edit.cshtml"
  
    ViewBag.Title = "Edit Property Mapping";
	var EditPermission = User.CanEditItem("PropertyMapping", Model, User);
	var DeletePermission = User.CanDeleteItem("PropertyMapping", Model, User);

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<script>\r\n    $(document).ready(function () {\r\n        try {\r\n            var hos" +
"tingEntityName = \"\";\r\n            if (\'");

            
            #line 21 "..\..\Views\PropertyMapping\Edit.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 22 "..\..\Views\PropertyMapping\Edit.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n\t\t\t\t$(\'#\' + hostingEntityName + \'ID\').attr(\"lock\",\"true\");\r\n\t\t\t\t $(\'#\' + host" +
"ingEntityName + \'ID\').trigger(\"change\");\r\n            }\r\n        }\r\n        catc" +
"h (ex) { }\r\n    });\r\n</script>\r\n");

            
            #line 30 "..\..\Views\PropertyMapping\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.PropertyMappingIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\PropertyMapping\Edit.cshtml"
   Write(Html.Raw(ViewBag.PropertyMappingIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                      ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> Property Mapping  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Edit</span>\r\n        </h1>\r\n<label");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" class=\"text-primary small pull-right\"");

WriteLiteral(" style=\"color:red; vertical-align:middle; font-weight:100;\"");

WriteLiteral("></label>\r\n<div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n            <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n        </div>\r\n      <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n\t  <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(">");

            
            #line 47 "..\..\Views\PropertyMapping\Edit.cshtml"
                                      Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n\t   <div");

WriteLiteral(" class=\"btn-group pull-right fixactionbut\"");

WriteLiteral(">\r\n            <button");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-default pull-right\"");

WriteLiteral(">\r\n                Action\r\n                <span");

WriteLiteral(" class=\"caret\"");

WriteLiteral(">    </span>\r\n            </button>\r\n\t\t\t<ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n\t\t\t\t<li>\r\n                    <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2132), Tuple.Create("\"", 2387)
            
            #line 55 "..\..\Views\PropertyMapping\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 2139), Tuple.Create<System.Object, System.Int32>(Url.Action("Details", "PropertyMapping", new { id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"])  }, null)
            
            #line default
            #line hidden
, 2139), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-eye-open\"");

WriteLiteral("></i>  View</a>\r\n                </li>\r\n\t\t\t\t<li>\r\n");

            
            #line 58 "..\..\Views\PropertyMapping\Edit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 58 "..\..\Views\PropertyMapping\Edit.cshtml"
                     if ( User.CanEdit("PropertyMapping"))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2587), Tuple.Create("\"", 2862)
            
            #line 60 "..\..\Views\PropertyMapping\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 2594), Tuple.Create<System.Object, System.Int32>(Url.Action("Edit","PropertyMapping", new { id = Model.Id,  UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)
            
            #line default
            #line hidden
, 2594), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-edit\"");

WriteLiteral("></i>  Edit</a>\r\n");

            
            #line 61 "..\..\Views\PropertyMapping\Edit.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </li>             \r\n\t\t\t\t<li>\r\n");

            
            #line 64 "..\..\Views\PropertyMapping\Edit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 64 "..\..\Views\PropertyMapping\Edit.cshtml"
                     if ( User.CanDelete("PropertyMapping"))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3096), Tuple.Create("\"", 3374)
            
            #line 66 "..\..\Views\PropertyMapping\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3103), Tuple.Create<System.Object, System.Int32>(Url.Action("Delete", "PropertyMapping", new { id = Model.Id, UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)
            
            #line default
            #line hidden
, 3103), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral("></i>  Delete</a>\r\n");

            
            #line 67 "..\..\Views\PropertyMapping\Edit.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </li>\r\n <li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n <li");

WriteLiteral(" class=\"dropdown-submenu pull-left\"");

WriteLiteral(">\r\n\t<a");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" style=\"margin-bottom:10px;\"");

WriteLiteral(">Find Matching</a>\r\n    <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 3698), Tuple.Create("\"", 3811)
            
            #line 74 "..\..\Views\PropertyMapping\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3705), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "DataSourceParameters", new {sourceEntity="PropertyMapping",id=Model.Id}, null)
            
            #line default
            #line hidden
, 3705), false)
);

WriteLiteral(">Data Source Parameters</a>\r\n</li>\r\n</ul>\r\n</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t  </h2>\r\n " +
"   </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n <div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n\t <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Details</a></li>\r\n    </ul>\r\n\t\t<div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n");

            
            #line 90 "..\..\Views\PropertyMapping\Edit.cshtml"
 using (Html.BeginForm("Edit","PropertyMapping",new {UrlReferrer =Convert.ToString(ViewData["PropertyMappingParentUrl"])}, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
     Html.ValidationSummary(true);
                Html.EnableClientValidation();
    
            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\PropertyMapping\Edit.cshtml"
Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\PropertyMapping\Edit.cshtml"
                                      
	
            
            #line default
            #line hidden
            
            #line 95 "..\..\Views\PropertyMapping\Edit.cshtml"
Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 95 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n\t\t\t\t\t\t<div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

            
            #line 100 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","PropertyName"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvPropertyName\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 104 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.PropertyName));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 107 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.PropertyName,  getHtmlAttributes("PropertyName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 108 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.PropertyName));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 112 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 112 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.PropertyName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 112 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                      }

            
            #line default
            #line hidden
            
            #line 113 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","DataName"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDataName\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 117 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.DataName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 120 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.DataName,  getHtmlAttributes("DataName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 121 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.DataName));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 125 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 125 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.DataName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 125 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                  }

            
            #line default
            #line hidden
            
            #line 126 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","DataSource"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDataSource\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 130 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.DataSource));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t");

            
            #line 132 "..\..\Views\PropertyMapping\Edit.cshtml"
                           Write(Html.TextAreaFor(model => model.DataSource, getHtmlAttributes("DataSource")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 133 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.DataSource));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 137 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.DataSource, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                    }

            
            #line default
            #line hidden
            
            #line 138 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","SourceType"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvSourceType\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 142 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.SourceType));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 145 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.SourceType,  getHtmlAttributes("SourceType")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 146 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.SourceType));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 150 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 150 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.SourceType, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 150 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                    }

            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","MethodType"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvMethodType\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 155 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.MethodType));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 158 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.MethodType,  getHtmlAttributes("MethodType")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 159 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.MethodType));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 163 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 163 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.MethodType, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 163 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                    }

            
            #line default
            #line hidden
            
            #line 164 "..\..\Views\PropertyMapping\Edit.cshtml"
 if(User.CanView("PropertyMapping","Action"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAction\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 168 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.Action));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 171 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.Action,  getHtmlAttributes("Action")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 172 "..\..\Views\PropertyMapping\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.Action));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 176 "..\..\Views\PropertyMapping\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 176 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.HiddenFor(model => model.Action, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 176 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                }

            
            #line default
            #line hidden
            
            #line 177 "..\..\Views\PropertyMapping\Edit.cshtml"
				
            
            #line default
            #line hidden
            
            #line 177 "..\..\Views\PropertyMapping\Edit.cshtml"
                 if(User.CanView("PropertyMapping","EntityPropertyMappingID"))
				{

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvEntityPropertyMappingID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 181 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                   Write(Html.LabelFor(model => model.EntityPropertyMappingID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 184 "..\..\Views\PropertyMapping\Edit.cshtml"
									
            
            #line default
            #line hidden
            
            #line 184 "..\..\Views\PropertyMapping\Edit.cshtml"
                                     if (User.CanEdit("PropertyMapping", "EntityPropertyMappingID"))
		{
			
            
            #line default
            #line hidden
            
            #line 186 "..\..\Views\PropertyMapping\Edit.cshtml"
       Write(Html.DropDownList("EntityPropertyMappingID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "EntityDataSource", @dataurl = Url.Action("GetAllValue", "EntityDataSource",new { caller = "EntityPropertyMappingID" }) }));

            
            #line default
            #line hidden
            
            #line 186 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                                                                                                                                                                                                           
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 190 "..\..\Views\PropertyMapping\Edit.cshtml"
       Write(Html.HiddenFor(model => model.EntityPropertyMappingID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 190 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                                    
			
            
            #line default
            #line hidden
            
            #line 191 "..\..\Views\PropertyMapping\Edit.cshtml"
       Write(Html.DropDownList("EntityPropertyMappingID", null, "-- Select --", new {     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "EntityDataSource", @dataurl = Url.Action("GetAllValue", "EntityDataSource",new { caller = "EntityPropertyMappingID" }) }));

            
            #line default
            #line hidden
            
            #line 191 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                                                                                                                                                                                                                                
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 193 "..\..\Views\PropertyMapping\Edit.cshtml"
                           Write(Html.ValidationMessageFor(model => model.EntityPropertyMappingID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 194 "..\..\Views\PropertyMapping\Edit.cshtml"
								 
            
            #line default
            #line hidden
            
            #line 194 "..\..\Views\PropertyMapping\Edit.cshtml"
                                  if ( User.CanAdd("EntityDataSource"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                 <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral("  data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 10307), Tuple.Create("\"", 10626)
            
            #line 197 "..\..\Views\PropertyMapping\Edit.cshtml"
                       , Tuple.Create(Tuple.Create("", 10317), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Entity Data Source','dvPopup','" + Url.Action("CreateQuick", "EntityDataSource", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 10317), false)
);

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                    </a>\r\n                             " +
"   </div>\r\n");

            
            #line 201 "..\..\Views\PropertyMapping\Edit.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n                        </div>\r\n                   " +
" </div>\r\n");

            
            #line 206 "..\..\Views\PropertyMapping\Edit.cshtml"
					} else { 
            
            #line default
            #line hidden
            
            #line 206 "..\..\Views\PropertyMapping\Edit.cshtml"
                        Write(Html.HiddenFor(model => model.EntityPropertyMappingID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 206 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                                                     }

            
            #line default
            #line hidden
WriteLiteral("       </div>\r\n\t            </div>\r\n        </div>\r\n\t\t</div>\r\n");

            
            #line 211 "..\..\Views\PropertyMapping\Edit.cshtml"
		 
            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\PropertyMapping\Edit.cshtml"
                                 ;
		 
            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\PropertyMapping\Edit.cshtml"
    Write(Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["PropertyMappingParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" }));

            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\PropertyMapping\Edit.cshtml"
                                                                                                                                                                   
		 if (EditPermission)
         {

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Continue\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

            
            #line 217 "..\..\Views\PropertyMapping\Edit.cshtml"
		}	

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 219 "..\..\Views\PropertyMapping\Edit.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral(@"</div>
</div> <!-- /tab-content --><br />
<br/>
</div>
	<script>
    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>
	<script>
    $(""input[type='submit']"").click(function () {
        var $this = $(this);
        $('input:hidden[name=""hdncommand""]').val($this.val());
    });
	</script>
");

            
            #line 249 "..\..\Views\PropertyMapping\Edit.cshtml"
  
var busineesrule = User.businessrules.Where(p => p.EntityName == "PropertyMapping").ToList();
if ((busineesrule != null && busineesrule.Count > 0))
{

            
            #line default
            #line hidden
WriteLiteral("    <script>\r\n    $(document).ready(function () {\r\n        $.ajax({\r\n            " +
"async: false,\r\n            type: \"GET\",\r\n            url: \"");

            
            #line 258 "..\..\Views\PropertyMapping\Edit.cshtml"
             Write(Url.Action("GetLockBusinessRules", "PropertyMapping"));

            
            #line default
            #line hidden
WriteLiteral(@""",
            data: $(""form"").serialize(),
        success: function (data) {
            if (data.length > 0) {
                $(':input:not([readonly])', 'form').attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
                document.getElementById('ErrMsg').innerHTML = data + "" Rules applied"";
            }
        },
        error: function (jqXHR, textStatus, errorThrown) {
        }
    });
	$.ajax({
            async: false,
            type: ""GET"",
            url: """);

            
            #line 272 "..\..\Views\PropertyMapping\Edit.cshtml"
             Write(Url.Action("GetReadOnlyProperties", "PropertyMapping"));

            
            #line default
            #line hidden
WriteLiteral(@""",
            data: $(""form"").serialize(),
            success: function (data) {
                for (var key in data) {
                    $('#' + key).attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
					$(""input[type='radio'][name='"" + key + ""']"").attr('disabled', 'disabled').attr('readonly', 'readonly');
					$('form').append('<input type=""hidden"" name=""' + key + '"" id=""' + key + '"" value=""' + $('#' + key).val() + '"" />');
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
    });
</script>
");

WriteLiteral("<script>\r\n    $(\"form\").submit(function () {\r\n            var flag = true;\r\n     " +
" \r\n            $.ajax({\r\n                async: false,\r\n                type: \"G" +
"ET\",\r\n                url: \"");

            
            #line 293 "..\..\Views\PropertyMapping\Edit.cshtml"
                 Write(Url.Action("GetMandatoryProperties", "PropertyMapping"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                data: $(this).serialize(),
                 success: function (data) {
                        $('[businessrule=""mandatory""]').each(function () {
                            $(this).removeAttr('required');
                        });
                        document.getElementById('ErrMsg').innerHTML = """";
                        for (var key in data) {
                            if ($.trim($('#' + key).val()).length == 0 && $.trim($(""input[type='radio'][name='"" + key + ""']:checked"").val()).length == 0)
                            {
                                $('#' + key).attr('required', 'required');
                                $('#' + key).attr('businessrule', 'mandatory');
                                $(""input[type='radio'][name='"" + key + ""']"").attr('required', 'required');
                                $(""input[type='radio'][name='"" + key + ""']"").attr('businessrule', 'mandatory');
                                flag = false;
                                document.getElementById('ErrMsg').innerHTML += data[key] + "" is Mandatory.<br/>"";
                            }
                        }
                    },
                error: function (jqXHR, textStatus, errorThrown) {
                }
            });
			 if (flag)
                    $(""form"").find(':input').removeAttr('disabled');
            return flag;
    });
</script>
");

            
            #line 320 "..\..\Views\PropertyMapping\Edit.cshtml"
}
 else
    {
           
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
