#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.CustomReports
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\CustomReports\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/CustomReports/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.CustomReports>
    {
        
        #line 10 "..\..\Views\CustomReports\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("CustomReports", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\CustomReports\Edit.cshtml"
  
    ViewBag.Title = "Edit CustomReports";
    var EditPermission = User.CanEditItem("CustomReports", Model, User);
    var DeletePermission = User.CanDeleteItem("CustomReports", Model, User);
    var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "CustomReports");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "CustomReports";

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral(@"<script>
    $(document).ready(function () {
        $('select[multiple=""multiple""]').each(function () {
            $(this).multiselect({ buttonWidth: '80%' });
        });

    });
    $(document).ready(function () {
        try {
            var hostingEntityName = """";
            if ('");

            
            #line 29 "..\..\Views\CustomReports\Edit.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\'.length > 0) {\r\n                hostingEntityName = \'");

            
            #line 30 "..\..\Views\CustomReports\Edit.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral(@"';
                $('#' + hostingEntityName + 'ID').attr(""lock"", ""true"");
                $('#' + hostingEntityName + 'ID').trigger(""change"");
                $(""input[type='radio'][name='"" + hostingEntityName + ""ID']"").each(function () {
                    if (!this.checked)
                        this.closest(""li"").style.display = ""none"";
                });
            }
            if ($.cookie('");

            
            #line 38 "..\..\Views\CustomReports\Edit.cshtml"
                     Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
            
            #line 38 "..\..\Views\CustomReports\Edit.cshtml"
                                                Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\' + \'TabCookie\') != null) {\r\n                $(\'a[href=\"#\' + $.cookie(\'");

            
            #line 39 "..\..\Views\CustomReports\Edit.cshtml"
                                     Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
            
            #line 39 "..\..\Views\CustomReports\Edit.cshtml"
                                                                Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\' + \'TabCookie\') + \'\"]\').click();\r\n            }\r\n\r\n        }\r\n        catch (ex)" +
" { }\r\n    });\r\n</script>\r\n");

            
            #line 46 "..\..\Views\CustomReports\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.CustomReportsIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\CustomReports\Edit.cshtml"
   Write(Html.Raw(ViewBag.CustomReportsIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\CustomReports\Edit.cshtml"
                                                    ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 52 "..\..\Views\CustomReports\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.CustomReportsIsSetValueUIRule))
    {
        
            
            #line default
            #line hidden
            
            #line 55 "..\..\Views\CustomReports\Edit.cshtml"
   Write(Html.Raw(ViewBag.CustomReportsIsSetValueUIRule));

            
            #line default
            #line hidden
            
            #line 55 "..\..\Views\CustomReports\Edit.cshtml"
                                                        ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> ");

            
            #line 61 "..\..\Views\CustomReports\Edit.cshtml"
                                                             Write(EntityDisplayName);

            
            #line default
            #line hidden
WriteLiteral("  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Edit</span>\r\n\r\n            <div");

WriteLiteral(" class=\"btn-group pull-right\"");

WriteLiteral(" style=\"margin-top:3px;\"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-default\"");

WriteLiteral(">\r\n                    Action\r\n                    <span");

WriteLiteral(" class=\"caret\"");

WriteLiteral(">    </span>\r\n                </button>\r\n                <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n                    <li>\r\n                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2801), Tuple.Create("\"", 3054)
            
            #line 70 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 2808), Tuple.Create<System.Object, System.Int32>(Url.Action("Details", "CustomReports", new { id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"])  }, null)
            
            #line default
            #line hidden
, 2808), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-eye-open\"");

WriteLiteral("></i>  View</a>\r\n                    </li>\r\n                    <li>\r\n");

            
            #line 73 "..\..\Views\CustomReports\Edit.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 73 "..\..\Views\CustomReports\Edit.cshtml"
                         if ( User.CanEdit("CustomReports"))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3284), Tuple.Create("\"", 3557)
            
            #line 75 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3291), Tuple.Create<System.Object, System.Int32>(Url.Action("Edit","CustomReports", new { id = Model.Id,  UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)
            
            #line default
            #line hidden
, 3291), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-edit\"");

WriteLiteral("></i>  Edit</a>\r\n");

            
            #line 76 "..\..\Views\CustomReports\Edit.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </li>\r\n                    <li>\r\n");

            
            #line 79 "..\..\Views\CustomReports\Edit.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 79 "..\..\Views\CustomReports\Edit.cshtml"
                         if ( User.CanDelete("CustomReports"))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3812), Tuple.Create("\"", 4088)
            
            #line 81 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3819), Tuple.Create<System.Object, System.Int32>(Url.Action("Delete", "CustomReports", new { id = Model.Id, UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)
            
            #line default
            #line hidden
, 3819), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral("></i>  Delete</a>\r\n");

            
            #line 82 "..\..\Views\CustomReports\Edit.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </li>\r\n                    <li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n                    <li");

WriteLiteral(" class=\"dropdown-submenu pull-left\"");

WriteLiteral(">\r\n                        <a");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" style=\"margin-bottom:10px;\"");

WriteLiteral(">Find Matching</a>\r\n                        <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n                            <li>\r\n                                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 4559), Tuple.Create("\"", 4658)
            
            #line 89 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 4566), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "Customer", new {sourceEntity="CustomReports",id=Model.Id}, null)
            
            #line default
            #line hidden
, 4566), false)
);

WriteLiteral(">Customer</a>\r\n                            </li>\r\n                        </ul>\r\n" +
"                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        " +
"    <div");

WriteLiteral(" class=\"btn-group pull-right\"");

WriteLiteral(" style=\"margin-top:3px; margin-right:3px\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"btn btn-default btn-xs closeall\"");

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-up\"");

WriteLiteral("></i> Collapse All</a> <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"btn btn-default btn-xs openall\"");

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></i> Expand All</a>\r\n            </div>\r\n\r\n        </h1>\r\n\r\n        <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n            <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(" class=\"EntityDisplayName\"");

WriteAttribute("title", Tuple.Create(" title=\"", 5297), Tuple.Create("\"", 5350)
            
            #line 103 "..\..\Views\CustomReports\Edit.cshtml"
  , Tuple.Create(Tuple.Create("", 5305), Tuple.Create<System.Object, System.Int32>(Html.DisplayFor(model => model.DisplayValue)
            
            #line default
            #line hidden
, 5305), false)
);

WriteLiteral(">");

            
            #line 103 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                            Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            <div");

WriteLiteral(" class=\"pull-right EntityDisplayBut\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 105 "..\..\Views\CustomReports\Edit.cshtml"
           Write(Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["CustomReportsParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-xs pull-right formbuttonfix" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n            </div>\r\n        </h2>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</" +
"div>\r\n<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" />\r\n<div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n    <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n</div>\r\n\r\n<div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 6021), Tuple.Create("\"", 6086)
, Tuple.Create(Tuple.Create("", 6031), Tuple.Create("ClearTabCookie(\'", 6031), true)
            
            #line 121 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6047), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 6047), false)
            
            #line 121 "..\..\Views\CustomReports\Edit.cshtml"
                  , Tuple.Create(Tuple.Create("", 6074), Tuple.Create<System.Object, System.Int32>(Model.Id
            
            #line default
            #line hidden
, 6074), false)
, Tuple.Create(Tuple.Create("", 6083), Tuple.Create("\');", 6083), true)
);

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Designer</a></li>\r\n        <li");

WriteLiteral(" id=\"ViewReportsli\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" href=\"#ViewRepotsTab\"");

WriteLiteral(" id=\"ReportsTab\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 6210), Tuple.Create("\"", 6293)
, Tuple.Create(Tuple.Create("", 6220), Tuple.Create("LoadTabReports(\'", 6220), true)
            
            #line 123 "..\..\Views\CustomReports\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6236), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("ReportsResult", "CustomReports"))
            
            #line default
            #line hidden
, 6236), false)
, Tuple.Create(Tuple.Create("", 6291), Tuple.Create("\')", 6291), true)
);

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">\r\n                View Report\r\n            </a>\r\n\r\n        </li>\r\n\r\n    </ul>\r\n " +
"   <div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n");

            
            #line 132 "..\..\Views\CustomReports\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 132 "..\..\Views\CustomReports\Edit.cshtml"
             using (Html.BeginForm("Edit", "CustomReports", new { UrlReferrer = Convert.ToString(ViewData["CustomReportsParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data", @id = "frmCustomReports" }))
            {
                Html.ValidationSummary(true);
                Html.EnableClientValidation();
                
            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\CustomReports\Edit.cshtml"
           Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\CustomReports\Edit.cshtml"
                                                  
                
            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\CustomReports\Edit.cshtml"
           Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\CustomReports\Edit.cshtml"
                                                              

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#detailsbody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Details</a></h3>\r\n                                        </div>\r\n      " +
"                                  <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"detailsbody\"");

WriteLiteral(">\r\n");

            
            #line 149 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 149 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "ReportName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvReportName\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Report Name\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 153 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ReportName));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                            ");

            
            #line 156 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.ReportName, getHtmlAttributes("ReportName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 157 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.ReportName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 161 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 164 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ReportName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 164 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 165 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "CreatedOn"))
                                            {


            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvCreatedOn\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Created On\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 170 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.CreatedOn));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerCreatedOn\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                ");

            
            #line 173 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.CreatedOn, "{0:MM/dd/yyyy}", User.CanEdit("CustomReports", "CreatedOn") ? (object)new { @class = "form-control" } : (object)new { @class = "form-control", @readonly = "readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                                                <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                                    <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                                </span>\r\n " +
"                                                           </div>\r\n");

WriteLiteral("                                                            ");

            
            #line 179 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.CreatedOn));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                                        </div>\r\n             " +
"                                       </div>\r\n");

            
            #line 183 "..\..\Views\CustomReports\Edit.cshtml"
                                                    
            
            #line default
            #line hidden
            
            #line 183 "..\..\Views\CustomReports\Edit.cshtml"
                                                     if (User.CanEdit("CustomReports", "CreatedOn"))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                            $(function () {
                                                                $('#CreatedOn').datetimepicker({ pickTime: false });
                                                                $('#datetimepickerCreatedOn').datetimepicker({ pickTime: false });
                                                            });
                                                        </script>
");

            
            #line 191 "..\..\Views\CustomReports\Edit.cshtml"
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                                </div>\r\n");

            
            #line 193 "..\..\Views\CustomReports\Edit.cshtml"



                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 198 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.CreatedOn, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 198 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 199 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "ReportType"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvReportType\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Report Type\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 203 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ReportType));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"ReportTypeDD\"");

WriteLiteral(" required=\"required\"");

WriteLiteral(" onchange=\"SetReportType(this);\"");

WriteLiteral(">\r\n                                                                <option");

WriteLiteral(" value=\"Simple\"");

WriteLiteral(">Simple</option>\r\n                                                               " +
" <option");

WriteLiteral(" value=\"CrossTab\"");

WriteLiteral(">Cross Tab</option>\r\n                                                            " +
"</select>\r\n");

WriteLiteral("                                                            ");

            
            #line 209 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("ReportType"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 210 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.ReportType));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 214 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 217 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ReportType, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 217 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 218 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "CreatedByUserID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvCreatedByUserID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 222 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.CreatedByUserID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 225 "..\..\Views\CustomReports\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 225 "..\..\Views\CustomReports\Edit.cshtml"
                                                                 if (User.CanEdit("CustomReports", "CreatedByUserID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 227 "..\..\Views\CustomReports\Edit.cshtml"
                                                               Write(Html.DropDownList("CreatedByUserID", null, "--Select Created By--", new { @class = "chosen-select form-control", @HostingName = "UserDropDown", @dataurl = Url.Action("GetAllValueUserLogin", "CustomReports", null) }));

            
            #line default
            #line hidden
            
            #line 227 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                                                                                                                                                                            
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\CustomReports\Edit.cshtml"
                                                               Write(Html.DropDownList("CreatedByUserID", null, "--Select Created By--", new { @disabled = "disabled", @class = "chosen-select form-control", @HostingName = "UserDropDown", @dataurl = Url.Action("GetAllValueUserLogin", "CustomReports", null) }));

            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                    
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 233 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.CreatedByUserID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n                                                            </div>\r\n       " +
"                                                 </div>\r\n                       " +
"                             </div>\r\n                                           " +
"     </div>\r\n");

            
            #line 240 "..\..\Views\CustomReports\Edit.cshtml"



                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 245 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.CreatedByUserID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 245 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                              }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 246 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "Description"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDescription\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Description\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 250 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 252 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.TextAreaFor(model => model.Description, getHtmlAttributes("Description")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 253 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 257 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.Description, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n                                </div>\r\n                            <" +
"/div>\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#entitiesinreportbody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Entities In Report</a></h3>\r\n                                        </d" +
"iv>\r\n                                        <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"entitiesinreportbody\"");

WriteLiteral(">\r\n");

            
            #line 272 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 272 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "EntityName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvEntityName\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Entity Name\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 276 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 278 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("EntityNameDD", null, "-- Select --", new { @required = "Required", @onchange = "SetEntityName(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 279 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("EntityName"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 280 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Add\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" style=\"visibility:hidden\"");

WriteLiteral(">\r\n                                                            Entity\r\n          " +
"                                              </label>\r\n                        " +
"                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <input");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"addEntityBtn\"");

WriteLiteral(" onclick=\"AddEntity()\"");

WriteLiteral(" value=\"Add Entity\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n                                                        </div>\r\n            " +
"                                        </div>\r\n                                " +
"                </div>\r\n");

WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Add\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                        </div>\r\n              " +
"                                      </div>\r\n                                  " +
"              </div>\r\n");

WriteLiteral("                                                <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                                                    <table");

WriteLiteral(" id=\"tblEntityList\"");

WriteLiteral(" style=\"table-layout: fixed;\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                                                        <thead>\r\n             " +
"                                               <tr>\r\n                           " +
"                                     <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Entity Name</th>\r\n                                                              " +
"  <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(@">Remove</th>
                                                            </tr>
                                                        </thead>
                                                        <tr></tr>
                                                    </table>
                                                </div>
");

            
            #line 311 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 314 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.EntityName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 314 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n                                </div>\r\n                            <" +
"/div>\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" id=\"SimpleRpt\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#resultpropertybody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Result Property</a></h3>\r\n                                        </div>" +
"\r\n                                        <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"resultpropertybody\"");

WriteLiteral(">\r\n");

            
            #line 327 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 327 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "ResultProperty"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvResultProperty\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Result Property\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 331 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ResultProperty));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 333 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("ResultPropertyDD", null, "-- Select --", new { @onchange = "SetResultProperty(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 334 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("ResultProperty"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 335 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.ResultProperty));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 339 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 342 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ResultProperty, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 342 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 344 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 344 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "ColumnOrder"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvColumnOrder\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Column Order\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 348 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ColumnOrder));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                            ");

            
            #line 351 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.ColumnOrder, getHtmlAttributes("ColumnOrder")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 352 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.ColumnOrder));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 356 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 359 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ColumnOrder, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 359 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 360 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "OrderBy"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvOrderBy\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Order By\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 364 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.OrderBy));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"OrderByDD\"");

WriteLiteral(" required=\"required\"");

WriteLiteral(" onchange=\"SetOrderBy(this);\"");

WriteLiteral(">\r\n                                                                <option");

WriteLiteral(" value=\"\"");

WriteLiteral(">none</option>\r\n                                                                <" +
"option");

WriteLiteral(" value=\"asc\"");

WriteLiteral(">Ascending</option>\r\n                                                            " +
"    <option");

WriteLiteral(" value=\"desc\"");

WriteLiteral(">Descending</option>\r\n                                                           " +
" </select>\r\n");

WriteLiteral("                                                            ");

            
            #line 371 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("OrderBy"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 372 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.OrderBy));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 376 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 379 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.OrderBy, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 379 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n");

            
            #line 383 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 383 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "GroupBy"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvGroupBy\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Group By\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 388 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.LabelFor(model => model.GroupBy));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </label>\r\n             " +
"                                           <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                            ");

            
            #line 392 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.CheckBox("GroupBy", Model.GroupBy.HasValue ? Model.GroupBy : false));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 393 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.GroupBy));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 397 "..\..\Views\CustomReports\Edit.cshtml"


                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 401 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.GroupBy, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 401 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" style=\"float:right\"");

WriteLiteral(" name=\"dvAggregateFunctionSimple\"");

WriteLiteral(" id=\"dvAggregateFunctionSimple\"");

WriteLiteral(">\r\n                                                    <label>Aggregate Operators" +
"</label>\r\n                                                    <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"AggregateDD\"");

WriteLiteral(" multiple=\"multiple\"");

WriteLiteral(" required=\"required\"");

WriteLiteral(">\r\n                                                        ");

WriteLiteral("\r\n                                                    </select>\r\n                " +
"                                </div>\r\n                                        " +
"    </div>\r\n                                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                    <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" style=\"visibility:hidden\"");

WriteLiteral(">\r\n                                                        Property\r\n            " +
"                                        </label>\r\n                              " +
"                      <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                        <input");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"addPropertyBtn\"");

WriteLiteral(" value=\"Add Property\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" onclick=\"AddProperty(this)\"");

WriteLiteral(" />\r\n                                                    </div>\r\n                " +
"                                </div>\r\n                                        " +
"    </div>\r\n                                            <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                                                <table");

WriteLiteral(" id=\"tblPropertyList\"");

WriteLiteral(" style=\"table-layout: fixed;\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                                                    <thead>\r\n                 " +
"                                       <tr>\r\n                                   " +
"                         <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Property Name</th>\r\n                                                            " +
"");

WriteLiteral("\r\n                                                            <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Order By</th>\r\n                                                            <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Group By</th>\r\n                                                            <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Aggr.Operators</th>\r\n                                                           " +
" <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(@">Remove</th>
                                                        </tr>
                                                    </thead>
                                                    <tr></tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            ");

WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" id=\"CrossTabrpt\"");

WriteLiteral(" style=\"display:none\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" style=\"margin: 3px 0px 0px 0px;\"");

WriteLiteral(">\r\n                                                <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                                <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#crosstabpropertybody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Cross Tab</a></h3>\r\n                                            </div>\r\n" +
"\r\n                                        </div>\r\n                              " +
"          <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"crosstabpropertybody\"");

WriteLiteral(">\r\n");

            
            #line 451 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 451 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "CrossTabRow"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvCrossTabRow\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Cross Tab Row\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Row</label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 457 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("CrossTabRowDD", null, "-- Select --", new { @onchange = "SetCrossTabRow(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 458 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("CrossTabRow"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 459 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.CrossTabRow));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 463 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 465 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.CrossTabRow, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 465 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 466 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "CrossTabColumn"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvCrossTabColumn\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Cross Tab Column\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Column</label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 472 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("CrossTabColumnDD", null, "-- Select --", new { @onchange = "SetCrossTabColumn(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 473 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("CrossTabColumn"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 474 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.CrossTabColumn));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 478 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 480 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.CrossTabColumn, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 480 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 481 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "AggregateEntity"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAggregateEntity\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Aggregate Entity\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Entity</label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 487 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("AggregateEntityDD", null, "-- Select --", new { @onchange = "SetAggregateEntity(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 488 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("AggregateEntity"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 489 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.AggregateEntity));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 493 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 495 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AggregateEntity, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 495 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                              }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 496 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "AggregateProperty"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAggregateProperty\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Aggregate Property\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Property </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 502 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("AggregatePropertyDD", null, "-- Select --", new { @onchange = "SetAggregateProperty(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 503 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("AggregateProperty"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 504 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.AggregateProperty));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 508 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 510 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AggregateProperty, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 510 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 511 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "AggregateFunction"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" style=\"float:right;\"");

WriteLiteral(" name=\"dvAggregateFunction\"");

WriteLiteral(" id=\"dvAggregateFunction\"");

WriteLiteral(">\r\n                                                        <label>Function</label" +
">\r\n                                                        <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"AggregateFunctionDD\"");

WriteLiteral(" multiple=\"multiple\"");

WriteLiteral(" required=\"required\"");

WriteLiteral("></select>\r\n");

WriteLiteral("                                                        ");

            
            #line 517 "..\..\Views\CustomReports\Edit.cshtml"
                                                   Write(Html.Hidden("AggregateFunction"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                        ");

            
            #line 518 "..\..\Views\CustomReports\Edit.cshtml"
                                                   Write(Html.ValidationMessageFor(model => model.AggregateFunction));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                                    </div>\r\n                 " +
"                               </div>\r\n");

            
            #line 522 "..\..\Views\CustomReports\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 524 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AggregateFunction, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 524 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                    <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" style=\"visibility:hidden\"");

WriteLiteral(">\r\n                                                        CrossTabBtn\r\n         " +
"                                           </label>\r\n                           " +
"                         <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                        <input");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"addCrossTabBtn\"");

WriteLiteral(" value=\"Add Cross Tab Matrix\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" onclick=\"AddCrossTab(this)\"");

WriteLiteral(" />\r\n                                                    </div>\r\n                " +
"                                </div>\r\n                                        " +
"    </div>\r\n                                            <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                                                <table");

WriteLiteral(" id=\"tblCrossTabList\"");

WriteLiteral(" style=\"table-layout: fixed;\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                                                    <thead>\r\n                 " +
"                                       <tr>\r\n                                   " +
"                         <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Entity Name</th>\r\n                                                            <t" +
"h");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Property Name</th>\r\n                                                            " +
"<th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Function Name</th>\r\n                                                            " +
"<th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(@">Remove</th>
                                                        </tr>
                                                    </thead>
                                                    <tr></tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
");

WriteLiteral("                                    ");

            
            #line 550 "..\..\Views\CustomReports\Edit.cshtml"
                               Write(Html.Hidden("CrossTabPropertyValues"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n   " +
"                         ");

WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#queryconditionbody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Filter Condition</a></h3>\r\n                                        </div" +
">\r\n                                        <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"queryconditionbody\"");

WriteLiteral(">\r\n");

            
            #line 562 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 562 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "FilterProperty"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvFilterProperty\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Filter Property\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 566 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.FilterProperty));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 568 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("FilterPropertyDD", null, "-- Select --", new { @onchange = "SetFilterProperty(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 569 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("FilterProperty"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 570 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.FilterProperty));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 574 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 577 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.FilterProperty, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 577 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 578 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "FilterCondition"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvFilterCondition\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Filter Condition\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 582 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.FilterCondition));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 584 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("FilterConditionDD", null, "-- Select --", new { @onchange = "SetFilterCondition(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 585 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("FilterCondition"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 586 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.FilterCondition));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 590 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 593 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.FilterCondition, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 593 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                              }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 594 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "FilterType"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvFilterType\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Filter Type\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 598 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.FilterType));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"FilterTypeDD\"");

WriteLiteral(" onchange=\"SetFilterType(this);\"");

WriteLiteral(">\r\n                                                                <option");

WriteLiteral(" value=\"Value\"");

WriteLiteral(" selected=\"selected\"");

WriteLiteral(">Enter Value</option>\r\n                                                          " +
"      ");

WriteLiteral("\r\n                                                            </select>\r\n");

WriteLiteral("                                                            ");

            
            #line 606 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("FilterType"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 607 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.FilterType));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 611 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 614 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.FilterType, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 614 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 615 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "FilterValue"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvFilterValue\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Filter Value\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 619 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.FilterValue));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                            ");

            
            #line 622 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.FilterValue, getHtmlAttributes("FilterValue")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 623 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.FilterValue));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 627 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 630 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.FilterValue, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 630 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvSelectValueFromList\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Select Value From List\"");

WriteLiteral(">\r\n                                                    <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Logical Operator</label>\r\n                                                    <d" +
"iv");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                        <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"LogicalOperatorDD\"");

WriteLiteral(" onchange=\"SetLogicalOperator(this);\"");

WriteLiteral(">\r\n                                                            <option");

WriteLiteral(" value=\"AND\"");

WriteLiteral(">AND</option>\r\n                                                            <optio" +
"n");

WriteLiteral(" value=\"OR\"");

WriteLiteral(">OR</option>\r\n                                                            ");

WriteLiteral("\r\n                                                        </select>\r\n            " +
"                                        </div>\r\n                                " +
"                </div>\r\n                                            </div>\r\n");

            
            #line 643 "..\..\Views\CustomReports\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 643 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "SelectValueFromList"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvSelectValueFromList\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Select Value From List\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 647 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.SelectValueFromList));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 649 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("SelectValueFromListDD", null, "-- Select --", new { @onchange = "SetSelectValueFromList(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 650 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("SelectValueFromList"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 651 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.SelectValueFromList));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 655 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 658 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.SelectValueFromList, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 658 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                  }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 659 "..\..\Views\CustomReports\Edit.cshtml"
                                             if (User.CanView("CustomReports", "SelectProperty"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvSelectProperty\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Select Property\"");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 663 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.SelectProperty));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 665 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.DropDownList("SelectPropertyDD", null, "-- Select --", new { @onchange = "SetSelectProperty(this);", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 666 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.Hidden("SelectProperty"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 667 "..\..\Views\CustomReports\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.SelectProperty));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 671 "..\..\Views\CustomReports\Edit.cshtml"

                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 674 "..\..\Views\CustomReports\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.SelectProperty, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 674 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Add\"");

WriteLiteral(">\r\n                                                    <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" style=\"visibility:hidden\"");

WriteLiteral(">\r\n                                                        Condition\r\n           " +
"                                         </label>\r\n                             " +
"                       <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                        <input");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"addConditionBtn\"");

WriteLiteral(" onclick=\"AddQueryCondition()\"");

WriteLiteral(" value=\"Add Condition\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n                                                    </div>\r\n                " +
"                                </div>\r\n                                        " +
"    </div>\r\n                                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Add\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                    </div>\r\n                  " +
"                              </div>\r\n                                          " +
"  </div>\r\n                                            <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                                                <table");

WriteLiteral(" id=\"tblFilterList\"");

WriteLiteral(" style=\"table-layout: fixed;\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                                                    <thead>\r\n                 " +
"                                       <tr>\r\n                                   " +
"                         <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Logical Operator</th>\r\n                                                         " +
"   <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Property In Filter</th>\r\n                                                       " +
"     <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Condition</th>\r\n                                                            <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Filter Type</th>\r\n                                                            <t" +
"h");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Filter Value</th>\r\n                                                            <" +
"th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(@">Remove</th>
                                                        </tr>
                                                    </thead>
                                                    <tr></tr>
                                                </table>
                                            </div>
");

WriteLiteral("                                            ");

            
            #line 706 "..\..\Views\CustomReports\Edit.cshtml"
                                       Write(Html.Hidden("QueryConditionValues"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                </div>\r\n                           " +
" </div>\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#relationsbody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Relations</a></h3>\r\n                                        </div>\r\n    " +
"                                    <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"relationsbody\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" style=\"display:none\"");

WriteLiteral(">\r\n");

            
            #line 720 "..\..\Views\CustomReports\Edit.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 720 "..\..\Views\CustomReports\Edit.cshtml"
                                                 if (User.CanView("CustomReports", "RelatedEntity"))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvRelatedEntity\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Related Entity\"");

WriteLiteral(">\r\n                                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 724 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                  Write(Html.LabelFor(model => model.RelatedEntity));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                ");

            
            #line 727 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.RelatedEntity, getHtmlAttributes("RelatedEntity")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                ");

            
            #line 728 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.RelatedEntity));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </div>\r\n           " +
"                                             </div>\r\n                           " +
"                         </div>\r\n");

            
            #line 732 "..\..\Views\CustomReports\Edit.cshtml"

                                                }
                                                else
                                                { 
            
            #line default
            #line hidden
            
            #line 735 "..\..\Views\CustomReports\Edit.cshtml"
                                             Write(Html.HiddenFor(model => model.RelatedEntity, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 735 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                ");

            
            #line 736 "..\..\Views\CustomReports\Edit.cshtml"
                                                 if (User.CanView("CustomReports", "ForeignKeyEntity"))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvForeignKeyEntity\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"ForeignKey Entity\"");

WriteLiteral(">\r\n                                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 740 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                  Write(Html.LabelFor(model => model.ForeignKeyEntity));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                ");

            
            #line 743 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.ForeignKeyEntity, getHtmlAttributes("ForeignKeyEntity")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                ");

            
            #line 744 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.ForeignKeyEntity));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </div>\r\n           " +
"                                             </div>\r\n                           " +
"                         </div>\r\n");

            
            #line 748 "..\..\Views\CustomReports\Edit.cshtml"

                                                }
                                                else
                                                { 
            
            #line default
            #line hidden
            
            #line 751 "..\..\Views\CustomReports\Edit.cshtml"
                                             Write(Html.HiddenFor(model => model.ForeignKeyEntity, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 751 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                   }

            
            #line default
            #line hidden
WriteLiteral("                                                ");

            
            #line 752 "..\..\Views\CustomReports\Edit.cshtml"
                                                 if (User.CanView("CustomReports", "RelationName"))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvRelationName\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Relation Name\"");

WriteLiteral(">\r\n                                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 756 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                  Write(Html.LabelFor(model => model.RelationName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                ");

            
            #line 759 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.RelationName, getHtmlAttributes("RelationName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                ");

            
            #line 760 "..\..\Views\CustomReports\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.RelationName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </div>\r\n           " +
"                                             </div>\r\n                           " +
"                         </div>\r\n");

            
            #line 764 "..\..\Views\CustomReports\Edit.cshtml"

                                                }
                                                else
                                                { 
            
            #line default
            #line hidden
            
            #line 767 "..\..\Views\CustomReports\Edit.cshtml"
                                             Write(Html.HiddenFor(model => model.RelationName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 767 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                               }

            
            #line default
            #line hidden
WriteLiteral("                                            </div>\r\n                             " +
"               <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                                                <table");

WriteLiteral(" id=\"tblrelationList\"");

WriteLiteral(" style=\"table-layout: fixed;\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                                                    <thead>\r\n                 " +
"                                       <tr>\r\n                                   " +
"                         <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Entity</th>\r\n                                                            <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(">Related Entity</th>\r\n                                                           " +
" <th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(@">Relation Name</th>
                                                        </tr>
                                                    </thead>
                                                    <tr></tr>
                                                </table>
                                            </div>
");

WriteLiteral("                                            ");

            
            #line 781 "..\..\Views\CustomReports\Edit.cshtml"
                                       Write(Html.Hidden("RelationsValues"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                </div>\r\n                           " +
" </div>\r\n                            ");

WriteLiteral("\r\n");

WriteLiteral("                            ");

            
            #line 787 "..\..\Views\CustomReports\Edit.cshtml"
                       Write(Html.Hidden("EntityValues"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                            ");

            
            #line 788 "..\..\Views\CustomReports\Edit.cshtml"
                       Write(Html.Hidden("OtherValues"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            ");

WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </d" +
"iv>\r\n");

            
            #line 793 "..\..\Views\CustomReports\Edit.cshtml"
                
            
            #line default
            #line hidden
            
            #line 793 "..\..\Views\CustomReports\Edit.cshtml"
           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 793 "..\..\Views\CustomReports\Edit.cshtml"
                                        ;
                
            
            #line default
            #line hidden
            
            #line 794 "..\..\Views\CustomReports\Edit.cshtml"
           Write(Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["CustomReportsParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm pull-left formbuttonfix" }));

            
            #line default
            #line hidden
            
            #line 794 "..\..\Views\CustomReports\Edit.cshtml"
                                                                                                                                                                                                
                if (EditPermission)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-left formbuttonfix\"");

WriteLiteral(" />\r\n");

WriteLiteral("                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Continue\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-left formbuttonfix\"");

WriteLiteral(" />\r\n");

            
            #line 799 "..\..\Views\CustomReports\Edit.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 801 "..\..\Views\CustomReports\Edit.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"ViewRepotsTab\"");

WriteLiteral(">\r\n\r\n        </div>\r\n    </div>\r\n    <!-- /tab-content --><br />\r\n    <select");

WriteLiteral(" id=\"FilterConditionHiddenType\"");

WriteLiteral(" style=\"display:none\"");

WriteLiteral(">\r\n        <option");

WriteLiteral(" value=\'1\'");

WriteLiteral(">Greater Than</option>\r\n        <option");

WriteLiteral(" value=\'2\'");

WriteLiteral(">Greater Than Or Equal To</option>\r\n        <option");

WriteLiteral(" value=\'3\'");

WriteLiteral(">Equals To</option>\r\n        <option");

WriteLiteral(" value=\'4\'");

WriteLiteral(">Does Not Equal To</option>\r\n        <option");

WriteLiteral(" value=\'5\'");

WriteLiteral(">Less Than</option>\r\n        <option");

WriteLiteral(" value=\'6\'");

WriteLiteral(">Less Than Or Equal To</option>\r\n        <option");

WriteLiteral(" value=\'3\'");

WriteLiteral(">Equals To</option>\r\n        <option");

WriteLiteral(" value=\'4\'");

WriteLiteral(">Does Not Equal To</option>\r\n        <option");

WriteLiteral(" value=\'7\'");

WriteLiteral(">Contains</option>\r\n        <option");

WriteLiteral(" value=\'8\'");

WriteLiteral(">Begins With</option>\r\n        <option");

WriteLiteral(" value=\'9\'");

WriteLiteral(">Ends With</option>\r\n        <option");

WriteLiteral(" value=\'10\'");

WriteLiteral(">Equals To</option>\r\n        <option");

WriteLiteral(" value=\'11\'");

WriteLiteral(@">Does Not Equal To</option>
    </select>
    <br />
</div>
<script>

    $(function () {
        var userAgent = navigator.userAgent.toLowerCase();
        // Figure out what browser is being used
        var browser = {
            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [])[1],
            safari: /webkit/.test(userAgent),
            opera: /opera/.test(userAgent),
            msie: /msie/.test(userAgent) && !/opera/.test(userAgent),
            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)
        };
        if (!browser.msie) {
            $('form').areYouSure();
        }
        else if (browser.version > 8.0) {
            $('form').areYouSure();
        }
    });
</script>


");

            
            #line 848 "..\..\Views\CustomReports\Edit.cshtml"
  
    var businessrule = User.businessrules.Where(p => p.EntityName == "CustomReports").ToList();

    if ((businessrule != null && businessrule.Count > 0))
    {

            
            #line default
            #line hidden
WriteLiteral(@"        <script>
            $(document).ready(function () {
                document.getElementById(""ErrMsg"").innerHTML = """";
                var flag = true;
                var dataurl = """";
                var form = """";
                var inlinecount = ""0"";

                form = $(""#frmCustomReports"").serialize();
                dataurl = """);

            
            #line 862 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Url.Action("businessruletype", "CustomReports", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral("\";\r\n                ApplyBusinessRuleOnPageLoad(dataurl, \"CustomReports\", false, " +
"\"ErrMsg\", form);\r\n                //business rules on inline associations\r\n\r\n   " +
"         });\r\n        </script>\r\n");

WriteLiteral(@"        <script>
            $(""form"").submit(function () {
                document.getElementById(""ErrMsg"").innerHTML = """";
                var flag = true;
                var dataurl = """";
                var form = """";
                var inlinecount = ""0"";
                form = $(""#frmCustomReports"").serialize();

                dataurl = """);

            
            #line 877 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Url.Action("businessruletype", "CustomReports", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral(@""";
                flag = ApplyBusinessRuleOnSubmit(dataurl, ""CustomReports"", false, ""ErrMsg"", form);

                //business rules on inline associations

                if (flag) {
                    SaveServerTime(this, true);
                    $('input:hidden[name=""hdncommand""]').val($(this.id).context.activeElement.value);
                    $(""form"").find(':input').removeAttr('disabled');
                }
                return flag;
            });
            $(document).ready(function () {
                $(""input[type='submit']"").on('blur', function () {
                    $(""input[type='submit']"").removeAttr('disabled');
                });

            });
        </script>
");

            
            #line 896 "..\..\Views\CustomReports\Edit.cshtml"
    }
    else
    {

            
            #line default
            #line hidden
WriteLiteral(@"        <script>
            $(""input[type='submit']"").click(function (event) {
                var $this = $(this);
                SaveServerTime(this);
                $('input:hidden[name=""hdncommand""]').val($this.val());
            });
        </script>
");

            
            #line 906 "..\..\Views\CustomReports\Edit.cshtml"
    }


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(">\r\n    $(document).ready(function () {\r\n        try {\r\n            focusOnControl" +
"(\'frmCustomReports\');\r\n        }\r\n        catch (ex) { }\r\n    });\r\n</script>\r\n<s" +
"cript>\r\n    function LoadTabReports(Url) {\r\n        $(\"#ViewRepotsTab\").html(\'\')" +
";\r\n        var ReportName = $(\"#ReportName\").val();\r\n\r\n        var EntityParm = " +
"$(\"#EntityName\").val();\r\n        var reportsType = $(\'#ReportTypeDD option:selec" +
"ted\').val();\r\n        var rowProp = \"\";\r\n        var ColProp = \"\";\r\n        var " +
"CrossTabPropertyVal = \"\";\r\n        var propertyParm = \"\";\r\n        if (reportsTy" +
"pe == \"Simple\") {\r\n            propertyParm = $(\"#ResultProperty\").val();\r\n     " +
"       if (propertyParm == \"\") {\r\n                alert(\"Please Add Property\")\r\n" +
"            }\r\n        }\r\n        if (reportsType == \"CrossTab\") {\r\n            " +
"rowProp = $(\'#CrossTabRowDD option:selected\').val();\r\n            ColProp = $(\'#" +
"CrossTabColumnDD option:selected\').val();\r\n            CrossTabPropertyVal = $(\'" +
"#CrossTabPropertyValues\').val();\r\n            var msg = \"\";\r\n            if (row" +
"Prop == \"\") {\r\n                msg += \"\\nPlease Select Row of Cross Tab \";\r\n    " +
"        }\r\n            if (ColProp == \"\") {\r\n                msg += \"\\nPlease Se" +
"lect Column of Cross Tab\";\r\n            }\r\n            if (CrossTabPropertyVal =" +
"= \"\") {\r\n                msg += \"\\nPlease add cross tab matrix\";\r\n            }\r" +
"\n            if (msg != \"\") {\r\n                alert(msg);\r\n                retu" +
"rn false;\r\n            }\r\n        }\r\n        if (EntityParm == \"\" && propertyPar" +
"m == \"\") {\r\n            $(\"#errorContainer\").show();\r\n            $(\"#errorsMsg\"" +
").html(\"Please add entity or property.\");\r\n            return false;\r\n        }\r" +
"\n        var QueryConditionValues = $(\"#QueryConditionValues\").val();\r\n        v" +
"ar RelationsValues = $(\"#RelationsValues\").val();\r\n        var url = Url + \'?ent" +
"ityVal=\' + EntityParm + \'&properties=\' + propertyParm + \'&FilterCondition=\' + Qu" +
"eryConditionValues + \"&relationsValues=\" + RelationsValues + \"&reportsType=\" + r" +
"eportsType + \"&rowProp=\" + rowProp + \"&ColProp=\" + ColProp + \"&CrossTabPropertyV" +
"al=\" + CrossTabPropertyVal + \"&ReportName=\" + ReportName;\r\n\r\n        if ($.trim(" +
"$(\"#ViewRepotsTab\").html()).length == 0) {\r\n            $(\"#ViewRepotsTab\").html" +
"(\'Please wait..\');\r\n            $(\"#ViewRepotsTab\").load(encodeURI(url));\r\n     " +
"   }\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n    }\r\n</scrip" +
"t>\r\n\r\n<script>\r\n\r\n    $(document).ready(function () {\r\n\r\n        $(\'#ReportTypeD" +
"D\').val(\'");

            
            #line 975 "..\..\Views\CustomReports\Edit.cshtml"
                           Write(Model.ReportType);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n        FillEntityGrid();\r\n        var rptType = \'");

            
            #line 977 "..\..\Views\CustomReports\Edit.cshtml"
                  Write(Model.ReportType);

            
            #line default
            #line hidden
WriteLiteral(@"'
        if (rptType == ""Simple"") {
            $(""#SimpleRpt"").show();
            $(""#CrossTabrpt"").hide();
            FillPropertyGrid();
        }
        if (rptType == ""CrossTab"") {
            FillCrossTab();
            $(""#SimpleRpt"").hide();
            $(""#CrossTabrpt"").show();
        }
        FillPropertyConditionGrid()
        FillRelationsGridForEdit();
    });
    //FillGrid
    function FillCrossTab() {
        var EntityValue = '");

            
            #line 993 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Model.EntityName);

            
            #line default
            #line hidden
WriteLiteral(@"';
        if (EntityValue == """")
            return false;
        var resEntity = EntityValue.split("","");
        for (i = 0; i < resEntity.length; i++) {
            var ValueText = $(""#EntityNameDD option[value='"" + resEntity[i] + ""']"").text();
            FillCrossPropertyDropDown(resEntity[i], ValueText);
            FillPropertyQueryConditionDropDown(resEntity[i], ValueText);
        }
        var listItems = """";
        for (i = 0; i < resEntity.length; i++) {
            var ValueText = $(""#EntityNameDD option[value='"" + resEntity[i] + ""']"").text();
            listItems += ""<option  value='"" + resEntity[i] + ""'>"" + ValueText + ""</option>"";
        }
        $('#AggregateEntityDD').append(listItems);

        var CrossPrpertyValue = '");

            
            #line 1009 "..\..\Views\CustomReports\Edit.cshtml"
                            Write(Model.CrossTabPropertyValues);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n        var resCrossProperty = CrossPrpertyValue.split(\",\");\r\n\r\n        //T_E" +
"xecutive-T_Executive.T_Salary-Sum;Count;Average;Min;Max\r\n        for (i = 0; i <" +
" resCrossProperty.length; i++) {\r\n            var resCrossPropertyval = resCross" +
"Property[i].split(\"-\");\r\n            var EntityCrossTabText = $(\"#AggregateEntit" +
"yDD option[value=\'\" + resCrossPropertyval[0] + \"\']\").text();\r\n            var En" +
"tityCrossTabValue = $(\"#AggregateEntityDD option[value=\'\" + resCrossPropertyval[" +
"0] + \"\']\").val();\r\n\r\n            var PropCrossTabText = $(\"#CrossTabRowDD option" +
"[value=\'\" + resCrossPropertyval[1] + \"\']\").text();\r\n            var PropCrossTab" +
"Value = $(\"#CrossTabRowDD option[value=\'\" + resCrossPropertyval[1] + \"\']\").val()" +
";\r\n\r\n            var FunCrossVal = resCrossPropertyval[2];\r\n            var FunC" +
"rossText = \"\";\r\n            if (FunCrossVal != \"\") {\r\n                var FunVal" +
"ue = FunCrossVal.split(\';\')\r\n                for (var k = 0; k < FunValue.length" +
"; k++) {\r\n                    FunCrossText += FunValue[k].toUpperCase() + \",\";\r\n" +
"                }\r\n            }\r\n\r\n            value = EntityCrossTabValue + \"-" +
"\" + PropCrossTabValue + \"-\" + FunCrossVal;\r\n            var str = \"<tr>\";\r\n     " +
"       str += \"<td>\" + EntityCrossTabText + \"</td>\";\r\n            str += \"<td>\" " +
"+ PropCrossTabText + \"</td>\";\r\n            str += \"<td>\" + FunCrossText + \"</td>" +
"\";\r\n            str += \"<td><i id=\\\"lblCrossTabName\" + EntityCrossTabValue.repla" +
"ce(\'.\', \'_\') + \"\\\" name=\\\"lblCrossTabName\" + EntityCrossTabValue.replace(\'.\', \'_" +
"\') + \"\\\"  onclick=\\\"deleteCrossTabPropertyRow(this,\'\" + EntityCrossTabValue + \"\'" +
",\'\" + value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n            $(\'#tblCrossT" +
"abList\').show();\r\n            $(\'#tblCrossTabList\').append(str) + \"</tr>\";\r\n    " +
"    }\r\n    }\r\n    function FillCrossPropertyDropDown(grdEntity, grdEntityDisp) {" +
"\r\n\r\n        var CrosstabRow = \'");

            
            #line 1042 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Model.CrossTabRow);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n        var CrosstabColumn = \'");

            
            #line 1043 "..\..\Views\CustomReports\Edit.cshtml"
                         Write(Model.CrossTabColumn);

            
            #line default
            #line hidden
WriteLiteral(@"';

        var entityName = """";
        var entityDisplayName = """";
        if (grdEntity == """")
            entityName = $('#EntityNameDD option:selected').val();
        else
            entityName = grdEntity;
        if (grdEntity == """")
            entityDisplayName = $('#EntityNameDD option:selected').text();
        else
            entityDisplayName = grdEntityDisp;
        $.ajax({
            url: '");

            
            #line 1056 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllProperties", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?entityName=' + entityName + '&entityDispayName=' + entityDisplayName,
            type: ""GET"",
            cache: false,
            async: false,
            success: function (result) {
                var listItems = """";
                for (var i = 0; i < result.length; i++) {
                    listItems += ""<option  value='"" + result[i].Key + ""'>"" + result[i].Value + ""</option>"";
                }
                $('#ResultPropertyDD').append(listItems);
                $('#CrossTabRowDD').append(listItems);
                $('#CrossTabColumnDD').append(listItems);
                $(""#CrossTabRowDD"").val(CrosstabRow);
                $(""#CrossTabColumnDD"").val(CrosstabColumn);
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
    }
    function FillEntityGrid() {
        $('#EntityNameDD').val("""");
        var EntityValue = '");

            
            #line 1077 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Model.EntityName);

            
            #line default
            #line hidden
WriteLiteral(@"'
        var res = EntityValue.split("","");
        $(""#EntityNameDD"").val(res[res.length - 1]);
        $('#tblEntityList').show();
        for (i = 0; i < res.length; i++) {
            var str = ""<tr>"";
            var ValueText = $(""#EntityNameDD option[value='"" + res[i] + ""']"").text();
            str += ""<td>"" + ValueText + ""</td>"";
            str += ""<td><i name=\""lblEntityName"" + res[i] + ""\"" onclick=\""deleteEntityRow(this,'"" + res[i] + ""');\"" class=\""fam-delete\""></i></td>"";
            $('#tblEntityList').append(str) + ""</tr>"";
        }
    }

    function FillPropertyGrid() {
        var EntityValue = '");

            
            #line 1091 "..\..\Views\CustomReports\Edit.cshtml"
                      Write(Model.EntityName);

            
            #line default
            #line hidden
WriteLiteral(@"';
        $('#GroupBy').prop('checked', false);
        if (EntityValue == """")
            return false;
        var resEntity = EntityValue.split("","");
        for (i = 0; i < resEntity.length; i++) {
            var ValueText = $(""#EntityNameDD option[value='"" + resEntity[i] + ""']"").text();
            FillPropertyDropDown(resEntity[i], ValueText);
            FillPropertyQueryConditionDropDown(resEntity[i], ValueText);
        }

        var PrpertyValue = '");

            
            #line 1102 "..\..\Views\CustomReports\Edit.cshtml"
                       Write(Model.ResultProperty);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n        var resProperty = PrpertyValue.split(\",\");\r\n        $(\'#tblPropertyLi" +
"st\').show();\r\n        for (i = 0; i < resProperty.length; i++) {\r\n            va" +
"r resPropertyval = resProperty[i].split(\"-\");\r\n            var propText = $(\"#Re" +
"sultPropertyDD option[value=\'\" + resPropertyval[0] + \"\']\").text();\r\n            " +
"var PropertyDispalyOrder = resPropertyval[1]\r\n            var propOrderByText = " +
"$(\"#OrderByDD option[value=\'\" + resPropertyval[2] + \"\']\").text();\r\n            v" +
"ar propGroupBy = resPropertyval[3];\r\n            var entNameId = resPropertyval[" +
"4];\r\n            var aggrValuestr = resPropertyval[5];\r\n            var aggrStr " +
"= \"\";\r\n            if (aggrValuestr != \"\") {\r\n                var aggrValue = ag" +
"grValuestr.split(\';\')\r\n                for (var k = 0; k < aggrValue.length; k++" +
") {\r\n                    aggrStr += aggrValue[k].toUpperCase() + \",\";\r\n         " +
"       }\r\n            }\r\n            value = resPropertyval[0] + \"-\" + PropertyD" +
"ispalyOrder + \"-\" + resPropertyval[2] + \"-\" + propGroupBy + \"-\" + entNameId + \"-" +
"\" + aggrValuestr;;\r\n            var str = \"<tr>\";\r\n            str += \"<td>\" + p" +
"ropText + \"</td>\";\r\n            //str += \"<td>\" + PropertyDispalyOrder + \"</td>\"" +
";\r\n            str += \"<td>\" + propOrderByText + \"</td>\";\r\n            str += \"<" +
"td>\" + propGroupBy + \"</td>\";\r\n            str += \"<td>\" + aggrStr + \"</td>\";\r\n " +
"           str += \"<td><i id=\\\"lblPropertyName\" + resPropertyval[0].replace(\'.\'," +
" \'_\') + \"\\\" name=\\\"lblPropertyName\" + resPropertyval[0].replace(\'.\', \'_\') + \"\\\" " +
"onclick=\\\"deletePropertyRow(this,\'\" + resPropertyval[0] + \"\',\'\" + value + \"\');\\\"" +
" class=\\\"fam-delete\\\"></i></td>\";\r\n            $(\'#tblPropertyList\').append(str)" +
" + \"</tr>\";\r\n        }\r\n\r\n    }\r\n    function FillPropertyConditionGrid() {\r\n   " +
"     var ConditionValue = \'");

            
            #line 1133 "..\..\Views\CustomReports\Edit.cshtml"
                         Write(Model.QueryConditionValues);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n        if (ConditionValue == \"\")\r\n            return false;\r\n        var res" +
"Condition = ConditionValue.split(\",\");\r\n        $(\'#tblFilterList\').show();\r\n   " +
"     for (i = 0; i < resCondition.length; i++) {\r\n            var resConditionva" +
"l = resCondition[i].split(\"-\");\r\n            var propText = $(\"#FilterPropertyDD" +
" option[value=\'\" + resConditionval[0] + \"\']\").text();\r\n            var propFilte" +
"rConditionByText = $(\"#FilterConditionHiddenType option[value=\'\" + resConditionv" +
"al[1] + \"\']\").text()\r\n            var propFilterType = $(\"#FilterTypeDD option[v" +
"alue=\'\" + resConditionval[2] + \"\']\").text();\r\n            var FilterValue = resC" +
"onditionval[3];\r\n            var LogicalOperatorType = \"\"\r\n            if (resCo" +
"nditionval[4] != \"0\")\r\n                LogicalOperatorType = $(\"#LogicalOperator" +
"DD option[value=\'\" + resConditionval[4] + \"\']\").text();\r\n\r\n            var value" +
" = resConditionval[0] + \"-\" + resConditionval[1] + \"-\" + resConditionval[2] + \"-" +
"\" + resConditionval[3] + \"-\" + resConditionval[4];\r\n            var str = \"<tr>\"" +
";\r\n            str += \"<td>\" + LogicalOperatorType + \"</td>\";\r\n            str +" +
"= \"<td>\" + propText + \"</td>\";\r\n            str += \"<td>\" + propFilterConditionB" +
"yText + \"</td>\";\r\n            str += \"<td>\" + propFilterType + \"</td>\";\r\n       " +
"     str += \"<td>\" + FilterValue + \"</td>\";\r\n            str += \"<td><i id=\\\"lbl" +
"Filter\" + resConditionval[0].replace(\'.\', \'_\') + \"\\\" name=\\\"lblFilter\" + resCond" +
"itionval[0].replace(\'.\', \'_\') + \"\\\" onclick=\\\"deleteFilterPropertyRow(this,\'\" + " +
"resConditionval[0] + \"\',\'\" + value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n  " +
"          $(\'#tblFilterList\').append(str) + \"</tr>\";\r\n        }\r\n    }\r\n    func" +
"tion FillRelationsGridForEdit() {\r\n        var RelationsValue = \'");

            
            #line 1160 "..\..\Views\CustomReports\Edit.cshtml"
                         Write(Model.RelationsValues);

            
            #line default
            #line hidden
WriteLiteral(@"';
        var resRelationSep = RelationsValue.split("","");

        $('#tblrelationList').show();
        for (i = 0; i < resRelationSep.length; i++) {
            var resRelation = resRelationSep[i].split('-');
            var sourceNameDis = $(""#EntityNameDD option[value='"" + resRelation[0] + ""']"").text();
            var sourceName = resRelation[0];
            var targetNameDisp = $(""#EntityNameDD option[value='"" + resRelation[1] + ""']"").text();
            var targetName = resRelation[1];
            var assocName = resRelation[2]
            var value = sourceName + ""-"" + targetName + ""-"" + assocName;


            var str = ""<tr>"";
            str += ""<td>"" + sourceNameDis + ""</td>"";
            str += ""<td>"" + targetNameDisp + ""</td>"";
            str += ""<td>"" + assocName + ""</td>"";
            str += ""<td style='display:none'><i id=\""lblrelationName"" + value + ""\"" name=\""lblrelationName"" + value + ""\"" onclick=\""deleterelationRow(this,'"" + value + ""');\"" class=\""fam-delete\""></i></td>"";
            $('#tblrelationList').append(str) + ""</tr>"";
        }
    }
    function FillRelationsGrid() {
        var entityName = $('#EntityNameDD option:selected').val();
        var entityDisplayName = $('#EntityNameDD option:selected').text();
        $.ajax({
            url: '");

            
            #line 1186 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllAssotions", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?entityName=\' + entityName,\r\n            type: \"GET\",\r\n            cache: fa" +
"lse,\r\n            async: false,\r\n            success: function (result) {\r\n     " +
"           $(\'#tblrelationList\').show();\r\n                for (i = 0; i < result" +
".length; i++) {\r\n                    var value = \"\";\r\n                    var so" +
"urceName = result[i].SourceEntity;\r\n                    var targetName = result[" +
"i].TargetEntity;\r\n                    var targetNameDisp = result[i].TargetEntit" +
"yDisp;\r\n                    var assocName = result[i].AssocName\r\n               " +
"     if ($(\"#RelationsValues\").val() != \"\") {\r\n                        var hdnPr" +
"operty = $(\"#RelationsValues\").val()\r\n                        value = sourceName" +
" + \"-\" + targetName + \"-\" + assocName;\r\n                        $(\"#RelationsVal" +
"ues\").val(hdnProperty + \",\" + sourceName + \"-\" + targetName + \"-\" + assocName);\r" +
"\n                    }\r\n                    else {\r\n                        valu" +
"e = sourceName + \"-\" + targetName + \"-\" + assocName;\r\n                        $(" +
"\"#RelationsValues\").val(value)\r\n                    }\r\n                    var s" +
"tr = \"<tr>\";\r\n                    str += \"<td>\" + entityDisplayName + \"</td>\";\r\n" +
"                    str += \"<td>\" + targetNameDisp + \"</td>\";\r\n                 " +
"   str += \"<td>\" + assocName + \"</td>\";\r\n                    str += \"<td style=\'" +
"display:none\'><i id=\\\"lblrelationName\" + value + \"\\\" name=\\\"lblrelationName\" + v" +
"alue + \"\\\" onclick=\\\"deleterelationRow(this,\'\" + value + \"\');\\\" class=\\\"fam-dele" +
"te\\\"></i></td>\";\r\n                    $(\'#tblrelationList\').append(str) + \"</tr>" +
"\";\r\n                }\r\n            },\r\n            error: function (jqXHR, textS" +
"tatus, errorThrown) {\r\n            }\r\n        });\r\n\r\n    }\r\n    function FillPro" +
"pertyDropDown(grdEntity, grdEntityDisp) {\r\n        var reportName = $(\'#ReportTy" +
"peDD option:selected\').val();\r\n        var entityName = \"\";\r\n        var entityD" +
"isplayName = \"\";\r\n        if (grdEntity == \"\")\r\n            entityName = $(\'#Ent" +
"ityNameDD option:selected\').val();\r\n        else\r\n            entityName = grdEn" +
"tity;\r\n        if (grdEntity == \"\")\r\n            entityDisplayName = $(\'#EntityN" +
"ameDD option:selected\').text();\r\n        else\r\n            entityDisplayName = g" +
"rdEntityDisp;\r\n        $.ajax({\r\n            url: \'");

            
            #line 1233 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllProperties", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?entityName=' + entityName + '&entityDispayName=' + entityDisplayName,
            type: ""GET"",
            cache: false,
            async: false,
            success: function (result) {
                var listItems = """";
                var PropObj = $('#ResultPropertyDD');
                for (var i = 0; i < result.length; i++) {
                    listItems += ""<option  value='"" + result[i].Key + ""'>"" + result[i].Value + ""</option>"";
                }
                $('#ResultPropertyDD').append(listItems);
                $('#CrossTabRowDD').append(listItems);
                $('#CrossTabColumnDD').append(listItems);
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
    }
    //QueryConditions
    function FillPropertyQueryConditionDropDown(grdEntity, grdEntityDisp) {
        var entityName = """";
        var entityDisplayName = """";
        if (grdEntity == """")
            entityName = $('#EntityNameDD option:selected').val();
        else
            entityName = grdEntity;
        if (grdEntity == """")
            entityDisplayName = $('#EntityNameDD option:selected').text();
        else
            entityDisplayName = grdEntityDisp;
        $.ajax({
            url: '");

            
            #line 1264 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllProperties", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?entityName=\' + entityName + \'&entityDispayName=\' + entityDisplayName,\r\n    " +
"        type: \"GET\",\r\n            cache: false,\r\n            async: false,\r\n    " +
"        success: function (result) {\r\n                var listItems = \"\";\r\n     " +
"           var PropObj = $(\'#FilterPropertyDD\');\r\n                for (var i = 0" +
"; i < result.length; i++) {\r\n                    listItems += \"<option  value=\'\"" +
" + result[i].Key + \"\'>\" + result[i].Value + \"</option>\";\r\n                }\r\n   " +
"             $(\'#FilterPropertyDD\').append(listItems);\r\n            },\r\n        " +
"    error: function (jqXHR, textStatus, errorThrown) {\r\n            }\r\n        }" +
");\r\n    }\r\n    function SetLogicalOperator() {\r\n        var Value = $(\'#LogicalO" +
"peratorDD option:selected\').val();\r\n    }\r\n    var ProRes = \"\";\r\n    var CrossPr" +
"oRes = \"\";\r\n    function SetReportType(obj) {\r\n        if (ProRes == \"\")\r\n      " +
"      ProRes = $(\'#ResultProperty\').val();\r\n        if (CrossProRes == \"\")\r\n    " +
"        CrossProRes = $(\'#CrossTabPropertyValues\').val();\r\n        var Value = $" +
"(\'#ReportTypeDD option:selected\').val();\r\n        if (Value == \"Simple\") {\r\n    " +
"        $(\"#SimpleRpt\").show();\r\n            $(\"#CrossTabrpt\").hide();\r\n        " +
"    $(\"#ReportType\").val(Value);\r\n            $(\'#CrossTabPropertyValues\').val(\'" +
"\');\r\n            $(\'#ResultProperty\').val(ProRes);\r\n\r\n        }\r\n        if (Val" +
"ue == \"CrossTab\") {\r\n            $(\"#SimpleRpt\").hide();\r\n            $(\"#CrossT" +
"abrpt\").show();\r\n            $(\"#ReportType\").val(Value);\r\n            $(\'#Cross" +
"TabPropertyValues\').val(CrossProRes);\r\n            $(\'#ResultProperty\').val(\'\');" +
"\r\n        }\r\n    }\r\n    //Entity Oprations\r\n    function SetEntityName(obj) {\r\n " +
"       if ($(\'#EntityNameDD option:selected\').val() == \"\")\r\n            return f" +
"alse;\r\n        var Value = $(\'#EntityNameDD option:selected\').val();\r\n        if" +
" (Value.length != 0) {\r\n\r\n            //$(\"#EntityName\").val(Value);\r\n        }\r" +
"\n        if (Value.length == 0) {\r\n            $(\"#EntityName\").val(\'\');\r\n      " +
"  }\r\n    }\r\n    function AddEntity(obj) {\r\n        var Value = $(\'#EntityNameDD " +
"option:selected\').val();\r\n        var ValueText = $(\'#EntityNameDD option:select" +
"ed\').text();\r\n\r\n        if (Value.length != 0) {\r\n            ////code for add e" +
"ntity in tamprary grid...........\r\n            if ($(\"#EntityName\").val().match(" +
"Value)) {\r\n                alert(\'Entity name is alrady added.\');\r\n             " +
"   return false;\r\n            }\r\n            if ($(\"#EntityName\").val() != \"\") {" +
"\r\n                FillPropertyDropDown(Value, ValueText);\r\n                FillP" +
"ropertyQueryConditionDropDown(Value, ValueText);\r\n                FillRelationsG" +
"rid()\r\n                var hdnEntity = $(\"#EntityName\").val()\r\n                $" +
"(\"#EntityName\").val(hdnEntity + \",\" + Value);\r\n            }\r\n            else {" +
"\r\n                $(\"#EntityName\").val(Value)\r\n                FillPropertyDropD" +
"own(Value, ValueText);\r\n                FillPropertyQueryConditionDropDown(Value" +
", ValueText);\r\n                FillRelationsGrid()\r\n            }\r\n            v" +
"ar reportName = $(\'#ReportTypeDD option:selected\').val();\r\n            if (repor" +
"tName == \"CrossTab\") {\r\n                var listItems = \"\";\r\n                lis" +
"tItems = \"<option  value=\'\" + Value + \"\'>\" + ValueText + \"</option>\";\r\n         " +
"       $(\'#AggregateEntityDD\').append(listItems);\r\n            }\r\n            va" +
"r str = \"<tr>\";\r\n            str += \"<td>\" + ValueText + \"</td>\";\r\n            s" +
"tr += \"<td><i name=\\\"lblEntityName\" + Value + \"\\\" onclick=\\\"deleteEntityRow(this" +
",\'\" + Value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n            $(\'#tblEntity" +
"List\').show();\r\n            $(\'#tblEntityList\').append(str) + \"</tr>\";\r\n        " +
"    //\r\n        }\r\n        if (Value.length == 0) {\r\n            alert(\'Please S" +
"elect Entity Name\');\r\n        }\r\n    }\r\n\r\n    function FillRelationsGrid() {\r\n  " +
"      var entityName = $(\'#EntityNameDD option:selected\').val();\r\n        var en" +
"tityDisplayName = $(\'#EntityNameDD option:selected\').text();\r\n        $.ajax({\r\n" +
"            url: \'");

            
            #line 1365 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllAssotions", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?entityName=\' + entityName,\r\n            type: \"GET\",\r\n            cache: fa" +
"lse,\r\n            async: false,\r\n            success: function (result) {\r\n     " +
"           $(\'#tblrelationList\').show();\r\n                for (i = 0; i < result" +
".length; i++) {\r\n                    var value = \"\";\r\n                    var so" +
"urceName = result[i].SourceEntity;\r\n                    var targetName = result[" +
"i].TargetEntity;\r\n                    var targetNameDisp = result[i].TargetEntit" +
"yDisp;\r\n                    var assocName = result[i].AssocName\r\n               " +
"     if ($(\"#RelationsValues\").val() != \"\") {\r\n                        var hdnPr" +
"operty = $(\"#RelationsValues\").val()\r\n                        value = sourceName" +
" + \"-\" + targetName + \"-\" + assocName;\r\n                        $(\"#RelationsVal" +
"ues\").val(hdnProperty + \",\" + sourceName + \"-\" + targetName + \"-\" + assocName);\r" +
"\n                    }\r\n                    else {\r\n                        valu" +
"e = sourceName + \"-\" + targetName + \"-\" + assocName;\r\n                        $(" +
"\"#RelationsValues\").val(value)\r\n                    }\r\n\r\n\r\n                    v" +
"ar str = \"<tr>\";\r\n                    str += \"<td>\" + entityDisplayName + \"</td>" +
"\";\r\n                    str += \"<td>\" + targetNameDisp + \"</td>\";\r\n             " +
"       str += \"<td>\" + assocName + \"</td>\";\r\n                    str += \"<td sty" +
"le=\'display:none\'><i id=\\\"lblrelationName\" + value + \"\\\" name=\\\"lblrelationName\"" +
" + value + \"\\\" onclick=\\\"deleterelationRow(this,\'\" + value + \"\');\\\" class=\\\"fam-" +
"delete\\\"></i></td>\";\r\n                    $(\'#tblrelationList\').append(str) + \"<" +
"/tr>\";\r\n                }\r\n            },\r\n            error: function (jqXHR, t" +
"extStatus, errorThrown) {\r\n            }\r\n        });\r\n\r\n    }\r\n    function del" +
"eteEntityRow(obj, entityName) {\r\n        deleteEntityGrid(entityName);\r\n        " +
"deleteRelationsGrid(entityName);\r\n        deleteEntityPropertiesGrid(entityName)" +
";\r\n        deleteFilterPropertiesGrid(entityName);\r\n        deleteCrossTabProper" +
"tiesGrid(entityName);\r\n        var obj_tr = $(obj).closest(\"tr\");\r\n        $(\"#\"" +
" + $(obj).attr(\"name\")).val(\"\");\r\n        obj_tr.remove();\r\n    }\r\n    function " +
"deleteEntityGrid(entityName) {\r\n        var _entityNameRow = $(\"#EntityName\").va" +
"l()\r\n        var res = _entityNameRow.split(\",\");\r\n        if (res.length > 1) {" +
"\r\n            if (res.indexOf(entityName) == 0) {\r\n                _entityNameRo" +
"w = _entityNameRow.replace(entityName + \",\", \'\');\r\n                deleteEntityP" +
"ropertiesDD(entityName)\r\n                deleteFilterPropertiesDD(entityName)\r\n " +
"           }\r\n            else {\r\n                _entityNameRow = _entityNameRo" +
"w.replace(\",\" + entityName, \'\');\r\n                deleteEntityPropertiesDD(entit" +
"yName)\r\n                deleteFilterPropertiesDD(entityName)\r\n\r\n            }\r\n " +
"       }\r\n        else {\r\n            _entityNameRow = _entityNameRow.replace(en" +
"tityName, \'\');\r\n            deleteEntityPropertiesDD(entityName)\r\n            de" +
"leteFilterPropertiesDD(entityName)\r\n\r\n        }\r\n        $(\"#EntityName\").val(_e" +
"ntityNameRow);\r\n    }\r\n    function deleteRelationsGrid(entityName) {\r\n        v" +
"ar _RelationsNameRow = $(\"#RelationsValues\").val();\r\n        if (_RelationsNameR" +
"ow == undefined || _RelationsNameRow == null || _RelationsNameRow == \"\")\r\n      " +
"      return false;\r\n        var res = _RelationsNameRow.split(\",\");\r\n        va" +
"r res1 = _RelationsNameRow.split(\",\");\r\n        for (var i = 0; i < res.length; " +
"i++) {\r\n            var relArr = res[i].split(\'-\');\r\n            for (var j = 0;" +
" j < relArr.length; j++) {\r\n                if (entityName == relArr[0]) {\r\n    " +
"                var itemtoRemove = res[i];\r\n                    res1.splice($.in" +
"Array(itemtoRemove, res1), 1);\r\n                    $(\"#lblrelationName\" + res[i" +
"]).click();\r\n                    break;\r\n                }\r\n            }\r\n     " +
"   }\r\n        var relResult = \"\";\r\n        if (res1.length > 1) {\r\n            f" +
"or (var k = 0; k < res1.length; k++) {\r\n                relResult += res1[k] + \"" +
",\";\r\n            }\r\n            relResult = relResult.substring(0, relResult.len" +
"gth - 1);\r\n            $(\"#RelationsValues\").val(relResult);\r\n        }\r\n       " +
" else {\r\n            $(\"#RelationsValues\").val(res1);\r\n        }\r\n    }\r\n    fun" +
"ction deleterelationRow(obj) {\r\n        var obj_tr = $(obj).closest(\"tr\");\r\n    " +
"    $(\"#\" + $(obj).attr(\"name\")).val(\"\");\r\n        obj_tr.remove();\r\n    }\r\n    " +
"function deleteEntityPropertiesGrid(entityName) {\r\n        var _ResultPropertyRo" +
"w = $(\"#ResultProperty\").val();\r\n        if (_ResultPropertyRow == undefined || " +
"_ResultPropertyRow == null || _ResultPropertyRow == \"\")\r\n            return fals" +
"e;\r\n        var res = _ResultPropertyRow.split(\",\");\r\n        var res1 = _Result" +
"PropertyRow.split(\",\");\r\n        for (i = 0; i < res.length; i++) {\r\n           " +
" var propArr = res[i].split(\'-\');\r\n            if (propArr[0].split(\'.\')[0] == e" +
"ntityName) {\r\n                var itemtoRemove = res[i];\r\n                res1.s" +
"plice($.inArray(itemtoRemove, res1), 1);\r\n                $(\"#lblPropertyName\" +" +
" propArr[0].replace(\'.\', \'_\')).click();\r\n            }\r\n        }\r\n        var p" +
"ropResult = \"\";\r\n        if (res1.length > 1) {\r\n            for (var k = 0; k <" +
" res1.length; k++) {\r\n                propResult += res1[k] + \",\";\r\n            " +
"}\r\n            propResult = propResult.substring(0, propResult.length - 1);\r\n   " +
"         $(\"#ResultProperty\").val(propResult);\r\n        }\r\n        else {\r\n     " +
"       $(\"#ResultProperty\").val(res1);\r\n        }\r\n\r\n    }\r\n    function deleteE" +
"ntityPropertiesDD(entityName) {\r\n        var reportName = $(\'#ReportTypeDD optio" +
"n:selected\').val();\r\n        if (reportName == \"Simple\") {\r\n            var resd" +
"d = $(\'#ResultPropertyDD option\')\r\n            for (var i = 0; i < resdd.length;" +
" i++) {\r\n                if (resdd[i].value.match(entityName)) {\r\n              " +
"      resdd[i].remove();\r\n                }\r\n            }\r\n            if ($(\'#" +
"ResultPropertyDD option\').length == 0) {\r\n                listItems = \"<option  " +
"value=\'\'>--Select--</option>\";\r\n                $(\'#ResultPropertyDD\').html(list" +
"Items);\r\n            }\r\n        }\r\n        if (reportName == \"CrossTab\") {\r\n    " +
"        var CrossRowdd = $(\'#CrossTabRowDD option\')\r\n            var CrossColdd " +
"= $(\'#CrossTabColumnDD option\')\r\n            for (var i = 0; i < CrossRowdd.leng" +
"th; i++) {\r\n                if (CrossRowdd[i].value.match(entityName)) {\r\n      " +
"              CrossRowdd[i].remove();\r\n                }\r\n            }\r\n       " +
"     for (var i = 0; i < CrossColdd.length; i++) {\r\n                if (CrossCol" +
"dd[i].value.match(entityName)) {\r\n                    CrossColdd[i].remove();\r\n " +
"               }\r\n            }\r\n            var CrossEntitydd = $(\'#AggregateEn" +
"tityDD option\')\r\n            for (var i = 0; i < CrossEntitydd.length; i++) {\r\n " +
"               if (CrossEntitydd[i].value.match(entityName)) {\r\n                " +
"    CrossEntitydd[i].remove();\r\n                }\r\n            }\r\n            if" +
" ($(\'#AggregateEntityDD option\').length == 0) {\r\n                $(\'#AggregateEn" +
"tityDD\').html(\"<option  value=\'\'>--Select--</option>\");\r\n            }\r\n        " +
"    var CrossPropdd = $(\'#AggregatePropertyDD option\')\r\n            for (var i =" +
" 0; i < CrossPropdd.length; i++) {\r\n                if (CrossPropdd[i].value.mat" +
"ch(entityName)) {\r\n                    CrossPropdd[i].remove();\r\n               " +
" }\r\n            }\r\n            if ($(\'#AggregatePropertyDD option\').length == 0)" +
" {\r\n                $(\'#AggregatePropertyDD\').html(\"<option  value=\'\'>--Select--" +
"</option>\");\r\n            }\r\n        }\r\n    }\r\n    function deleteFilterProperti" +
"esGrid(entityName) {\r\n        var _QueryConditionValuesRow = $(\"#QueryConditionV" +
"alues\").val();\r\n        var res = _QueryConditionValuesRow.split(\",\");\r\n        " +
"var res1 = _QueryConditionValuesRow.split(\",\");\r\n        for (i = 0; i < res.len" +
"gth; i++) {\r\n            var propArr = res[i].split(\'-\');\r\n            if (propA" +
"rr[0].split(\'.\')[0] == entityName) {\r\n                res1.splice($.inArray(item" +
"toRemove, res1), 1);\r\n                $(\"#lblFilter\" + propArr[0].replace(\'.\', \'" +
"_\')).click();\r\n            }\r\n        }\r\n        var propResult = \"\";\r\n        i" +
"f (res1.length > 1) {\r\n            for (var k = 0; k < res1.length; k++) {\r\n    " +
"            propResult += res1[k] + \",\";\r\n            }\r\n            propResult " +
"= propResult.substring(0, propResult.length - 1);\r\n            $(\"#QueryConditio" +
"nValues\").val(propResult);\r\n        }\r\n        else {\r\n            $(\"#QueryCond" +
"itionValues\").val(res1);\r\n        }\r\n    }\r\n    function deleteFilterPropertiesD" +
"D(entityName) {\r\n        var resdd = $(\'#FilterPropertyDD option\')\r\n        for " +
"(var i = 0; i < resdd.length; i++) {\r\n            if (resdd[i].value.match(entit" +
"yName)) {\r\n                resdd[i].remove();\r\n            }\r\n        }\r\n    }\r\n" +
"    //Property Oprations\r\n    function SetOrderBy(obj) {\r\n        var Value = $(" +
"\'#OrderByDD option:selected\').val();;\r\n        if (Value.length != 0) {\r\n       " +
"     $(\"#OrderBy\").val(Value);\r\n        }\r\n        if (Value.length == 0) {\r\n   " +
"         $(\"#OrderBy\").val(\'\');\r\n        }\r\n    }\r\n    function SetResultPropert" +
"y(obj) {\r\n        debugger;\r\n        var Value = $(\'#ResultPropertyDD option:sel" +
"ected\').val();\r\n        var ValueText = $(\'#ResultPropertyDD option:selected\').t" +
"ext();\r\n        if (Value.length != 0) {\r\n            if (Value.lastIndexOf(\'ID\'" +
") == Value.length - \'ID\'.length) {\r\n                listItems = \"<option value=\'" +
"Count\'>COUNT</option>\";\r\n                $(\'#AggregateDD\').html(listItems);\r\n   " +
"             $(\"#AggregateDD option:selected\").removeAttr(\"selected\");\r\n        " +
"        $(\"#AggregateDD\").multiselect(\'rebuild\');\r\n                return false;" +
"\r\n            }\r\n            if (Value != \"\") {\r\n                $.ajax({\r\n     " +
"               url: \'");

            
            #line 1598 "..\..\Views\CustomReports\Edit.cshtml"
                     Write(Url.Action("GetPropertyAggDataType", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?PropName=\' + Value,\r\n                    type: \"GET\",\r\n                    " +
"cache: false,\r\n                    async: false,\r\n                    success: f" +
"unction (result) {\r\n                        if (result == \"decimal\" || result ==" +
" \"double\" || result == \"int64\" || result == \"int32\") {\r\n                        " +
"    listItems = \"<option value=\'Sum\'>SUM</option>\" +\r\n                          " +
"              \"<option value=\'Count\'>COUNT</option>\" +\r\n                        " +
"                \"<option value=\'Average\'>AVERAGE</option>\" +\r\n                  " +
"                      \"<option value=\'Min\'>MIN</option>\" +\r\n                    " +
"                    \"<option value=\'Max\'>MAX</option>\";\r\n                       " +
" }\r\n                        else if (result == \"datetime\") {\r\n                  " +
"          listItems = \"<option value=\'Count\'>COUNT</option>\" +\r\n                " +
"                    \"<option value=\'Min\'>MIN</option>\" +\r\n                      " +
"              \"<option value=\'Max\'>MAX</option>\";\r\n                        }\r\n  " +
"                      else {\r\n                            listItems = \"<option v" +
"alue=\'Count\'>COUNT</option>\";\r\n                        }\r\n\r\n                    " +
"    $(\'#AggregateDD\').html(listItems);\r\n                        $(\"#AggregateDD " +
"option:selected\").removeAttr(\"selected\");\r\n                        $(\"#Aggregate" +
"DD\").multiselect(\'rebuild\');\r\n\r\n                    },\r\n                    erro" +
"r: function (jqXHR, textStatus, errorThrown) {\r\n                    }\r\n\r\n       " +
"         });\r\n            }\r\n            else {\r\n                listItems = \"<o" +
"ption  value=\'\'>None</option>\";\r\n                $(\'#AggregateDD\').html(listItem" +
"s);\r\n                $(\"#AggregateDD option:selected\").removeAttr(\"selected\");\r\n" +
"                $(\"#AggregateDD\").multiselect(\'rebuild\');\r\n            }\r\n      " +
"  }\r\n        if (Value.length == 0) {\r\n            listItems = \"<option  value=\'" +
"\'>None</option>\";\r\n            $(\'#AggregateDD\').html(listItems);\r\n            $" +
"(\"#AggregateDD option:selected\").removeAttr(\"selected\");\r\n            $(\"#Aggreg" +
"ateDD\").multiselect(\'rebuild\');\r\n        }\r\n    }\r\n    function AddProperty(obj)" +
" {\r\n        var propValue = $(\'#ResultPropertyDD option:selected\').val();\r\n     " +
"   var propText = $(\'#ResultPropertyDD option:selected\').text();\r\n\r\n        var " +
"propOrderBy = $(\'#OrderByDD option:selected\').val();\r\n        var propOrderByTex" +
"t = $(\'#OrderByDD option:selected\').text();\r\n\r\n        var propGroupBy = $(\'#Gro" +
"upBy\').prop(\'checked\')\r\n\r\n\r\n        var AggraOpval = $(\"#AggregateDD option:sele" +
"cted\").map(function () {\r\n            return $(this).val();\r\n        }).get().jo" +
"in();\r\n        var AggraOpText = $(\"#AggregateDD option:selected\").map(function " +
"() {\r\n            return $(this).text();\r\n        }).get().join();\r\n        if (" +
"AggraOpval != \"\") {\r\n            AggraOpval = AggraOpval.replaceAll(\",\", \";\");\r\n" +
"        }\r\n\r\n        var PropertyDispalyOrder = $(\'#ColumnOrder\').text();\r\n     " +
"   //if ($(\"#ResultProperty\").val().match(propValue)) {\r\n        //    alert(\'Pr" +
"operty name is alrady added.\');\r\n        //    return false;\r\n        //}\r\n     " +
"   if (PropertyDispalyOrder == \"\")\r\n            PropertyDispalyOrder = 0\r\n      " +
"  if (propGroupBy == true)\r\n            PropertyDispalyOrder = \'\';\r\n        debu" +
"gger;\r\n        if (propValue.length != 0) {\r\n            //code for add property" +
" in tamprary grid...........\r\n            if ($(\"#ResultProperty\").val().match(p" +
"ropValue)) {\r\n                alert(\'Property Name alrady added.\');\r\n           " +
"     return false;\r\n            }\r\n            var value = \"\";\r\n            if (" +
"$(\"#ResultProperty\").val() != \"\") {\r\n                var entName = propValue.spl" +
"it(\'.\')[0];\r\n                var entNameId = entName + \".\" + \"Id\";\r\n            " +
"    var hdnProperty = $(\"#ResultProperty\").val()\r\n                value = propVa" +
"lue + \"-\" + PropertyDispalyOrder + \"-\" + propOrderBy + \"-\" + propGroupBy + \"-\" +" +
" entNameId + \"-\" + AggraOpval;\r\n                $(\"#ResultProperty\").val(hdnProp" +
"erty + \",\" + propValue + \"-\" + PropertyDispalyOrder + \"-\" + propOrderBy + \"-\" + " +
"propGroupBy + \"-\" + entNameId + \"-\" + AggraOpval);\r\n            }\r\n            e" +
"lse {\r\n                var entName = propValue.split(\'.\')[0];\r\n                v" +
"ar entNameId = entName + \".\" + \"Id\";\r\n                value = propValue + \"-\" + " +
"PropertyDispalyOrder + \"-\" + propOrderBy + \"-\" + propGroupBy + \"-\" + entNameId +" +
" \"-\" + AggraOpval;\r\n                $(\"#ResultProperty\").val(value)\r\n           " +
" }\r\n\r\n            var str = \"<tr>\";\r\n            str += \"<td>\" + propText + \"</t" +
"d>\";\r\n            //str += \"<td>\" + PropertyDispalyOrder + \"</td>\";\r\n           " +
" str += \"<td>\" + propOrderByText + \"</td>\";\r\n            str += \"<td>\" + propGro" +
"upBy + \"</td>\";\r\n            str += \"<td>\" + AggraOpText + \"</td>\";\r\n           " +
" str += \"<td><i id=\\\"lblPropertyName\" + propValue.replace(\'.\', \'_\') + \"\\\" name=\\" +
"\"lblPropertyName\" + propValue.replace(\'.\', \'_\') + \"\\\"  onclick=\\\"deletePropertyR" +
"ow(this,\'\" + propValue + \"\',\'\" + value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";" +
"\r\n\r\n            $(\'#tblPropertyList\').show();\r\n            $(\'#tblPropertyList\')" +
".append(str) + \"</tr>\";\r\n            $(\'#ResultPropertyDD\').val(\"\");\r\n          " +
"  $(\'#GroupBy\').prop(\'checked\', false);\r\n            $(\'#OrderByDD\').val(\"\");\r\n " +
"           listItems = \"<option  value=\'\'>None</option>\";\r\n            $(\'#Aggre" +
"gateDD\').html(listItems);\r\n            $(\"#AggregateDD option:selected\").removeA" +
"ttr(\"selected\");\r\n            $(\"#AggregateDD\").multiselect(\'rebuild\');\r\n\r\n     " +
"       //\r\n        }\r\n        if (propValue.length == 0) {\r\n            alert(\'P" +
"lease Select Property Name\');\r\n        }\r\n    }\r\n    function GroupByClick(obj) " +
"{\r\n        if ($(obj).is(\':checked\')) {\r\n            $(\"#AggregateDD\").val();\r\n " +
"           $(\"#dvAggregateFunctionSimple\").css(\"visibility\", \"hidden\");\r\n       " +
"     $(\"#AggregateDD option:selected\").removeAttr(\"selected\");\r\n            $(\"#" +
"AggregateDD\").multiselect(\'rebuild\');\r\n        } else {\r\n            $(\"#dvAggre" +
"gateFunctionSimple\").css(\"visibility\", \"visible\");\r\n        }\r\n    }\r\n    functi" +
"on deletePropertyRow(obj, property, value) {\r\n        deleteProperty(property, v" +
"alue);\r\n        var obj_tr = $(obj).closest(\"tr\");\r\n        $(\"#\" + $(obj).attr(" +
"\"name\")).val(\"\");\r\n        obj_tr.remove();\r\n    }\r\n    function deleteProperty(" +
"property, value) {\r\n        var _propertyNameRow = $(\"#ResultProperty\").val()\r\n " +
"       var res = _propertyNameRow.split(\",\");\r\n        if (res.length > 1) {\r\n  " +
"          if (res.indexOf(value) == 0) {\r\n                _propertyNameRow = _pr" +
"opertyNameRow.replace(value + \",\", \'\');\r\n            }\r\n            else {\r\n    " +
"            _propertyNameRow = _propertyNameRow.replace(\",\" + value, \'\');\r\n     " +
"       }\r\n        }\r\n        else {\r\n            _propertyNameRow = _propertyNam" +
"eRow.replace(value, \'\');\r\n\r\n        }\r\n        $(\"#ResultProperty\").val(_propert" +
"yNameRow);\r\n\r\n    }\r\n    //\r\n    function SetCrossTabRow(obj) {\r\n        var Val" +
"ue = $(\'#CrossTabRowDD option:selected\').val();;\r\n        if (Value.length != 0)" +
" {\r\n            $(\"#CrossTabRow\").val(Value);\r\n        }\r\n        if (Value.leng" +
"th == 0) {\r\n            $(\"#CrossTabRow\").val(\'\');\r\n        }\r\n    }\r\n    functi" +
"on SetCrossTabColumn(obj) {\r\n        var Value = $(\'#CrossTabColumnDD option:sel" +
"ected\').val();;\r\n        if (Value.length != 0) {\r\n            $(\"#CrossTabColum" +
"n\").val(Value);\r\n        }\r\n        if (Value.length == 0) {\r\n            $(\"#Cr" +
"ossTabColumn\").val(\'\');\r\n        }\r\n    }\r\n    function SetAggregateEntity(obj) " +
"{\r\n        var Value = $(\'#AggregateEntityDD option:selected\').val();\r\n        i" +
"f (Value.length != 0) {\r\n            FillCrossTabProperty();\r\n        }\r\n       " +
" if (Value.length == 0) {\r\n            $(\'#AggregatePropertyDD\').html(\'\');\r\n    " +
"        $(\'#AggregatePropertyDD\').html(\"<option  value=\'\'>--Select--</option>\");" +
"\r\n\r\n        }\r\n    }\r\n    function SetAggregateProperty(obj) {\r\n\r\n        var Va" +
"lue = $(\'#AggregatePropertyDD option:selected\').val();\r\n        var ValueText = " +
"$(\'#AggregatePropertyDD option:selected\').text();\r\n\r\n        if (Value.length !=" +
" 0) {\r\n            if (Value.lastIndexOf(\'ID\') == Value.length - \'ID\'.length) {\r" +
"\n                listItems = \"<option value=\'Count\'>COUNT</option>\";\r\n          " +
"      $(\'#AggregateFunctionDD\').html(listItems);\r\n                $(\"#AggregateF" +
"unctionDD option:selected\").removeAttr(\"selected\");\r\n                $(\"#Aggrega" +
"teFunctionDD\").multiselect(\'rebuild\');\r\n                return false;\r\n         " +
"   }\r\n            if (Value != \"\") {\r\n                $.ajax({\r\n                " +
"    url: \'");

            
            #line 1797 "..\..\Views\CustomReports\Edit.cshtml"
                     Write(Url.Action("GetPropertyAggDataType", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?PropName=\' + Value,\r\n                    type: \"GET\",\r\n                    " +
"cache: false,\r\n                    async: false,\r\n                    success: f" +
"unction (result) {\r\n                        if (result == \"decimal\" || result ==" +
" \"double\" || result == \"int64\" || result == \"int32\") {\r\n                        " +
"    listItems = \"<option value=\'Sum\'>SUM</option>\" +\r\n                          " +
"              \"<option value=\'Count\'>COUNT</option>\" +\r\n                        " +
"                \"<option value=\'Average\'>AVERAGE</option>\" +\r\n                  " +
"                      \"<option value=\'Min\'>MIN</option>\" +\r\n                    " +
"                    \"<option value=\'Max\'>MAX</option>\";\r\n                       " +
" }\r\n                        else if (result == \"datetime\") {\r\n                  " +
"          listItems = \"<option value=\'Count\'>COUNT</option>\" +\r\n                " +
"                    \"<option value=\'Min\'>MIN</option>\" +\r\n                      " +
"              \"<option value=\'Max\'>MAX</option>\";\r\n                        }\r\n  " +
"                      else {\r\n                            listItems = \"<option v" +
"alue=\'Count\'>COUNT</option>\";\r\n                        }\r\n\r\n                    " +
"    $(\'#AggregateFunctionDD\').html(listItems);\r\n                        $(\"#Aggr" +
"egateFunctionDD option:selected\").removeAttr(\"selected\");\r\n                     " +
"   $(\"#AggregateFunctionDD\").multiselect(\'rebuild\');\r\n\r\n                    },\r\n" +
"                    error: function (jqXHR, textStatus, errorThrown) {\r\n        " +
"            }\r\n\r\n                });\r\n            }\r\n            else {\r\n       " +
"         listItems = \"<option  value=\'\'>None</option>\";\r\n                $(\'#Agg" +
"regateFunctionDD\').html(listItems);\r\n                $(\"#AggregateFunctionDD opt" +
"ion:selected\").removeAttr(\"selected\");\r\n                $(\"#AggregateFunctionDD\"" +
").multiselect(\'rebuild\');\r\n            }\r\n        }\r\n        if (Value.length ==" +
" 0) {\r\n            listItems = \"<option  value=\'\'>None</option>\";\r\n            $" +
"(\'#AggregateFunctionDD\').html(listItems);\r\n            $(\"#AggregateFunctionDD o" +
"ption:selected\").removeAttr(\"selected\");\r\n            $(\"#AggregateFunctionDD\")." +
"multiselect(\'rebuild\');\r\n        }\r\n    }\r\n    function SetAggregateFunction(obj" +
") {\r\n        var Value = $(\'#AggregateFunctionDD option:selected\').val();;\r\n    " +
"    if (Value.length != 0) {\r\n            $(\"#AggregateFunction\").val(Value);\r\n " +
"       }\r\n        if (Value.length == 0) {\r\n            $(\"#AggregateFunction\")." +
"val(\'\');\r\n        }\r\n    }\r\n    function SetFilterProperty(obj) {\r\n        var F" +
"ilterProperty = $(\'#FilterPropertyDD option:selected\').val();\r\n        var listI" +
"tems = \"\";\r\n        if (FilterProperty.lastIndexOf(\'ID\') == FilterProperty.lengt" +
"h - \'ID\'.length) {\r\n            listItems = \"<option value=\'10\'>Equals To</optio" +
"n>\" +\r\n                       \"<option value=\'11\'>Does Not Equal To</option>\" +\r" +
"\n                       \"<option value=\'7\'>Contains</option>\" +\r\n               " +
"        \"<option value=\'8\'>Begins With</option>\" +\r\n                       \"<opt" +
"ion value=\'9\'>Ends With</option>\";\r\n            $(\'#FilterConditionDD\').html(lis" +
"tItems);\r\n            return false;\r\n        }\r\n        if (FilterProperty != \"\"" +
") {\r\n            $.ajax({\r\n                url: \'");

            
            #line 1865 "..\..\Views\CustomReports\Edit.cshtml"
                 Write(Url.Action("GetPropertyDataType", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?FilterPropertyName=\' + FilterProperty,\r\n                type: \"GET\",\r\n     " +
"           cache: false,\r\n                async: false,\r\n                success" +
": function (result) {\r\n\r\n                    if (result == \"nonstring\") {\r\n     " +
"                   listItems = \"<option value=\'3\'>Equals To</option>\"\r\n         " +
"                   + \"<option value=\'1\'>Greater Than</option>\" +\r\n              " +
"           \"<option value=\'2\'>Greater Than Or Equal To</option>\" +\r\n            " +
"            \"<option value=\'4\'>Does Not Equal To</option>\" +\r\n                  " +
"      \"<option value=\'5\'>Less Than</option>\" +\r\n                        \"<option" +
" value=\'6\'>Less Than Or Equal To</option>\";\r\n                    }\r\n            " +
"        else if (result == \"string\") {\r\n                        listItems = \"<op" +
"tion value=\'10\'>Equals To</option>\" +\r\n                        \"<option value=\'1" +
"1\'>Does Not Equal To</option>\" +\r\n                        \"<option value=\'7\'>Con" +
"tains</option>\" +\r\n                        \"<option value=\'8\'>Begins With</optio" +
"n>\" +\r\n                        \"<option value=\'9\'>Ends With</option>\";\r\n        " +
"            }\r\n                    $(\'#FilterConditionDD\').html(listItems);\r\n   " +
"             },\r\n                error: function (jqXHR, textStatus, errorThrown" +
") {\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n          " +
"  listItems = \"<option  value=\'\'>--Select--</option>\";\r\n            $(\'#FilterCo" +
"nditionDD\').html(listItems);\r\n        }\r\n    }\r\n    function SetFilterCondition(" +
"obj) {\r\n        var Value = $(\'#FilterConditionDD option:selected\').val();;\r\n   " +
"     if (Value.length != 0) {\r\n            $(\"#FilterCondition\").val(Value);\r\n  " +
"      }\r\n        if (Value.length == 0) {\r\n            $(\"#FilterCondition\").val" +
"(\'\');\r\n        }\r\n    }\r\n\r\n    function SetFilterType(obj) {\r\n        var Value " +
"= $(\'#FilterTypeDD option:selected\').val();;\r\n        if (Value.length != 0) {\r\n" +
"            $(\"#FilterType\").val(Value);\r\n        }\r\n        if (Value.length ==" +
" 0) {\r\n            $(\"#FilterType\").val(\'\');\r\n        }\r\n    }\r\n    function Set" +
"SelectValueFromList(obj) {\r\n        var Value = $(\'#SelectValueFromListDD option" +
":selected\').val();;\r\n        if (Value.length != 0) {\r\n            $(\"#SelectVal" +
"ueFromList\").val(Value);\r\n        }\r\n        if (Value.length == 0) {\r\n         " +
"   $(\"#SelectValueFromList\").val(\'\');\r\n        }\r\n    }\r\n\r\n    function SetSelec" +
"tProperty(obj) {\r\n        var Value = $(\'#SelectPropertyDD option:selected\').val" +
"();;\r\n        if (Value.length != 0) {\r\n            $(\"#SelectProperty\").val(Val" +
"ue);\r\n        }\r\n        if (Value.length == 0) {\r\n            $(\"#SelectPropert" +
"y\").val(\'\');\r\n        }\r\n    }\r\n    function AddQueryCondition() {\r\n        if (" +
"$(\"#ResultProperty\").val() == \"\") {\r\n            alert(\"please add result proper" +
"ty\")\r\n            return false;\r\n        }\r\n\r\n        var propValue = $(\'#Filter" +
"PropertyDD option:selected\').val();\r\n        var propText = $(\'#FilterPropertyDD" +
" option:selected\').text();\r\n\r\n        var propFilterCondition = $(\'#FilterCondit" +
"ionDD option:selected\').val();\r\n        var propFilterConditionByText = $(\'#Filt" +
"erConditionDD option:selected\').text();\r\n\r\n        var propFilterType = $(\'#Filt" +
"erTypeDD option:selected\').val();\r\n        var propFilterTypeText = $(\'#FilterTy" +
"peDD option:selected\').text();\r\n\r\n        var LogicalOperatorType = $(\'#LogicalO" +
"peratorDD option:selected\').val();\r\n\r\n        var FilterValue = $(\'#FilterValue\'" +
").val();\r\n\r\n\r\n\r\n        if (propValue.length != 0) {\r\n            //code for add" +
" property in tamprary grid...........\r\n            var value = \"\";\r\n            " +
"if ($(\"#QueryConditionValues\").val() != \"\") {\r\n                var hdnProperty =" +
" $(\"#QueryConditionValues\").val();\r\n                value = propValue + \"-\" + pr" +
"opFilterCondition + \"-\" + propFilterType + \"-\" + FilterValue + \"-\" + LogicalOper" +
"atorType;\r\n                $(\"#QueryConditionValues\").val(hdnProperty + \",\" + pr" +
"opValue + \"-\" + propFilterCondition + \"-\" + propFilterType + \"-\" + FilterValue +" +
" \"-\" + LogicalOperatorType);\r\n            }\r\n            else {\r\n               " +
" LogicalOperatorType = \"\";\r\n                value = propValue + \"-\" + propFilter" +
"Condition + \"-\" + propFilterType + \"-\" + FilterValue + \"-0\";\r\n                $(" +
"\"#QueryConditionValues\").val(value)\r\n            }\r\n\r\n            var str = \"<tr" +
">\";\r\n            str += \"<td>\" + LogicalOperatorType + \"</td>\";\r\n            str" +
" += \"<td>\" + propText + \"</td>\";\r\n            str += \"<td>\" + propFilterConditio" +
"nByText + \"</td>\";\r\n            str += \"<td>\" + propFilterType + \"</td>\";\r\n     " +
"       str += \"<td>\" + FilterValue + \"</td>\";\r\n            str += \"<td><i id=\\\"l" +
"blFilter\" + propValue.replace(\'.\', \'_\') + \"\\\" name=\\\"lblFilter\" + propValue.repl" +
"ace(\'.\', \'_\') + \"\\\" onclick=\\\"deleteFilterPropertyRow(this,\'\" + propValue + \"\',\'" +
"\" + value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n            $(\'#tblFilterLi" +
"st\').show();\r\n            $(\'#tblFilterList\').append(str) + \"</tr>\";\r\n\r\n        " +
"    $(\'#FilterPropertyDD\').val(\"\");\r\n            $(\'#FilterConditionDD\').val(3);" +
"\r\n            $(\'#FilterTypeDD\').val(\"Value\");\r\n            $(\'#FilterValue\').va" +
"l(\"\");\r\n            //\r\n        }\r\n        if (propValue.length == 0) {\r\n       " +
"     alert(\'Please Select Filter Property Name\');\r\n        }\r\n\r\n    }\r\n    funct" +
"ion deleteFilterPropertyRow(obj, property, value) {\r\n        deleteFilterPropert" +
"y(property, value);\r\n        var obj_tr = $(obj).closest(\"tr\");\r\n        $(\"#\" +" +
" $(obj).attr(\"name\")).val(\"\");\r\n        obj_tr.remove();\r\n    }\r\n    function de" +
"leteFilterProperty(property, value) {\r\n        var _propertyNameRow = $(\"#QueryC" +
"onditionValues\").val()\r\n        var res = _propertyNameRow.split(\",\");\r\n        " +
"if (res.length > 1) {\r\n            if (res.indexOf(value) == 0) {\r\n             " +
"   _propertyNameRow = _propertyNameRow.replace(value + \",\", \'\');\r\n            }\r" +
"\n            else {\r\n                _propertyNameRow = _propertyNameRow.replace" +
"(\",\" + value, \'\');\r\n            }\r\n        }\r\n        else {\r\n            _prope" +
"rtyNameRow = _propertyNameRow.replace(value, \'\');\r\n\r\n        }\r\n        $(\"#Quer" +
"yConditionValues\").val(_propertyNameRow);\r\n\r\n    }\r\n    //\r\n</script>\r\n");

WriteLiteral("\r\n<script>\r\n    function AddCrossTab(obj) {\r\n\r\n        var EntityCrossTabValue = " +
"$(\'#AggregateEntityDD option:selected\').val();\r\n        var EntityCrossTabText =" +
" $(\'#AggregateEntityDD option:selected\').text();\r\n\r\n        var PropCrossTabValu" +
"e = $(\'#AggregatePropertyDD option:selected\').val();\r\n        var PropCrossTabTe" +
"xt = $(\'#AggregatePropertyDD option:selected\').text();\r\n\r\n        var FunCrossVa" +
"l = $(\"#AggregateFunctionDD option:selected\").map(function () {\r\n            ret" +
"urn $(this).val();\r\n        }).get().join();\r\n\r\n        var FunCrossText = $(\"#A" +
"ggregateFunctionDD option:selected\").map(function () {\r\n            return $(thi" +
"s).text();\r\n        }).get().join();\r\n        if (FunCrossVal == \"\") {\r\n        " +
"    alert(\'Please Select Corss Tab Function\');\r\n            return false;\r\n     " +
"   }\r\n        if (FunCrossVal != \"\") {\r\n            FunCrossVal = FunCrossVal.re" +
"placeAll(\",\", \";\");\r\n        }\r\n\r\n        if (EntityCrossTabValue.length != 0) {" +
"\r\n            //code for add Cross Tab property in tamprary grid...........\r\n   " +
"         //if ($(\"#CrossTabPropertyValues\").val().match(EntityCrossTabValue)) {\r" +
"\n            //    alert(\'CrossTab Value alrady added.\');\r\n            //    ret" +
"urn false;\r\n            //}\r\n            var value = \"\";\r\n            if ($(\"#Cr" +
"ossTabPropertyValues\").val() != \"\") {\r\n\r\n                var hdnCrossTab = $(\"#C" +
"rossTabPropertyValues\").val()\r\n                value = EntityCrossTabValue + \"-\"" +
" + PropCrossTabValue + \"-\" + FunCrossVal;\r\n                $(\"#CrossTabPropertyV" +
"alues\").val(hdnCrossTab + \",\" + EntityCrossTabValue + \"-\" + PropCrossTabValue + " +
"\"-\" + FunCrossVal);\r\n            }\r\n            else {\r\n\r\n                value " +
"= EntityCrossTabValue + \"-\" + PropCrossTabValue + \"-\" + FunCrossVal;\r\n          " +
"      $(\"#CrossTabPropertyValues\").val(value)\r\n            }\r\n\r\n            var " +
"str = \"<tr>\";\r\n            str += \"<td>\" + EntityCrossTabText + \"</td>\";\r\n      " +
"      str += \"<td>\" + PropCrossTabText + \"</td>\";\r\n            str += \"<td>\" + F" +
"unCrossText + \"</td>\";\r\n            str += \"<td><i id=\\\"lblCrossTabName\" + Entit" +
"yCrossTabValue.replace(\'.\', \'_\') + \"\\\" name=\\\"lblCrossTabName\" + EntityCrossTabV" +
"alue.replace(\'.\', \'_\') + \"\\\"  onclick=\\\"deleteCrossTabPropertyRow(this,\'\" + Enti" +
"tyCrossTabValue + \"\',\'\" + value + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n     " +
"       $(\'#tblCrossTabList\').show();\r\n            $(\'#tblCrossTabList\').append(s" +
"tr) + \"</tr>\";\r\n\r\n            $(\'#AggregateEntityDD\').val(\"\");\r\n            $(\'#" +
"AggregatePropertyDD\').val(\"\");\r\n            $(\'#AggregatePropertyDD\').html(\"<opt" +
"ion  value=\'\'>--Select--</option>\");\r\n\r\n            listItems = \"<option  value=" +
"\'\'>None</option>\";\r\n            $(\'#AggregateFunctionDD\').html(listItems);\r\n    " +
"        $(\"#AggregateFunctionDD option:selected\").removeAttr(\"selected\");\r\n     " +
"       $(\"#AggregateFunctionDD\").multiselect(\'rebuild\');\r\n        }\r\n        if " +
"(EntityCrossTabValue.length == 0) {\r\n            alert(\'Please Select Corss Tab " +
"Property\');\r\n        }\r\n    }\r\n    function deleteCrossTabPropertyRow(obj, prope" +
"rty, value) {\r\n        deleteCrossTabProperty(property, value);\r\n        var obj" +
"_tr = $(obj).closest(\"tr\");\r\n        $(\"#\" + $(obj).attr(\"name\")).val(\"\");\r\n    " +
"    obj_tr.remove();\r\n    }\r\n    function deleteCrossTabProperty(property, value" +
") {\r\n        var _propertyNameRow = $(\"#CrossTabPropertyValues\").val()\r\n        " +
"var res = _propertyNameRow.split(\",\");\r\n        if (res.length > 1) {\r\n         " +
"   if (res.indexOf(value) == 0) {\r\n                _propertyNameRow = _propertyN" +
"ameRow.replace(value + \",\", \'\');\r\n            }\r\n            else {\r\n           " +
"     _propertyNameRow = _propertyNameRow.replace(\",\" + value, \'\');\r\n            " +
"}\r\n        }\r\n        else {\r\n            _propertyNameRow = _propertyNameRow.re" +
"place(value, \'\');\r\n\r\n        }\r\n        $(\"#CrossTabPropertyValues\").val(_proper" +
"tyNameRow);\r\n\r\n    }\r\n    function deleteCrossTabPropertiesGrid(entityName) {\r\n " +
"       var _ResultPropertyRow = $(\"#CrossTabPropertyValues\").val();\r\n        if " +
"(_ResultPropertyRow == undefined || _ResultPropertyRow == null || _ResultPropert" +
"yRow == \"\")\r\n            return false;\r\n\r\n        var res = _ResultPropertyRow.s" +
"plit(\",\");\r\n        var res1 = _ResultPropertyRow.split(\",\");\r\n\r\n        for (i " +
"= 0; i < res.length; i++) {\r\n            var propArr = res[i].split(\'-\');\r\n     " +
"       if (propArr[0].split(\'.\')[0] == entityName) {\r\n                var itemto" +
"Remove = res[i];\r\n                res1.splice($.inArray(itemtoRemove, res1), 1);" +
"\r\n                $(\"#lblCrossTabName\" + propArr[0].replace(\'.\', \'_\')).click();\r" +
"\n            }\r\n        }\r\n        var propResult = \"\";\r\n        if (res1.length" +
" > 1) {\r\n            for (var k = 0; k < res1.length; k++) {\r\n                pr" +
"opResult += res1[k] + \",\";\r\n            }\r\n            propResult = propResult.s" +
"ubstring(0, propResult.length - 1);\r\n            $(\"#CrossTabPropertyValues\").va" +
"l(propResult);\r\n        }\r\n        else {\r\n            $(\"#CrossTabPropertyValue" +
"s\").val(res1);\r\n        }\r\n\r\n    }\r\n    function FillCrossTabProperty() {\r\n     " +
"   var entityName = $(\'#AggregateEntityDD option:selected\').val();\r\n        var " +
"entityDisplayName = $(\'#AggregateEntityDD option:selected\').text();\r\n        $(\'" +
"#AggregatePropertyDD\').html(\'\');\r\n        $.ajax({\r\n            url: \'");

            
            #line 2141 "..\..\Views\CustomReports\Edit.cshtml"
             Write(Url.Action("GetAllProperties", "CustomReports"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?entityName=' + entityName + '&entityDispayName=' + entityDisplayName,
            type: ""GET"",
            cache: false,
            async: false,
            success: function (result) {
                listItems = ""<option  value=''>--Select--</option>"";
                for (var i = 0; i < result.length; i++) {
                    listItems += ""<option  value='"" + result[i].Key + ""'>"" + result[i].Value + ""</option>"";
                }
                $('#AggregatePropertyDD').html(listItems);
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });

    }
</script>");

        }
    }
}
#pragma warning restore 1591
