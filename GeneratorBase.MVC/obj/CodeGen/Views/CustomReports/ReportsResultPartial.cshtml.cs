#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.CustomReports
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/CustomReports/ReportsResultPartial.cshtml")]
    public partial class ReportsResultPartial : GeneratorBase.MVC.CustomWebViewPage<IEnumerable<object>>
    {
        public ReportsResultPartial()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
  
    string grpStr = "";
    int total = 0;
    var isId = false;
    int idsRowIdx = 0;
    string GroupColExclude = "";
    List<object> ids = new List<object>();
    List<object> idRows = new List<object>();
    GeneratorBase.MVC.Controllers.CustomReportsController ObjClt = new GeneratorBase.MVC.Controllers.CustomReportsController();
    var AggResult = ViewBag.AggrationResult;

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 13 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
 if (ViewBag.ReportType == "Simple")
{

            
            #line default
            #line hidden
WriteLiteral("    <style>\r\n      \r\n        /*\r\n        * dragtable\r\n        *\r\n        *\r\n     " +
"   * default css\r\n        *\r\n        */\r\n        /*##### the dragtable stuff ###" +
"##*/\r\n        .dragtable-sortable {\r\n            list-style-type: none;\r\n       " +
"     margin: 0;\r\n            padding: 0;\r\n            -moz-user-select: none;\r\n " +
"       }\r\n\r\n            .dragtable-sortable li {\r\n                margin: 0;\r\n  " +
"              padding: 0;\r\n                float: left;\r\n                font-si" +
"ze: 1em;\r\n                background: white;\r\n            }\r\n\r\n            .drag" +
"table-sortable th, .dragtable-sortable td {\r\n                border-left: 0px;\r\n" +
"            }\r\n\r\n            .dragtable-sortable li:first-child th, .dragtable-s" +
"ortable li:first-child td {\r\n                border-left: 1px solid #CCC;\r\n     " +
"       }\r\n\r\n        .ui-sortable-helper {\r\n            opacity: 0.7;\r\n          " +
"  filter: alpha(opacity=70);\r\n        }\r\n\r\n        .ui-sortable-placeholder {\r\n " +
"           -moz-box-shadow: 4px 5px 4px #C6C6C6 inset;\r\n            -webkit-box-" +
"shadow: 4px 5px 4px #C6C6C6 inset;\r\n            box-shadow: 4px 5px 4px #C6C6C6 " +
"inset;\r\n            border-bottom: 1px solid #CCCCCC;\r\n            border-top: 1" +
"px solid #CCCCCC;\r\n            visibility: visible !important;\r\n            back" +
"ground: #EFEFEF !important;\r\n            visibility: visible !important;\r\n      " +
"  }\r\n\r\n            .ui-sortable-placeholder * {\r\n                opacity: 0.0;\r\n" +
"                visibility: hidden;\r\n            }\r\n    </style>\r\n");

WriteLiteral("    <script>\r\n        function PrintDate(value, aId) {\r\n            $(\"#\" + aId)." +
"html(value);\r\n        }\r\n        function ClientDateTime(formate, value, aId) {\r" +
"\n            var localDateString = \"\";\r\n            var amPm = \"\";\r\n            " +
"if (formate != \"\") {\r\n\r\n                if (formate.trim() == \"MM/DD/YYYY hh:mm\"" +
".trim()) {\r\n                    var date = new Date(value);\r\n                   " +
" var convertedTime = convertLocalDateReport(date, false);\r\n                    l" +
"ocalDateString = moment(convertedTime).format(formate + \" A\");\r\n                " +
"    $(\"#\" + aId).html(localDateString);\r\n                }\r\n                else" +
" if (formate.trim() == \"MM/DD/YYYY HH:mm\".trim()) {\r\n                    var dat" +
"e = new Date(value);\r\n                    var convertedTime = convertLocalDateRe" +
"port(date, false);\r\n                    localDateString = moment(convertedTime)." +
"format(formate);\r\n                    $(\"#\" + aId).html(localDateString);\r\n     " +
"           }\r\n                else if (formate.trim() == \"HH:mm\".trim() || forma" +
"te.trim() == \"hh:mm\".trim()) {\r\n                    var time = value;\r\n         " +
"           var convertedTime = ConvertTimeOnlyReport(time, false);\r\n            " +
"        if (formate.trim() == \"hh:mm\".trim())\r\n                        localDate" +
"String = moment(convertedTime).format(formate + \" A\");\r\n                    else" +
"\r\n                        localDateString = moment(convertedTime).format(formate" +
");\r\n                    $(\"#\" + aId).html(localDateString);\r\n                }\r\n" +
"            }\r\n        }\r\n        function convertLocalDateReport(date, toUTC) {" +
"\r\n            date = new Date(date);\r\n            //Local time converted to UTC\r" +
"\n            var localOffset = date.getTimezoneOffset() * 60000;\r\n            //" +
"var localOffset = new Date().getTimezoneOffset() / 60000;\r\n            var local" +
"Time = date.getTime();\r\n            if (localOffset == 0) {\r\n                dat" +
"e = localTime;\r\n            }\r\n            else {\r\n                date = localT" +
"ime - localOffset;\r\n            }\r\n            date = new Date(date);\r\n         " +
"   return date;\r\n\r\n        }\r\n        function ConvertTimeOnlyReport(time, toUTC" +
") {\r\n            var temp = time;\r\n            var TimeOnly = new Date();\r\n     " +
"       var time = time.match(/(\\d+)(?::(\\d\\d))?\\s*(p?)/);\r\n            TimeOnly." +
"setHours(parseInt(time[1]));\r\n\r\n\r\n            if (temp.match(\"PM$\")) {\r\n        " +
"        TimeOnly.setHours(0, 0, 0, 0)\r\n                if (!temp.match(\"^12\")) {" +
"\r\n                    TimeOnly.setHours(parseInt(time[1]) + 12);\r\n              " +
"  }\r\n                else {\r\n                    TimeOnly.setHours(parseInt(time" +
"[1]));\r\n                }\r\n            }\r\n            else if (temp.match(\"AM$\")" +
") {\r\n                TimeOnly.setHours(0, 0, 0, 0)\r\n                if (temp.mat" +
"ch(\"^12\")) {\r\n                    TimeOnly.setHours(parseInt(time[1]) - 12);\r\n  " +
"              }\r\n                else {\r\n                    TimeOnly.setHours(p" +
"arseInt(time[1]));\r\n                }\r\n            }\r\n            TimeOnly.setMi" +
"nutes(parseInt(time[2]));\r\n            //Local time converted to UTC\r\n          " +
"  var localOffset = TimeOnly.getTimezoneOffset() * 60000;\r\n            var local" +
"Time = TimeOnly.getTime();\r\n            if (localOffset == 0) {\r\n               " +
" TimeOnly = localTime;\r\n            }\r\n            else {\r\n                TimeO" +
"nly = localTime - localOffset;\r\n            }\r\n            return new Date(TimeO" +
"nly);\r\n        }\r\n    </script>\r\n");

            
            #line 155 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 5462), Tuple.Create("\"", 5497)
, Tuple.Create(Tuple.Create("", 5468), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/jquery.dragtable.js")
, 5468), false)
);

WriteLiteral("></script>\r\n");

WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(document).ready(function () {\r\n            $(\'#reportstd\').dragtable" +
"({ maxMovingRows: 1 });\r\n        });\r\n    </script>\r\n");

            
            #line 162 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
    

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" style=\"clear:both;\"");

WriteLiteral("></div>\r\n");

            
            #line 164 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"

    if (ViewBag.GroupResult != null)
    {
        var colCount = 0;
        foreach (var column in (object[])ViewBag.RowValue)
        {
            foreach (var GroupColName in ViewBag.GroupCol.Split(','))
            {
                if (column.ToString() == (string)GroupColName)
                {
                    GroupColExclude += (string)GroupColName + ",";
                }
            }
        }
        if (GroupColExclude != "")
        {
            GroupColExclude = GroupColExclude.TrimEnd(',');
        }
        var GroupPropHeader = ObjClt.getGroupProertyHeader(GroupColExclude);
        foreach (var Gcol in GroupPropHeader)
        {
            grpStr += Gcol.ToString() + ",";
        }

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" style=\"clear:both;\"");

WriteLiteral("></div>\r\n");

            
            #line 188 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" id=\"fsearchPosition\"");

WriteLiteral(" class=\"collapse MessageFSearch in\"");

WriteLiteral(" style=\"margin: 12px 0px 0px 0px;\"");

WriteLiteral(">\r\n        Group By :");

            
            #line 190 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
             Write(grpStr);

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n");

WriteLiteral("        <div");

WriteLiteral(" id=\"table_wrapper\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n\r\n");

            
            #line 194 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
            
            
            #line default
            #line hidden
            
            #line 194 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
             foreach (var row in (object[])ViewBag.columns)
            {
                isId = false;
                foreach (var column in (object[])ViewBag.RowValue)
                {
                    if (!(column.ToString().Split('.')[1] == "Id"))
                    {
                        isId = true;
                        colCount++;
                        break;
                    }
                }
                if (isId)
                {
                    continue;
                }
            }

            
            #line default
            #line hidden
WriteLiteral("            <table");

WriteLiteral(" class=\"table table-bordered table-condensed\"");

WriteLiteral(@" style=""background-color: #a3a3a3;background-image: -webkit-linear-gradient(top, #ccc, #aaaaaa);background-image: -moz-linear-gradient(top, #fdfefe, #edf5fa);background-image: -ms-linear-gradient(top, #fdfefe, #edf5fa);background-image: -o-linear-gradient(top, #fdfefe, #edf5fa);background-image: linear-gradient(top, #fdfefe, #edf5fa);""");

WriteLiteral(">\r\n                <tr>\r\n\r\n                    <td");

WriteLiteral(" style=\"text-align:center;\"");

WriteAttribute("colspan", Tuple.Create(" colspan=\'", 7752), Tuple.Create("\'", 7771)
            
            #line 214 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
, Tuple.Create(Tuple.Create("", 7762), Tuple.Create<System.Object, System.Int32>(colCount
            
            #line default
            #line hidden
, 7762), false)
);

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"margin: 0 0 -19px -4px;float:left;\"");

WriteLiteral(">\r\n                            <b");

WriteLiteral(" id=\"exportexcel\"");

WriteLiteral(" onclick=\"ExpXls();\"");

WriteLiteral(">\r\n                                <span");

WriteLiteral(" class=\"fam-page-white-put\"");

WriteLiteral(" title=\"Export to Excel\"");

WriteLiteral("></span>\r\n                            </b>\r\n                        </div>\r\n");

            
            #line 220 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         if (ViewBag.ReportName != "")
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <b>\r\n");

WriteLiteral("                                ");

            
            #line 223 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                           Write(ViewBag.ReportName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </b>\r\n");

            
            #line 225 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"

                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <b>\r\n                                Blank Report\r\n  " +
"                          </b>\r\n");

            
            #line 232 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"

                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" style=\"margin: 0 0 -19px -4px;float:right\"");

WriteLiteral(">\r\n                            <b");

WriteLiteral(" id=\"exportexcel\"");

WriteLiteral(" onclick=\"ExpXls();\"");

WriteLiteral(">\r\n                                <span");

WriteLiteral(" class=\"fam-page-white-put\"");

WriteLiteral(" title=\"Export to Excel\"");

WriteLiteral("></span>\r\n                            </b>\r\n                        </div>\r\n     " +
"               </td>\r\n                </tr>\r\n            </table>\r\n            <" +
"table");

WriteLiteral(" id=\"reportstd\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n\r\n                <thead>\r\n                    <tr>\r\n\r\n");

            
            #line 247 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 247 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         foreach (var COL in (object[])ViewBag.columns)
                        {
                            var isGroup = false;
                            foreach (var Gcol in GroupPropHeader)
                            {
                                if (Gcol.ToString().Trim(' ') == COL.ToString().Trim(' '))
                                {
                                    isGroup = true;
                                }
                            }
                            if (!isGroup)
                            {
                                isId = false;
                                foreach (var column in (object[])ViewBag.RowValue)
                                {
                                    if (!(column.ToString().Split('.')[1] == "Id"))
                                    {
                                        isId = true;

            
            #line default
            #line hidden
WriteLiteral("                                        <th>");

            
            #line 265 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                       Write(COL);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n");

            
            #line 266 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                        break;
                                    }
                                }
                                if (isId)
                                {
                                    continue;
                                }

                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tr>\r\n                </thead>\r\n\r\n");

            
            #line 279 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 279 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var COL in (object[])ViewBag.columns)
                {
                    var isGroup = false;
                    foreach (var Gcol in GroupPropHeader)
                    {
                        if (Gcol.ToString().Trim(' ') == COL.ToString().Trim(' '))
                        {
                            isGroup = true;
                        }
                    }
                    if (!isGroup)
                    {
                        foreach (var column in (object[])ViewBag.RowValue)
                        {
                            if ((column.ToString().Split('.')[1] == "Id"))
                            {
                                ids.Add(column);
                                break;
                            }
                        }
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 302 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 302 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var item in ViewBag.GroupResult)
                {
                    foreach (var row in (IEnumerable<object>)item)
                    {
                        foreach (var column in (object[])ViewBag.RowValue)
                        {
                            if (!(GroupColExclude == column.ToString()))
                            {
                                if ((column.ToString().Split('.')[1] == "Id"))
                                {
                                    idRows.Add(row);
                                    break;
                                }
                            }
                        }
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n\r\n");

            
            #line 323 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 323 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var item in ViewBag.GroupResult)
                {
                    var GroupValue = "";

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td");

WriteLiteral(" colspan=\"8\"");

WriteLiteral(" style=\"background: #EDF5FA; font-weight:bold\"");

WriteLiteral(">\r\n");

            
            #line 328 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 328 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                             foreach (var row in (IEnumerable<object>)item)
                            {
                                foreach (var GroupColName in ViewBag.GroupCol.Split(','))
                                {

                                    GroupValue = ObjClt.getRecordValue(Convert.ToString(ViewBag.Relations), row, (object)GroupColName) + "-";
                                    break;
                                }
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 337 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                             if (GroupValue == "")
                            {
                                GroupValue = "None";
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 341 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                              

                            int count = (((IEnumerable<object>)item).ToList().Count());
                            total += count;
                            
            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                            ");

            
            #line 346 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                       Write(GroupValue);

            
            #line default
            #line hidden
WriteLiteral(" : ");

            
            #line 346 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                     Write(count);

            
            #line default
            #line hidden
WriteLiteral(" Record(s)\r\n                        </td>\r\n                    </tr>\r\n");

            
            #line 349 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                    foreach (var row in (IEnumerable<object>)item)
                    {

                        int idsColIdx = 0;

            
            #line default
            #line hidden
WriteLiteral("                        <tr>\r\n");

            
            #line 354 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 354 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                             foreach (var column in (object[])ViewBag.RowValue)
                            {
                                if (!(GroupColExclude == column.ToString()))
                                {
                                    if (!(column.ToString().Split('.')[1] == "Id"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <td>\r\n                                   " +
"         <a");

WriteAttribute("href", Tuple.Create(" href=\"", 13845), Tuple.Create("\"", 14030)
            
            #line 361 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
, Tuple.Create(Tuple.Create("", 13852), Tuple.Create<System.Object, System.Int32>(Url.Action("Details",  @ids[idsColIdx].ToString().Split('.')[0], new { id = ObjClt.getRecordValue(Convert.ToString(ViewBag.Relations),idRows[idsRowIdx], ids[idsColIdx]) }, null)
            
            #line default
            #line hidden
, 13852), false)
);

WriteLiteral(" target=\"_blank\"");

WriteLiteral(">");

            
            #line 361 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                                                                                                    Write(ObjClt.getRecordValue(Convert.ToString(ViewBag.Relations), row, column));

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n                                        </td>\r\n");

            
            #line 363 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                        idsColIdx++;
                                    }
                                }
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </tr>\r\n");

            
            #line 368 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                            idsRowIdx++;
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n            </table>\r\n            <span>\r\n                Total record is:");

            
            #line 374 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                           Write(total);

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n        </div>\r\n");

            
            #line 377 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"

    }
    else
    {
        var colCount = 0;

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" id=\"table_wrapper\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n\r\n");

            
            #line 384 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
            
            
            #line default
            #line hidden
            
            #line 384 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
             foreach (var row in (object[])ViewBag.columns)
            {
                isId = false;
                foreach (var column in (object[])ViewBag.RowValue)
                {
                    if (!(column.ToString().Split('.')[1] == "Id"))
                    {
                        isId = true;
                        colCount++;
                        break;
                    }
                }
                if (isId)
                {
                    continue;
                }
            }

            
            #line default
            #line hidden
WriteLiteral("            <table");

WriteLiteral(" class=\"table table-bordered table-condensed\"");

WriteLiteral(@" style=""background-color: #a3a3a3;background-image: -webkit-linear-gradient(top, #ccc, #aaaaaa);background-image: -moz-linear-gradient(top, #fdfefe, #edf5fa);background-image: -ms-linear-gradient(top, #fdfefe, #edf5fa);background-image: -o-linear-gradient(top, #fdfefe, #edf5fa);background-image: linear-gradient(top, #fdfefe, #edf5fa);""");

WriteLiteral(">\r\n                <tr>\r\n                    <td");

WriteLiteral(" style=\"text-align:center;border:1px solid #a3a3a3;\"");

WriteAttribute("colspan", Tuple.Create(" colspan=\'", 15753), Tuple.Create("\'", 15772)
            
            #line 403 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
    , Tuple.Create(Tuple.Create("", 15763), Tuple.Create<System.Object, System.Int32>(colCount
            
            #line default
            #line hidden
, 15763), false)
);

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"margin: 0 0 -19px -4px;float:left;\"");

WriteLiteral(">\r\n                            <b");

WriteLiteral(" id=\"exportexcel\"");

WriteLiteral(" onclick=\"ExpXls();\"");

WriteLiteral(">\r\n                                <span");

WriteLiteral(" class=\"fam-page-white-put\"");

WriteLiteral(" title=\"Export to Excel\"");

WriteLiteral("></span>\r\n                            </b>\r\n                        </div>\r\n");

            
            #line 409 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 409 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         if (ViewBag.ReportName != "")
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <b>\r\n");

WriteLiteral("                                ");

            
            #line 412 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                           Write(ViewBag.ReportName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </b>\r\n");

            
            #line 414 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <b>\r\n                                Blank Report\r\n  " +
"                          </b>\r\n");

            
            #line 420 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"

                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" style=\"margin: 0 0 -19px -4px;float:right\"");

WriteLiteral(">\r\n                            <b");

WriteLiteral(" id=\"exportexcel\"");

WriteLiteral(" onclick=\"ExpXls();\"");

WriteLiteral(">\r\n                                <span");

WriteLiteral(" class=\"fam-page-white-put\"");

WriteLiteral(" title=\"Export to Excel\"");

WriteLiteral("></span>\r\n                            </b>\r\n                        </div>\r\n     " +
"               </td>\r\n                </tr>\r\n            </table>\r\n            <" +
"table");

WriteLiteral(" id=\"reportstd\"");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                <thead>\r\n                    <tr>\r\n\r\n");

            
            #line 434 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 434 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         foreach (var row in (object[])ViewBag.columns)
                        {
                            isId = false;
                            foreach (var column in (object[])ViewBag.RowValue)
                            {
                                if (!(column.ToString().Split('.')[1] == "Id"))
                                {
                                    isId = true;

            
            #line default
            #line hidden
WriteLiteral("                                    <th>");

            
            #line 442 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                   Write(row);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n");

            
            #line 443 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    break;
                                }
                            }
                            if (isId)
                            {
                                continue;
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tr>\r\n                </thead>\r\n");

            
            #line 453 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 453 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 if (Model.Count() == 0)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td>No Record Available</td>\r\n " +
"                   </tr>\r\n");

            
            #line 458 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 459 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var row in (object[])ViewBag.RowValue)
                {
                    if (row.ToString().Split('.')[1] == "Id")
                    {

                        ids.Add(row);
                        // idRows.Add(row);

                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 469 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var row in Model)
                {
                    foreach (var column in (object[])ViewBag.RowValue)
                    {
                        if (column.ToString().Split('.')[1] == "Id")
                        {
                            idRows.Add(row);
                            break;
                        }
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 480 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 foreach (var row in Model)
                {
                    int idsColIdx = 0;

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n");

            
            #line 484 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 484 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         foreach (var column in (object[])ViewBag.RowValue)
                        {
                            if (!(column.ToString().Split('.')[1] == "Id"))
                            {
                                var colvalue = ObjClt.getRecordValue(Convert.ToString(ViewBag.Relations), row, column);
                                var colformate = ObjClt.getDataFormatString(row, column).ToString();

            
            #line default
            #line hidden
WriteLiteral("                                <td>\r\n");

            
            #line 491 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 491 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                     if (colvalue != null)
                                    {
                                        Guid randomId = Guid.NewGuid();
                                        string uniqueId = randomId.ToString().Substring(0, 18).ToUpper();
                                        var ID = ObjClt.getRecordValue(Convert.ToString(ViewBag.Relations), idRows[idsRowIdx], ids[idsColIdx]);

            
            #line default
            #line hidden
WriteLiteral("                                        <a");

WriteAttribute("id", Tuple.Create(" id=", 19822), Tuple.Create("", 19891)
            
            #line 496 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
, Tuple.Create(Tuple.Create("", 19826), Tuple.Create<System.Object, System.Int32>(Html.Raw("'" + column.ToString().Split('.')[1] + uniqueId + "'")
            
            #line default
            #line hidden
, 19826), false)
);

WriteAttribute("href", Tuple.Create(" href=\"", 19891), Tuple.Create("\"", 19985)
            
            #line 496 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                     , Tuple.Create(Tuple.Create("", 19898), Tuple.Create<System.Object, System.Int32>(Url.Action("Details", @ids[idsColIdx].ToString().Split('.')[0], new { id = ID }, null)
            
            #line default
            #line hidden
, 19898), false)
);

WriteLiteral(" target=\"_blank\"");

WriteLiteral(">\r\n");

            
            #line 497 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 497 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                             if (colformate.Contains("MM/dd/yyyy"))
                                            {
                                                colvalue = string.Format(colformate, colvalue);
                                                
            
            #line default
            #line hidden
            
            #line 500 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw(colvalue));

            
            #line default
            #line hidden
            
            #line 500 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                   
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 502 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                             if (colformate.Contains("MM/dd/yyyy hh:mm tt"))
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 504 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw("<script>ClientDateTime('MM/DD/YYYY hh:mm','" + colvalue + "','" + column.ToString().Split('.')[1] + uniqueId + "')</script>"));

            
            #line default
            #line hidden
            
            #line 504 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                                        
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 506 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                             if (colformate.Contains("MM/dd/yyyy HH:mm"))
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 508 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw("<script>ClientDateTime('MM/DD/YYYY HH:mm','" + colvalue + "','" + column.ToString().Split('.')[1] + uniqueId + "')</script>"));

            
            #line default
            #line hidden
            
            #line 508 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                                        
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 510 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                             if (colformate.Contains("hh:mm tt"))
                                            {
                                                colvalue = string.Format(colformate, colvalue);
                                                
            
            #line default
            #line hidden
            
            #line 513 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw("<script>ClientDateTime('hh:mm','" + colvalue + "','" + column.ToString().Split('.')[1] + uniqueId + "')</script>"));

            
            #line default
            #line hidden
            
            #line 513 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                             
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 515 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                             if (colformate.Contains("HH:mm"))
                                            {
                                                colvalue = string.Format(colformate, colvalue);
                                                
            
            #line default
            #line hidden
            
            #line 518 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw("<script>ClientDateTime('hh:mm','" + colvalue + "','" + column.ToString().Split('.')[1] + uniqueId + "')</script>"));

            
            #line default
            #line hidden
            
            #line 518 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                             
                                            }
                                            else
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 522 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                           Write(Html.Raw("<script>PrintDate('" + colvalue + "','" + column.ToString().Split('.')[1] + uniqueId + "')</script>"));

            
            #line default
            #line hidden
            
            #line 522 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                                                                                                
                                                
            
            #line default
            #line hidden
            
            #line 523 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                                                                               
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </a>\r\n");

            
            #line 526 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </td>\r\n");

            
            #line 528 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    idsColIdx++;
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tr>\r\n");

            
            #line 532 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        idsRowIdx++;
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 534 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                 if (ViewBag.AggrationResult != null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n");

            
            #line 537 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 537 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                         foreach (var column in (object[])ViewBag.RowValue)
                        {

                            if (!(column.ToString().Split('.')[1] == "Id"))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <td>\r\n");

            
            #line 543 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 543 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                      
                                string aggresults = ViewBag.AggrationResult;
                                var aggresult = aggresults.Split(',');
                                foreach (var item in aggresult)
                                {
                                    string formatstring = "";
                                    var res = item.Split('-');
                                    string prop = res[0].Split('.')[1];
                                    string aggOp = res[1];
                                    string result = res[2];
                                    foreach (var row in Model.Take(1))
                                    {
                                        formatstring = ObjClt.getDataFormatString(row, column).ToString();
                                        if (formatstring.Contains("MM/dd/yyyy") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);

                                        }
                                        if (formatstring.Contains("MM/dd/yyyy hh:mm tt") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);
                                        }
                                        if (formatstring.Contains("MM/dd/yyyy hh:mm tt") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);
                                        }
                                        if (formatstring.Contains("hh:mm tt") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);
                                        }
                                        if (formatstring.Contains("HH:mm") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);
                                        }
                                        if (formatstring.Contains("MM/dd/yyyy") && column.ToString() == res[0].ToString())
                                        {
                                            DateTime dresult = DateTime.Parse(result);
                                            result = string.Format(formatstring, dresult);
                                        }
                                        break;
                                    }

                                    if (column.ToString().Split('.')[1] == prop)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <b> ");

            
            #line 592 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                       Write(Html.Raw(aggOp + "(" + result + ") <br/>"));

            
            #line default
            #line hidden
WriteLiteral("</b>\r\n");

            
            #line 593 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                                    }
                                }
                                    
            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n");

            
            #line 597 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tr>\r\n");

            
            #line 600 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </table>\r\n\r\n            <span>\r\n                Total record is: ");

            
            #line 604 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
                            Write(Model.Count());

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n        </div>\r\n");

            
            #line 607 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
    }
   
}
else if (ViewBag.ReportType == "CrossTab")
{

            
            #line default
            #line hidden
WriteLiteral("    <style>\r\n        /* REPORT */\r\n        .CssTable {\r\n            margin: 0px;\r" +
"\n            max-width: 500px;\r\n            width: 100%;\r\n            text-align" +
": left;\r\n            border-collapse: collapse;\r\n            text-decoration: no" +
"ne;\r\n            border: 1px solid #a3a3a3;\r\n            color: #000000;\r\n      " +
"  }\r\n\r\n            .CssTable .CssSubHeading {\r\n                font-weight: bold" +
";\r\n                padding: 8px;\r\n                background: #000 repeat-x;\r\n  " +
"              padding-top: 5px;\r\n                padding-bottom: 5px;\r\n         " +
"       border-top: 1px solid #a3a3a3;\r\n                border-bottom: 0px solid " +
"#a3a3a3;\r\n                border-left: 0px solid #a3a3a3;\r\n                borde" +
"r-right: 0px solid #a3a3a3;\r\n                color: #fff;\r\n                text-" +
"decoration: none;\r\n                text-align: left;\r\n            }\r\n\r\n         " +
"   .CssTable .CssTotals {\r\n                font-weight: bold;\r\n                p" +
"adding: 8px;\r\n                padding-top: 5px;\r\n                padding-bottom:" +
" 5px;\r\n                border-top: 1px solid #a3a3a3;\r\n                border-bo" +
"ttom: 0px solid #a3a3a3;\r\n                border-left: 0px solid #a3a3a3;\r\n     " +
"           border-right: 0px solid #a3a3a3;\r\n                color: #000;\r\n     " +
"           text-decoration: none;\r\n                text-align: left;\r\n          " +
"  }\r\n\r\n            .CssTable td {\r\n                font-size: 0.95em;\r\n         " +
"       padding: 8px;\r\n                padding-top: 5px;\r\n                padding" +
"-bottom: 5px;\r\n                border-bottom: 1px solid #a3a3a3;\r\n              " +
"  background-color: #fff;\r\n                border-top: 1px solid #a3a3a3;\r\n     " +
"           border-right: 1px solid #a3a3a3;\r\n                vertical-align: top" +
" middle;\r\n            }\r\n\r\n            .CssTable tr:first-child td {\r\n          " +
"      background: #d9d9d9 repeat-x;\r\n                font-weight: bold;\r\n       " +
"         color: black;\r\n            }\r\n            .CssTable tr:nth-child(2) td " +
"{\r\n                background: #d9d9d9 repeat-x;\r\n                font-weight: b" +
"old;\r\n                color: black;\r\n            }\r\n         \r\n\r\n            .Cs" +
"sTable tfoot tr td {\r\n                background: #e8edff;\r\n                font" +
"-size: 0.9;\r\n            }\r\n\r\n            .CssTable tbody tr:hover td {\r\n       " +
"         background: #fef1c8 repeat-x;\r\n                color: Black;\r\n         " +
"   }\r\n\r\n            .CssTable a {\r\n                text-decoration: none;\r\n     " +
"       }\r\n    </style>\r\n");

WriteLiteral("    <div");

WriteLiteral(" id=\"table_wrapper\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"height:100%;width:100%;overflow:auto;\"");

WriteLiteral(">\r\n       \r\n");

WriteLiteral("        ");

            
            #line 694 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
   Write(Html.Raw(@ViewBag.TabResult));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n");

            
            #line 696 "..\..\Views\CustomReports\ReportsResultPartial.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral(@"<script>

    function ExpXls() {
        var data_type = 'data:application/vnd.ms-excel';
        var table_div = document.getElementById('table_wrapper');
        var table_html = table_div.outerHTML.replace(/ /g, '%20');
        var a = document.createElement('a');;
        a.href = data_type + ', ' + table_html;
        a.download = 'exported_table_' + Math.floor((Math.random() * 9999999) + 1000000) + '.xls';
        a.click();
    }
</script>





");

        }
    }
}
#pragma warning restore 1591
