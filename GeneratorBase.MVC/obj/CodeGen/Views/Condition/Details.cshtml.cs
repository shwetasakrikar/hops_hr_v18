#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.Condition
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\Condition\Details.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Condition/Details.cshtml")]
    public partial class Details : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.Condition>
    {
        public Details()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Condition\Details.cshtml"
  
    ViewBag.Title = "View Condition";

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-hand-down text-primary\"");

WriteLiteral("></i> Condition  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>View</span>\r\n        </h1>\r\n        <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">");

            
            #line 11 "..\..\Views\Condition\Details.cshtml"
                            Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n<div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Details</a></li>\r\n    </ul>\r\n    <div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

            
            #line 26 "..\..\Views\Condition\Details.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\Condition\Details.cshtml"
                                 if (User.CanView("Condition", "PropertyName"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 30 "..\..\Views\Condition\Details.cshtml"
                                                                                  Write(Html.DisplayNameFor(model => model.PropertyName));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral(">");

            
            #line 32 "..\..\Views\Condition\Details.cshtml"
                                                                Write(Model.PropertyName);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n                                            </div>\r\n                       " +
"                 </div>\r\n                                    </div>\r\n");

            
            #line 36 "..\..\Views\Condition\Details.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 37 "..\..\Views\Condition\Details.cshtml"
                                 if (User.CanView("Condition", "Operator"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 41 "..\..\Views\Condition\Details.cshtml"
                                                                                  Write(Html.DisplayNameFor(model => model.Operator));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral(">");

            
            #line 43 "..\..\Views\Condition\Details.cshtml"
                                                                Write(Model.Operator);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n                                            </div>\r\n                       " +
"                 </div>\r\n                                    </div>\r\n");

            
            #line 47 "..\..\Views\Condition\Details.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 48 "..\..\Views\Condition\Details.cshtml"
                                 if (User.CanView("Condition", "Value"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 52 "..\..\Views\Condition\Details.cshtml"
                                                                                  Write(Html.DisplayNameFor(model => model.Value));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral(">");

            
            #line 54 "..\..\Views\Condition\Details.cshtml"
                                                                Write(Model.Value);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n                                            </div>\r\n                       " +
"                 </div>\r\n                                    </div>\r\n");

            
            #line 58 "..\..\Views\Condition\Details.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 59 "..\..\Views\Condition\Details.cshtml"
                                 if (User.CanView("Condition", "LogicalConnector"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 63 "..\..\Views\Condition\Details.cshtml"
                                                                                  Write(Html.DisplayNameFor(model => model.LogicalConnector));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral(">");

            
            #line 65 "..\..\Views\Condition\Details.cshtml"
                                                                Write(Model.LogicalConnector);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n                                            </div>\r\n                       " +
"                 </div>\r\n                                    </div>\r\n");

            
            #line 69 "..\..\Views\Condition\Details.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 70 "..\..\Views\Condition\Details.cshtml"
                                 if (User.CanView("Condition", "RuleConditionsID"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 74 "..\..\Views\Condition\Details.cshtml"
                                                                                  Write(Html.DisplayNameFor(model => model.RuleConditionsID));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

            
            #line 76 "..\..\Views\Condition\Details.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\Condition\Details.cshtml"
                                                 if (@Model.RuleConditionsID == 0 || @Model.RuleConditionsID == null || @Model.ruleconditions == null)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral("></p>\r\n");

            
            #line 79 "..\..\Views\Condition\Details.cshtml"
                                                }
                                                else
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <p");

WriteLiteral(" class=\"viewlabel\"");

WriteLiteral(">");

            
            #line 82 "..\..\Views\Condition\Details.cshtml"
                                                                    Write(Model.ruleconditions.DisplayValue);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");

            
            #line 83 "..\..\Views\Condition\Details.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </div>\r\n                             " +
"           </div>\r\n                                    </div>\r\n");

            
            #line 87 "..\..\Views\Condition\Details.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n             " +
"       </div>\r\n                </div>\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 95 "..\..\Views\Condition\Details.cshtml"
               Write(Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 96 "..\..\Views\Condition\Details.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\Condition\Details.cshtml"
                     if ( User.CanEdit("Condition"))
                    {
                        
            
            #line default
            #line hidden
            
            #line 98 "..\..\Views\Condition\Details.cshtml"
                   Write(Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-sm" }));

            
            #line default
            #line hidden
            
            #line 98 "..\..\Views\Condition\Details.cshtml"
                                                                                                                          
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </div>\r\n        </div>\r\n    </div> <!-- /tab-" +
"content --><br />\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
