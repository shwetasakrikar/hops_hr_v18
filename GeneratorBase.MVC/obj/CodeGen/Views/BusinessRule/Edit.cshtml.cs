#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.BusinessRule
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\BusinessRule\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/BusinessRule/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.BusinessRule>
    {
        
        #line 23 "..\..\Views\BusinessRule\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("BusinessRule", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\BusinessRule\Edit.cshtml"
  
    ViewBag.Title = "Edit Business Rule";

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 6 "..\..\Views\BusinessRule\Edit.cshtml"
  
    var actionListItems = new List<SelectListItem>()
    {
        new SelectListItem() {Text="Make Record Readonly", Value="1"},
         new SelectListItem() {Text="Make Record & Associations Readonly", Value="11"},
        new SelectListItem() {Text="Make Fields Readonly", Value="2"},
        new SelectListItem() {Text="Make Fields Mandatory", Value="3"},
        new SelectListItem() {Text="Email Notification", Value="4"},
        new SelectListItem() {Text="Filter Dropdown", Value="5"},
        new SelectListItem() {Text="Make Fields Hidden", Value="6"},
          new SelectListItem() {Text="Make Groups Hidden", Value="12"},
        new SelectListItem() {Text="Set Value", Value="7"},
        new SelectListItem() {Text="Invoke Action", Value="8"},
        new SelectListItem() {Text="Validate Before Save", Value="10"},
        new SelectListItem() {Text="UI Alert", Value="13"},
    };

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<link");

WriteAttribute("href", Tuple.Create(" href=\'", 1312), Tuple.Create("\'", 1359)
            
            #line 32 "..\..\Views\BusinessRule\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 1319), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Scripts/summernote.css")
            
            #line default
            #line hidden
, 1319), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 1405), Tuple.Create("\"", 1450)
            
            #line 33 "..\..\Views\BusinessRule\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 1411), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Scripts/summernote.js")
            
            #line default
            #line hidden
, 1411), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script>\r\n    function RepeatTypeChange() {\r\n        // value = $(\"#t" +
"_schedulertask.T_AssociatedRecurringScheduleDetailsTypeID:checked\").val();\r\n    " +
"    var $obj = $(\'input:radio[name=\"t_schedulertask.T_AssociatedRecurringSchedul" +
"eDetailsTypeID\"]:checked\');\r\n        var value = $obj.val();\r\n        var text =" +
" $obj.next(\'span:first\').html();\r\n        //alert(text);\r\n        $(\"#RepeatOnWe" +
"ekly\").hide();\r\n        $(\"#dvT_RepeatByID\").hide();\r\n        if (text == \"Weekl" +
"y\") {\r\n            $(\"#RepeatOnWeekly\").show();\r\n        }\r\n        if (text == " +
"\"Monthly\") {\r\n            $(\"#dvT_RepeatByID\").show();\r\n        }\r\n    }\r\n    fu" +
"nction ChangeScheduleType() {\r\n        var $obj = $(\'input:radio[name=\"t_schedul" +
"ertask.T_AssociatedScheduleTypeID\"]:checked\');\r\n        var SelectedVal = $obj.v" +
"al();\r\n        var text = $obj.next(\'span:first\').html()\r\n        $(\"#dvRepeat\")" +
".hide();\r\n        if (text == \"Repeat\") {\r\n            $(\"#dvRepeat\").show();\r\n " +
"           RepeatTypeChange();\r\n            ChangeEndType();\r\n        }\r\n    }\r\n" +
"    function ChangeEndType() {\r\n        var $obj = $(\'input:radio[name=\"t_schedu" +
"lertask.T_RecurringTaskEndTypeID\"]:checked\');\r\n        var SelectedVal = $obj.va" +
"l();\r\n        var text = $obj.next(\'span:first\').html()\r\n        $(\"#dvT_EndDate" +
"\").hide();\r\n        $(\"#dvT_OccurrenceLimitCount\").hide();\r\n\r\n        if (text =" +
"= \"After Specified Occurrences\") {\r\n            $(\"#dvT_OccurrenceLimitCount\").s" +
"how();\r\n        }\r\n        if (text == \"On Specified Date\") {\r\n            $(\"#d" +
"vT_EndDate\").show();\r\n        }\r\n    }\r\n</script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n    $(document).ready(function () {\r\n        //$(\'#AlertMessage\').summernote()" +
";\r\n\r\n    });\r\n</script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(@">
    //Start Code for use of dynamic in Condition

    function GetSecondLevelAttributeInCondition() {
        var SelectedEntity = $('#EntityName').val();
        var SelectedProperty = $(""#"" + ""SuggestedDynamicValueInCondition7"").val();

        $(""#"" + ""SuggestedDynamicValueInCondition71"").hide();
        $(""#"" + ""SuggestedDynamicValueInCondition71"").html('');

        $.ajax({
            url: '");

            
            #line 93 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetAttributesofTargetEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + SelectedEntity + \'&AttributeName=\' + SelectedProperty,\r\n        " +
"    type: \"GET\",\r\n            cache: false,\r\n            success: function (resu" +
"lt) {\r\n                var optionDOM = \'<option value=\"SelectProperty\">--Select " +
"Association Property--</option>\';\r\n                for (i = 0; i < result.length" +
"; i++) {\r\n                    // optionDOM += \'<option value=\"\' + result[i].Name" +
" + \'\">\' + result[i].DisplayName + \'</option>\';\r\n                    optionDOM +=" +
" \'<option class=\"\' + result[i].DataType + \'\" value=\"\' + result[i].Name + \'\">\' + " +
"result[i].DisplayName + \'</option>\';\r\n                }\r\n\r\n                if (r" +
"esult.length == 0) {\r\n                    $(\"#\" + \"SuggestedDynamicValueInCondit" +
"ion71\").html(\'\');\r\n                    $(\"#\" + \"SuggestedDynamicValue71\").hide()" +
";\r\n                }\r\n                else {\r\n                    $(\"#\" + \"Sugge" +
"stedDynamicValueInCondition71\").show();\r\n                    $(\"#\" + \"SuggestedD" +
"ynamicValueInCondition71\").html(optionDOM);\r\n                }\r\n                " +
"//FillSugestedDynamicValuesInCondition7();\r\n            },\r\n            error: f" +
"unction (jqXHR, textStatus, errorThrown) {\r\n                alert(\"error\");\r\n   " +
"         }\r\n        })\r\n    }\r\n    function FillSugestedDynamicValuesInCondition" +
"7() {\r\n\r\n        $(\"#\" + \"ConditionValue\").hide();\r\n        $(\"#\" + \"ConditionVa" +
"lue\").val(\'\');\r\n        if ($(\"#ValueTypeList option:selected\").text() == \"Dynam" +
"ic\") {\r\n            var text = $(\"#\" + \"SuggestedDynamicValueInCondition7 option" +
":selected\").text();\r\n            if ($(\"#\" + \"SuggestedDynamicValueInCondition71" +
"\").val() != null && $(\"#\" + \"SuggestedDynamicValueInCondition71\").val().length >" +
" 0) {\r\n                var value = \"[\" + $(\"#\" + \"SuggestedDynamicValueInConditi" +
"on7\").val() + \".\" + $(\"#\" + \"SuggestedDynamicValueInCondition71\").val() + \"]\";\r\n" +
"                $(\"#\" + \"ConditionValue\").val(value);\r\n            }\r\n          " +
"  else {\r\n                var value = \"[\" + $(\"#\" + \"SuggestedDynamicValueInCond" +
"ition7\").val() + \"]\";\r\n                $(\"#\" + \"ConditionValue\").val(value);\r\n  " +
"          }\r\n        }\r\n    }\r\n    //End Code for use of dynamic in Condition\r\n " +
"   function FillSugestedValues7() {\r\n        var text = $(\"#\" + \"SuggestedProper" +
"tyValue7 option:selected\").text();\r\n        $(\"#\" + \"Rule7Value\").val(text);\r\n  " +
"  }\r\n    function FillSugestedDynamicValues7() {\r\n        $(\"#\" + \"Rule7Value\")." +
"val(\'\');\r\n        if ($(\"#Rule7Operator\").val() == 3) {\r\n            var text = " +
"$(\"#\" + \"SuggestedDynamicValue7 option:selected\").text();\r\n            if ($(\"#\"" +
" + \"SuggestedDynamicValue71\").val() != null && $(\"#\" + \"SuggestedDynamicValue71\"" +
").val().length > 0) {\r\n                var value = \"[\" + $(\"#\" + \"SuggestedDynam" +
"icValue7\").val() + \".\" + $(\"#\" + \"SuggestedDynamicValue71\").val() + \"]\";\r\n      " +
"          $(\"#\" + \"Rule7Value\").val(value);\r\n            }\r\n            else {\r\n" +
"                var value = \"[\" + $(\"#\" + \"SuggestedDynamicValue7\").val() + \"]\";" +
"\r\n                $(\"#\" + \"Rule7Value\").val(value);\r\n            }\r\n        }\r\n " +
"   }\r\n    function FillSugestedDynamicValuesForCondition() {\r\n        //$(\"#\" + " +
"\"Rule7Value\").val(\'\');\r\n        var text = $(\"#\" + \"PropertyList option:selected" +
"\").text();\r\n        if ($(\"#\" + \"AssociationPropertyList\").val() != null && $(\"#" +
"\" + \"AssociationPropertyList\").val().length > 0) {\r\n            var value = \"[\" " +
"+ $(\"#\" + \"PropertyList\").val() + \".\" + $(\"#\" + \"AssociationPropertyList\").val()" +
" + \"]\";\r\n            //$(\"#\" + \"Rule7Value\").val(value);\r\n        }\r\n        els" +
"e {\r\n            var value = \"[\" + $(\"#\" + \"PropertyList\").val() + \"]\";\r\n       " +
"     //$(\"#\" + \"Rule7Value\").val(value);\r\n        }\r\n    }\r\n    //Inline Setvalu" +
"e\r\n    function FillSugestedDynamicValuesForCondition7() {\r\n        var text = $" +
"(\"#\" + \"PropertyList7 option:selected\").text();\r\n        if ($(\"#\" + \"Associatio" +
"nPropertyList7\").val() != null && $(\"#\" + \"AssociationPropertyList7\").val().leng" +
"th > 0) {\r\n            var value = \"[\" + $(\"#\" + \"PropertyList7\").val() + \".\" + " +
"$(\"#\" + \"AssociationPropertyList7\").val() + \"]\";\r\n        }\r\n        else {\r\n   " +
"         var value = \"[\" + $(\"#\" + \"PropertyList7\").val() + \"]\";\r\n        }\r\n   " +
" }\r\n    function GetConstantValue() {\r\n        //Rule7Operator\r\n        var Sele" +
"ctedProperty = $(\"#\" + \"PropertyList7\").val();\r\n        var SelectedEntity = $(\'" +
"#EntityName\').val();\r\n        if (SelectedEntity.length == 0) {\r\n            ale" +
"rt(\"Please select an Entity first !\");\r\n            return false;\r\n        }\r\n  " +
"      if (SelectedProperty.length == 0) {\r\n            alert(\"Please select a Pr" +
"operty !\");\r\n            return false;\r\n        }\r\n\r\n        //Inline Setvalue\r\n" +
"        var assocProp = $(\"#AssociationPropertyList7\").val();\r\n        if (assoc" +
"Prop == \"SelectProperty\") {\r\n            alert(\"Please select Association Proper" +
"ty.\");\r\n            return false;\r\n        }\r\n        var hostingEntity = \"\";\r\n " +
"       propType = \"Property\";\r\n\r\n        $(\"#\" + \"dvRule7Value\").hide();\r\n      " +
"  $(\"#\" + \"Rule7Value\").hide();\r\n        $(\"#\" + \"dvRule7DynamicValue\").hide();\r" +
"\n        if ($(\"#Rule7Operator\").val() == \"1\") {\r\n            $(\"#\" + \"Rule7Valu" +
"e\").val(\'\');\r\n            $(\"#\" + \"Rule7Value\").show();\r\n        }\r\n        if (" +
"$(\"#Rule7Operator\").val() == \"2\") {\r\n            $.ajax({\r\n                url: " +
"\'");

            
            #line 206 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetDropdown", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity + '&Property=' + SelectedProperty,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    if (result != ""Failure"") {
                        $(""#"" + ""dvRule7Value"").show();
                        //Inline Setvalue
                        var selectedoptionclass = $('option:selected', $('#AssociationPropertyList7')).attr('class');
                        if (selectedoptionclass != undefined && selectedoptionclass == ""Int64"") {

                            $.ajax({
                                url: '");

            
            #line 217 "..\..\Views\BusinessRule\Edit.cshtml"
                                 Write(Url.Action("GetTargetEntityOfAssociationProperty", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + result + '&AttributeName=' + assocProp,
                                type: ""GET"",
                                cache: false,
                                async: false,
                                success: function (data) {
                                    result = data.Name;
                                    assocProp = ""DisplayValue"";
                                    propType = ""Association"";
                                }
                            });
                        }
                        hostingEntity = result;
                        $(""#SuggestedPropertyValue7"").attr(""dataurl"", '");

            
            #line 229 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                  Write(Url.Action("GetAllMultiSelectValueForBR", "_Entity", null));

            
            #line default
            #line hidden
WriteLiteral("\'.replace(\"_Entity\", result) + \'?propNameBR=\' + assocProp);\r\n                    " +
"    if (hostingEntity != \"\") {\r\n                            var dataurl = \'");

            
            #line 231 "..\..\Views\BusinessRule\Edit.cshtml"
                                      Write(Url.Action("GetAllMultiSelectValueForBR", "_Entity", null));

            
            #line default
            #line hidden
WriteLiteral("\'.replace(\"_Entity\", result) + \'?propNameBR=\' + assocProp;\r\n                     " +
"       $.ajax({\r\n                                url: dataurl,\r\n                " +
"                type: \"GET\",\r\n                                cache: false,\r\n   " +
"                             async: false,\r\n                                succ" +
"ess: function (result) {\r\n                                    var countItems = 0" +
"\r\n                                    var optionDOM = \"\";\r\n                     " +
"               for (i = 0; i < result.length; i++) {\r\n                          " +
"              if (result[i] != null)\r\n                                          " +
"  optionDOM += \'<option class=\"\' + propType + \'\" value=\"\' + result[i].Id + \'\">\' " +
"+ result[i].value + \'</option>\';\r\n                                        countI" +
"tems++;\r\n                                    }\r\n                                " +
"    $(\"#SuggestedPropertyValue7\").html(optionDOM);\r\n                            " +
"        $(\"#SuggestedPropertyValue7\").multiselect(\'rebuild\');\r\n                 " +
"               },\r\n                                error: function (jqXHR, textS" +
"tatus, errorThrown) {\r\n                                    // alert(\"error\");\r\n " +
"                               }\r\n                            });\r\n             " +
"           }\r\n                    }\r\n                    else {\r\n               " +
"         alert(\"Supports only association values.\");\r\n                        //" +
"$(\"#Rule7Operator :nth(0)\").prop(\"selected\", \"selected\").change();\r\n            " +
"            $(\"#\" + \"Rule7Value\").show();\r\n                        $(\"#\" + \"Sugg" +
"estedPropertyValue7\").removeClass = \"chosen-select form-control\";\r\n             " +
"           $(\"#\" + \"SuggestedPropertyValue7\").removeAttr(\"HostingName\");\r\n      " +
"                  $(\"#\" + \"SuggestedPropertyValue7\").removeAttr(\"dataurl\");\r\n   " +
"                 }\r\n                },\r\n                error: function (jqXHR, " +
"textStatus, errorThrown) {\r\n                    alert(\"error\");\r\n               " +
" }\r\n            });\r\n        }\r\n        if ($(\"#Rule7Operator\").val() == \"3\") {\r" +
"\n            $(\"#\" + \"dvRule7DynamicValue\").show();\r\n            GetSecondLevelA" +
"ttribute();\r\n        }\r\n    }\r\n    function GetSecondLevelAttribute() {\r\n       " +
" var SelectedEntity = $(\'#EntityName\').val();\r\n        var SelectedProperty = $(" +
"\"#\" + \"SuggestedDynamicValue7\").val();\r\n\r\n        $(\"#\" + \"SuggestedDynamicValue" +
"71\").hide();\r\n        $(\"#\" + \"SuggestedDynamicValue71\").html(\'\');\r\n\r\n        $." +
"ajax({\r\n            url: \'");

            
            #line 281 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetAttributesofTargetEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + SelectedEntity + \'&AttributeName=\' + SelectedProperty,\r\n        " +
"    type: \"GET\",\r\n            cache: false,\r\n            success: function (resu" +
"lt) {\r\n                var optionDOM = \'<option value=\"SelectProperty\">--Select " +
"Association Property--</option>\';\r\n                for (i = 0; i < result.length" +
"; i++) {\r\n                    //optionDOM += \'<option value=\"\' + result[i].Name " +
"+ \'\">\' + result[i].DisplayName + \'</option>\';\r\n                    optionDOM += " +
"\'<option class=\"\' + result[i].DataType + \'\" value=\"\' + result[i].Name + \'\">\' + r" +
"esult[i].DisplayName + \'</option>\';\r\n                }\r\n\r\n                if (re" +
"sult.length == 0) {\r\n                    $(\"#\" + \"SuggestedDynamicValue71\").html" +
"(\'\');\r\n                    $(\"#\" + \"SuggestedDynamicValue71\").hide();\r\n         " +
"       }\r\n                else {\r\n                    $(\"#\" + \"SuggestedDynamicV" +
"alue71\").show();\r\n                    $(\"#\" + \"SuggestedDynamicValue71\").html(op" +
"tionDOM);\r\n                }\r\n                FillSugestedDynamicValues7();\r\n   " +
"         },\r\n            error: function (jqXHR, textStatus, errorThrown) {\r\n   " +
"             alert(\"error\");\r\n            }\r\n        })\r\n    }\r\n    function Get" +
"SecondLevelAttributeForCondition() {\r\n        var SelectedEntity = $(\'#EntityNam" +
"e\').val();\r\n        var SelectedProperty = $(\"#\" + \"PropertyList\").val();\r\n\r\n   " +
"     $(\"#\" + \"AssociationPropertyList\").hide();\r\n        $(\"#\" + \"AssociationPro" +
"pertyList\").html(\'\');\r\n\r\n        $.ajax({\r\n            url: \'");

            
            #line 314 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetAttributesofTargetEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + SelectedEntity + \'&AttributeName=\' + SelectedProperty,\r\n        " +
"    type: \"GET\",\r\n            cache: false,\r\n            success: function (resu" +
"lt) {\r\n                var optionDOM = \'<option value=\"SelectProperty\">--Select " +
"Association Property--</option>\';\r\n                for (i = 0; i < result.length" +
"; i++) {\r\n                    //optionDOM += \'<option value=\"\' + result[i].Name " +
"+ \'\">\' + result[i].DisplayName + \'</option>\';\r\n                    optionDOM += " +
"\'<option class=\"\' + result[i].DataType + \'\" value=\"\' + result[i].Name + \'\">\' + r" +
"esult[i].DisplayName + \'</option>\';\r\n                }\r\n\r\n                if (re" +
"sult.length == 0) {\r\n                    $(\"#\" + \"AssociationPropertyList\").html" +
"(\'\');\r\n                    $(\"#\" + \"AssociationPropertyList\").hide();\r\n         " +
"       }\r\n                else {\r\n                    $(\"#\" + \"AssociationProper" +
"tyList\").show();\r\n                    $(\"#\" + \"AssociationPropertyList\").html(op" +
"tionDOM);\r\n                }\r\n                FillSugestedDynamicValuesForCondit" +
"ion();\r\n            },\r\n            error: function (jqXHR, textStatus, errorThr" +
"own) {\r\n                alert(\"error\");\r\n            }\r\n        });\r\n    }\r\n    " +
"function GetSecondLevelAttributeForCondition7() {\r\n        var SelectedEntity = " +
"$(\'#EntityName\').val();\r\n        var SelectedProperty = $(\"#\" + \"PropertyList7\")" +
".val();\r\n\r\n        $(\"#\" + \"AssociationPropertyList7\").hide();\r\n        $(\"#\" + " +
"\"AssociationPropertyList7\").html(\'\');\r\n\r\n        $.ajax({\r\n            url: \'");

            
            #line 347 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetAttributesofTargetEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + SelectedEntity + \'&AttributeName=\' + SelectedProperty,\r\n        " +
"    type: \"GET\",\r\n            cache: false,\r\n            success: function (resu" +
"lt) {\r\n                var optionDOM = \'<option value=\"SelectProperty\">--Select " +
"Association Property--</option>\';\r\n                for (i = 0; i < result.length" +
"; i++) {\r\n                    //optionDOM += \'<option value=\"\' + result[i].Name " +
"+ \'\">\' + result[i].DisplayName + \'</option>\';\r\n                    optionDOM += " +
"\'<option class=\"\' + result[i].DataType + \'\" value=\"\' + result[i].Name + \'\">\' + r" +
"esult[i].DisplayName + \'</option>\';\r\n                }\r\n\r\n                if (re" +
"sult.length == 0) {\r\n                    $(\"#\" + \"AssociationPropertyList7\").htm" +
"l(\'\');\r\n                    $(\"#\" + \"AssociationPropertyList7\").hide();\r\n       " +
"         }\r\n                else {\r\n                    $(\"#\" + \"AssociationProp" +
"ertyList7\").show();\r\n                    $(\"#\" + \"AssociationPropertyList7\").htm" +
"l(optionDOM);\r\n                }\r\n                FillSugestedDynamicValuesForCo" +
"ndition7();\r\n            },\r\n            error: function (jqXHR, textStatus, err" +
"orThrown) {\r\n                // alert(\"error\");\r\n            }\r\n        });\r\n   " +
" }\r\n    function SetValueType(obj) {\r\n        if (obj.id == \"OperatorList\") {\r\n " +
"           if ($(\"#\" + obj.id).val() == \"Match\")\r\n                $(\"#ValueTypeL" +
"ist\").val(\'Regular Expression\').change();\r\n            else if ($(\"#\" + obj.id)." +
"val() == \"Changes to anything\")\r\n                $(\"#ValueTypeList\").val(\'Change" +
"s to anything\').change();\r\n            else\r\n                $(\"#ValueTypeList\")" +
".val(\'Constant\').change();\r\n        }\r\n    }\r\n    function GetSuggestedValues(ob" +
"j) {\r\n        $(\"#dvRule7DynamicValueInCondition\").hide();\r\n        $(\"#\" + \"Con" +
"ditionValue\").val(\'\');\r\n\r\n        if ($(\"#ValueTypeList option:selected\").text()" +
" == \"Pick From List\") {\r\n            var SelectedProperty = $(\"#\" + \"PropertyLis" +
"t\").val();\r\n            var SelectedEntity = $(\'#EntityName\').val();\r\n          " +
"  if (SelectedEntity.length == 0) {\r\n                alert(\"Please select an Ent" +
"ity first !\");\r\n                return false;\r\n            }\r\n            if (Se" +
"lectedProperty.length == 0) {\r\n                alert(\"Please select a Property !" +
"\");\r\n                return false;\r\n            }\r\n\r\n            var assocProp =" +
" $(\"#AssociationPropertyList\").val();\r\n            if (assocProp == \"SelectPrope" +
"rty\") {\r\n                alert(\"Please select Association Property.\");\r\n        " +
"        return false;\r\n            }\r\n            var hostingEntity = \"\";\r\n     " +
"       propType = \"Property\";\r\n            $.ajax({\r\n                url: \'");

            
            #line 406 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetDropdown", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity + '&Property=' + SelectedProperty,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    if (result != ""Failure"") {
                        $(""#"" + ""dvSuggestedPropertyValue"").show();
                        $(""#"" + ""ConditionValue"").hide();
                        var selectedoptionclass = $('option:selected', $('#AssociationPropertyList')).attr('class');
                        if (selectedoptionclass != undefined && selectedoptionclass == ""Int64"") {

                            $.ajax({
                                url: '");

            
            #line 417 "..\..\Views\BusinessRule\Edit.cshtml"
                                 Write(Url.Action("GetTargetEntityOfAssociationProperty", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + result + '&AttributeName=' + assocProp,
                                type: ""GET"",
                                cache: false,
                                async: false,
                                success: function (data) {
                                    result = data.Name;
                                    assocProp = ""DisplayValue"";
                                    propType = ""Association"";
                                }
                            });
                        }
                        hostingEntity = result;
                        $(""#SuggestedPropertyValue"").attr(""dataurl"", '");

            
            #line 429 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                 Write(Url.Action("GetAllMultiSelectValueForBR", "_Entity", null));

            
            #line default
            #line hidden
WriteLiteral("\'.replace(\"_Entity\", result) + \'?propNameBR=\' + assocProp);\r\n                    " +
"    //$(\"#SuggestedPropertyValue\").attr(\"dataurl\", \'");

            
            #line 430 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                   Write(Url.Action("GetAllValueBR", "_Entity", null));

            
            #line default
            #line hidden
WriteLiteral("\'.replace(\"_Entity\", result) + \'?propNameBR=\' + assocProp);\r\n                    " +
"    if (hostingEntity != \"\") {\r\n                            var dataurl = \'");

            
            #line 432 "..\..\Views\BusinessRule\Edit.cshtml"
                                      Write(Url.Action("GetAllMultiSelectValueForBR", "_Entity", null));

            
            #line default
            #line hidden
WriteLiteral("\'.replace(\"_Entity\", result) + \'?propNameBR=\' + assocProp;\r\n                     " +
"       $.ajax({\r\n                                url: dataurl,\r\n                " +
"                type: \"GET\",\r\n                                cache: false,\r\n   " +
"                             async: false,\r\n                                succ" +
"ess: function (result) {\r\n                                    var countItems = 0" +
"\r\n                                    var optionDOM = \"\";\r\n                     " +
"               for (i = 0; i < result.length; i++) {\r\n                          " +
"              if (result[i] != null)\r\n                                          " +
"  optionDOM += \'<option class=\"\' + propType + \'\" value=\"\' + result[i].Id + \'\">\' " +
"+ result[i].value + \'</option>\';\r\n                                        countI" +
"tems++;\r\n                                    }\r\n                                " +
"    $(\"#SuggestedPropertyValue\").html(optionDOM);\r\n                             " +
"       $(\"#SuggestedPropertyValue\").multiselect(\'rebuild\');\r\n                   " +
"             },\r\n                                error: function (jqXHR, textSta" +
"tus, errorThrown) {\r\n                                    alert(\"error\");\r\n      " +
"                          }\r\n                            });\r\n                  " +
"      }\r\n                    }\r\n                    else {\r\n                    " +
"    alert(\"Supports only association values.\");\r\n                        $(\"#Val" +
"ueTypeList :nth(0)\").prop(\"selected\", \"selected\").change();\r\n                   " +
"     hostingEntity = \"\";\r\n                        $(\"#\" + \"dvSuggestedPropertyVa" +
"lue\").hide();\r\n                        $(\"#\" + \"ConditionValue\").show();\r\n      " +
"                  $(\"#\" + \"SuggestedPropertyValue\").removeClass = \"chosen-select" +
" form-control\";\r\n                        $(\"#\" + \"SuggestedPropertyValue\").remov" +
"eAttr(\"HostingName\");\r\n                        $(\"#\" + \"SuggestedPropertyValue\")" +
".removeAttr(\"dataurl\");\r\n                    }\r\n                },\r\n            " +
"    error: function (jqXHR, textStatus, errorThrown) {\r\n                    aler" +
"t(\"error\");\r\n                }\r\n            });\r\n        }\r\n        else if ($(\"" +
"#ValueTypeList option:selected\").text() == \"Changes to anything\") {\r\n           " +
" $(\"#\" + \"ConditionValue\").prop(\"disabled\", true);\r\n            $(\"#\" + \"Conditi" +
"onValue\").val(\'\');\r\n        }\r\n        else if ($(\"#ValueTypeList option:selecte" +
"d\").text() == \"Dynamic\") {\r\n            $(\"#dvSuggestedPropertyValue\").hide();\r\n" +
"            $(\"#ConditionValue\").val(\'\');\r\n            $(\"#ConditionValue\").hide" +
"();\r\n            GetSecondLevelAttributeInCondition();\r\n            $(\"#dvRule7D" +
"ynamicValueInCondition\").show();\r\n        }\r\n        else { $(\"#\" + \"dvSuggested" +
"PropertyValue\").hide(); $(\"#\" + \"ConditionValue\").show(); $(\"#\" + \"ConditionValu" +
"e\").prop(\"disabled\", false); }\r\n    }\r\n    function deleteRow(obj) {\r\n        va" +
"r obj_tr = $(obj).closest(\"tr\");\r\n        $(\"#\" + $(obj).attr(\"name\")).val(\"\");\r" +
"\n        obj_tr.remove();\r\n    }\r\n    function deleteRowCondition(obj, val) {\r\n " +
"       var obj_tr = $(obj).closest(\"tr\");\r\n        var newobj = $(\"#\" + $(obj).a" +
"ttr(\"name\")).val().replace(val, \"\");\r\n        $(\"#\" + $(obj).attr(\"name\")).val(n" +
"ewobj);\r\n        obj_tr.remove();\r\n    }\r\n    function closealert() {\r\n        $" +
"(\'#dvalert\').attr(\"class\", \"modal fade\");\r\n        $(\'#dvalert\').attr(\"aria-hidd" +
"en\", \"true\");\r\n        $(\'#dvalert\').attr(\"style\", \"display:none;\");\r\n    }\r\n   " +
" function FillDateInConditionValue(obj) {\r\n        var event = \"\";\r\n        if (" +
"obj.id == \"PropertyList\")\r\n            event = \"condition\";\r\n        else if (ob" +
"j.id == \"PropertyList7\") {\r\n            event = \"action\";\r\n            if ($(\"#R" +
"ule7Operator\").val() != \"1\") {\r\n                //$(\"#Rule7Operator option:eq(1)" +
"\");\r\n                //$(\"#Rule7Operator :nth(0)\").prop(\"selected\", \"selected\")." +
"change();\r\n                $(\"#dvRule7Value\").hide();\r\n                //return " +
"false;\r\n            }\r\n        }\r\n\r\n        if (event == \"condition\") {\r\n       " +
"     $(\"#OperatorList :nth(0)\").prop(\"selected\", \"selected\").change();\r\n        " +
"    $(\"#ValueTypeList :nth(0)\").prop(\"selected\", \"selected\").change();\r\n        " +
"    $(\"#dvSuggestedPropertyValue\").hide();\r\n        }\r\n\r\n        var propertyNam" +
"e = $(\"#\" + obj.id).val();\r\n        var entityName = $(\"#EntityList\").val();\r\n\r\n" +
"        $.ajax({\r\n            url: \'");

            
            #line 524 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetDateType", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?entityName=' + entityName + '&propertyName=' + propertyName,
            type: ""GET"",
            cache: false,
            async: false,
            success: function (result) {
                if (result == ""DateTime"") {
                    if (event == ""condition"") {
                        $(""#ConditionValue"").val(""Today"");
                        $(""#dvDurationInCondition"").show();
                    }
                    else if (event == ""action"") {
                        $(""#Rule7Value"").val(""Today"");
                        $(""#dvDurationInAction"").show();
                    }
                }
                else {
                    if (event == ""condition"") {
                        $(""#ConditionValue"").val('');
                        $(""#dvDurationInCondition"").hide();
                    }
                    else if (event == ""action"") {
                        $(""#Rule7Value"").val('');
                        $(""#DurationCountInAction"").val('');
                    }
                    $(""#dvDurationInAction"").hide();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
    }
    function FillDateInConditionForAssociation() {
        var entityName = $(""#EntityList"").val();
        var assocName = $(""#PropertyList"").val();
        var propertyName = $(""#AssociationPropertyList"").val();
        $.ajax({
            url: '");

            
            #line 561 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetDateTypeForAssociationProperties", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?entityName=\' + entityName + \'&assocName=\' + assocName + \'&propertyName=\' + " +
"propertyName,\r\n            type: \"GET\",\r\n            cache: false,\r\n            " +
"async: false,\r\n            success: function (result) {\r\n                if (res" +
"ult == \"DateTime\") {\r\n                    $(\"#ConditionValue\").val(\"Today\");\r\n  " +
"                  $(\"#dvDurationInCondition\").show();\r\n                }\r\n      " +
"          else {\r\n                    $(\"#ConditionValue\").val(\'\');\r\n           " +
"         $(\"#dvDurationInCondition\").hide();\r\n                }\r\n            },\r" +
"\n            error: function (jqXHR, textStatus, errorThrown) {\r\n            }\r\n" +
"        });\r\n    }\r\n    function AddAlwaysConditionInGrid(event) {\r\n        if (" +
"event.checked) {\r\n            if ($(\'#tblConditionList tr\').length > 1) {\r\n     " +
"           $(\'#chkAlways\').prop(\'checked\', false);\r\n                alert(\"Pleas" +
"e remove condition first and then select always.\");\r\n                return fals" +
"e;\r\n            }\r\n            var str = \"<tr id=\'idAlways\' style=\'display:none\'" +
" >\";\r\n            var val1 = \"Id\";\r\n            var val2 = \">\";\r\n            var" +
" val3 = \"0\";\r\n            var val4 = \"AND\";\r\n            str += \"<td>\" + val1 + " +
"\"</td>\";\r\n            str += \"<td>\" + val2 + \"</td>\";\r\n            str += \"<td>\"" +
" + val3 + \"</td>\";\r\n            str += \"<td>\" + val4 + \"</td>\";\r\n            str" +
" += \"<td><i name=\\\"lblrulecondition\\\" onclick=\\\"deleteRow(this);\\\" class=\\\"fam-d" +
"elete\\\"></i></td>\";\r\n            var val = $(\"#lblrulecondition\").val();\r\n      " +
"      val += val1 + \",\" + val2 + \",\" + val3 + \",\" + val4 + \"?\";\r\n            $(\"" +
"#lblrulecondition\").val(val);\r\n            $(\'#tblConditionList\').append(str);\r\n" +
"        }\r\n        else {\r\n            $(\'table#tblConditionList tr#idAlways\').r" +
"emove();\r\n            $(\"#lblrulecondition\").val(\'\');\r\n        }\r\n    }\r\n    fun" +
"ction VerifyPropertyAndValueDataType(entityName, propertyName, conditionValue, v" +
"alueType, actionType) {\r\n        var propDataType = \"\";\r\n        $.ajax({\r\n     " +
"       url: \'");

            
            #line 609 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("VerifyPropertyAndValueDataType", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?entityName=\' + entityName + \'&propertyName=\' + propertyName + \"&conditionVa" +
"lue=\" + conditionValue + \"&valueType=\" + valueType + \"&actionType=\" + actionType" +
",\r\n            type: \"GET\",\r\n            cache: false,\r\n            async: false" +
",\r\n            success: function (result) {\r\n                propDataType = resu" +
"lt;\r\n            }\r\n        });\r\n        return propDataType;\r\n    }\r\n    functi" +
"on AddConditionInGrid() {\r\n        if ($(\"#OperatorList\").val() == \"Match\" || $(" +
"\"#ValueTypeList\").val() == \"Regular Expression\") {\r\n            if ($(\"#Operator" +
"List\").val() != \"Match\" || $(\"#ValueTypeList\").val() != \"Regular Expression\") {\r" +
"\n                alert(\"Operator should be \\\"Match\\\" and Value Type should be \\\"" +
"Regular Expression\\\".\");\r\n                return false;\r\n            }\r\n        " +
"}\r\n\r\n        if ($(\"#OperatorList\").val() == \"Changes to anything\" || $(\"#ValueT" +
"ypeList\").val() == \"Changes to anything\") {\r\n            if ($(\"#OperatorList\")." +
"val() != \"Changes to anything\" || $(\"#ValueTypeList\").val() != \"Changes to anyth" +
"ing\") {\r\n                alert(\"Operator and Value Type both should be \\\"Changes" +
" to anything\\\".\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n " +
"       if ($(\"#PropertyList option:selected\").val() == \"SelectProperty\") {\r\n    " +
"        alert(\"Please select Property.\");\r\n            return false;\r\n        }\r" +
"\n\r\n        if ($(\'#chkAlways\').is(\":checked\")) {\r\n            alert(\"Please remo" +
"ve Always condition first and then create condition.\");\r\n            return fals" +
"e;\r\n        }\r\n\r\n        if ($(\"#AssociationPropertyList\").val() != null && $(\"#" +
"AssociationPropertyList\").val() != \"\") {\r\n            if ($(\"#AssociationPropert" +
"yList option:selected\").val() == \"SelectProperty\") {\r\n                alert(\"Ple" +
"ase select Association Property.\");\r\n                return false;\r\n            " +
"}\r\n            var option_all = $(\"#SuggestedPropertyValue option:selected\").map" +
"(function () {\r\n                //change for a.b.c\r\n                if ($(this)." +
"attr(\"class\") == \"Association\")\r\n                    return $(this).val();\r\n    " +
"            else\r\n                    return $(this).text();\r\n            }).get" +
"().join();\r\n            if (option_all != \"\")\r\n                $(\"#ConditionValu" +
"e\").val(option_all);\r\n            $(\"#SuggestedPropertyValue option:selected\").r" +
"emoveAttr(\"selected\");\r\n            $(\"#SuggestedPropertyValue\").multiselect(\'re" +
"build\');\r\n        }\r\n        //Dynamic\r\n        var dynamicPropertyDispValue = \"" +
"\";\r\n        if ($(\"#ValueTypeList option:selected\").text() == \"Dynamic\") {\r\n    " +
"        if ($(\"#\" + \"SuggestedDynamicValueInCondition71\").val() != null && $(\"#\"" +
" + \"SuggestedDynamicValueInCondition71\").val().length > 0) {\r\n                va" +
"r value = \"[\" + $(\"#\" + \"SuggestedDynamicValueInCondition7\").val() + \".\" + $(\"#\"" +
" + \"SuggestedDynamicValueInCondition71\").val() + \"]\";\r\n                dynamicPr" +
"opertyDispValue = \"[\" + $(\"#\" + \"SuggestedDynamicValueInCondition7 option:select" +
"ed\").text() + \".\" + $(\"#\" + \"SuggestedDynamicValueInCondition71 option:selected\"" +
").text() + \"]\";\r\n                $(\"#\" + \"ConditionValue\").val(value);\r\n        " +
"    }\r\n            else {\r\n                var value = \"[\" + $(\"#\" + \"SuggestedD" +
"ynamicValueInCondition7\").val() + \"]\";\r\n                dynamicPropertyDispValue" +
" = \"[\" + $(\"#\" + \"SuggestedDynamicValueInCondition7 option:selected\").text() + \"" +
"]\";\r\n                $(\"#\" + \"ConditionValue\").val(value);\r\n            }\r\n     " +
"   }\r\n\r\n        //Dynamic\r\n        var condValue = $(\"#ConditionValue\").val();\r\n" +
"\r\n        if ($(\"#DurationCount\").val() != undefined && $(\"#DurationCount\").val(" +
").length != 0 && $(\"#ConditionValue\").val() != undefined && $(\"#ConditionValue\")" +
".val().length != 0) {\r\n            if ($(\"#DurationCount\").val().match(/[0-9]/g)" +
" == null) {\r\n                alert(\"Please enter correct value in Count.\");\r\n   " +
"             return false;\r\n            }\r\n            condValue = condValue + \"" +
" \" + $(\"#DateOperatorList\").val() + \" \" + $(\"#DurationCount\").val() + \" \" + $(\"#" +
"DurationList\").val();\r\n            dynamicPropertyDispValue += \" \" + $(\"#DateOpe" +
"ratorList\").val() + \" \" + $(\"#DurationCount\").val() + \" \" + $(\"#DurationList\").v" +
"al();\r\n            $(\"#DurationCount\").val(\'\');\r\n        }\r\n        $(\"#Conditio" +
"nValue\").val(condValue);\r\n\r\n        if ($(\"#ConditionValue\").val() == undefined " +
"|| $(\"#ConditionValue\").val().length == 0) {\r\n            if ($(\'#OperatorList :" +
"selected\').val() != \"Changes to anything\") {\r\n                $(\'#dvalert\').attr" +
"(\"class\", \"modal fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"" +
"false\");\r\n                $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n      " +
"          $(\'#alertbody\').html(\"<li>Provide Property value</li>\");\r\n            " +
"    return false;\r\n            }\r\n        }\r\n\r\n        var str = \"<tr>\";\r\n      " +
"  var entityName = $(\"#EntityList\").val();\r\n        var val1Text = $(\"#PropertyL" +
"ist option:selected\").text();\r\n        var val1 = $(\"#PropertyList\").val();\r\n   " +
"     var val2 = $(\"#OperatorList\").val();\r\n        var val3 = $(\"#ConditionValue" +
"\").val();\r\n        var val4 = $(\"#LogicalConnectorList option:selected\").text();" +
"\r\n        var val5 = $(\"#ValueTypeList\").val();\r\n\r\n        if ($(\"#AssociationPr" +
"opertyList\").val() != null && $(\"#AssociationPropertyList\").val() != \"\") {\r\n    " +
"        val1 = \"[\" + val1 + \".\" + $(\"#AssociationPropertyList\").val() + \"]\";\r\n  " +
"          val1Text = \"[\" + val1Text + \".\" + $(\"#AssociationPropertyList option:s" +
"elected\").text() + \"]\";\r\n            CreateConditionForAssociation(entityName, c" +
"ondValue, val1, val1Text, val5, dynamicPropertyDispValue);\r\n            return t" +
"rue;\r\n        }\r\n\r\n        if (val2 == \"Match\") {\r\n            val3 = val3.repla" +
"ce(\"?\", \"&#63;\").replace(\",\", \"&#44;\");\r\n        }\r\n\r\n        var funcval = val1" +
" + \",\" + val2 + \",\" + val3 + \",\" + val4 + \"?\";\r\n        var val = $(\"#lblrulecon" +
"dition\").val();\r\n        val += val1 + \",\" + val2 + \",\" + val3 + \",\" + val4 + \"?" +
"\";\r\n\r\n        if ($(\"#ValueTypeList option:selected\").text() == \"Dynamic\" && dyn" +
"amicPropertyDispValue != \"\") {\r\n            val3 = dynamicPropertyDispValue;\r\n  " +
"      }\r\n\r\n        str += \"<td>\" + val1Text + \"</td>\";\r\n        str += \"<td>\" + " +
"val2 + \"</td>\";\r\n        str += \"<td>\" + val3 + \"</td>\";\r\n        str += \"<td>\" " +
"+ val4 + \"</td>\";\r\n        str += \"<td><i name=\\\"lblrulecondition\\\" onclick=\\\"de" +
"leteRowCondition(this,\'\" + funcval + \"\');\\\" class=\\\"fam-delete\\\"></i></td>\";\r\n\r\n" +
"        var exMsg = VerifyPropertyAndValueDataType(entityName, val1, $(\"#Conditi" +
"onValue\").val(), val5, \'condition\');\r\n        if (exMsg != \"\" && exMsg != null) " +
"{\r\n            $(\"#ConditionValue\").val(\'\');\r\n            alert(\'Please enter co" +
"rrect Property Value. \' + exMsg);\r\n            return false;\r\n        }\r\n\r\n     " +
"   $(\"#lblrulecondition\").val(val);\r\n        $(\'#tblConditionList\').show();\r\n   " +
"     $(\'#tblConditionList\').append(str);\r\n        $(\"#DurationCount\").val(\'\');\r\n" +
"        $(\"#ConditionValue\").val(\'\');\r\n    }\r\n    String.prototype.replaceAll = " +
"function (search, replace) {\r\n        //if replace is not sent, return original " +
"string otherwise it will\r\n        //replace search string with \'undefined\'.\r\n   " +
"     if (replace === undefined) {\r\n            return this.toString();\r\n        " +
"}\r\n        return this.replace(new RegExp(\'[\' + search + \']\', \'g\'), replace);\r\n " +
"   };\r\n    function CreateConditionForAssociation(entityName, param, assocName, " +
"assocDispName, valueType, dynamicDispName) {\r\n        var arrCond = param.split(" +
"\",\");\r\n        var val = $(\"#lblrulecondition\").val();\r\n        var operator = $" +
"(\"#OperatorList\").val();\r\n\r\n        var exMsg = VerifyPropertyAndValueDataType(e" +
"ntityName, assocName, param, valueType, \'condition\');\r\n        if (valueType != " +
"\"Pick From List\") {\r\n            if (exMsg != \"\" && exMsg != null) {\r\n          " +
"      $(\"#ConditionValue\").val(\'\');\r\n                alert(\'Data types of select" +
"ed properties did not match. Please select compatible properties. \' + exMsg);\r\n " +
"               return false;\r\n            }\r\n        }\r\n        var logicalConne" +
"ctor = $(\"#LogicalConnectorList\").val();\r\n        //if (valueType == \"Pick From " +
"List\") {\r\n        //    logicalConnector = \"OR\";\r\n        //}\r\n\r\n        for (i " +
"= 0; i < arrCond.length; i++) {\r\n            if (valueType != \"Dynamic\")\r\n      " +
"          dynamicDispName = arrCond[i];\r\n            val += assocName + \',\' + op" +
"erator + \',\' + arrCond[i] + \',\' + logicalConnector + \'?\';\r\n            var str =" +
" \"<tr><td>\" + assocDispName + \"</td><td>\" + operator + \"</td><td>\" + dynamicDisp" +
"Name + \"</td><td>\" + logicalConnector + \"</td>\";\r\n            str += \"<td><i nam" +
"e=\\\"lblrulecondition\\\" onclick=\\\"deleteRowCondition(this,\'\" + assocName + \',\' + " +
"operator + \',\' + arrCond[i] + \',\' + logicalConnector + \'\' + \"\');\\\" class=\\\"fam-d" +
"elete\\\"></i></td>\";\r\n            $(\"#lblrulecondition\").val(val);\r\n            $" +
"(\'#tblConditionList\').show();\r\n            $(\'#tblConditionList\').append(str);\r\n" +
"            $(\"#ConditionValue\").val(\'\');\r\n        }\r\n    }\r\n    function FillPr" +
"opertyOnLoad(entityname) {\r\n        // Time based\r\n        $.ajax({\r\n           " +
" url: \'");

            
            #line 788 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetAllAssociationsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + entityname,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = """";
                for (i = 0; i < result.length; i++) {
                    optionDOM += '<option value=""' + result[i].Key + '"">' + result[i].Value + '</option>';
                }
                $(""#"" + ""cmbNotifyTo"").html(optionDOM);
                $(""#"" + ""cmbNotifyTo"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
        // Condition
        $.ajax({
            url: '");

            
            #line 805 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetPropertiesofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + entityname,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = '<option value=""SelectProperty"">--Select Property--</option>';
                for (i = 0; i < result.length; i++) {
                    optionDOM += '<option value=""' + result[i].Name + '"">' + result[i].DisplayName + '</option>';
                }
                $(""#"" + ""PropertyList"").html(optionDOM);
                $(""#"" + ""SuggestedDynamicValue7"").html(optionDOM);
                $(""#"" + ""SuggestedDynamicValueInCondition7"").html(optionDOM);
                $(""#"" + ""PropertyList7"").html(optionDOM);
                //$(""#"" + ""PropertyList1"").html(optionDOM);
                //$(""#"" + ""PropertyList1"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
        $.ajax({
            url: '");

            
            #line 825 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetPropertiesofEntityWithInLineProperties", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + entityname,
            type: ""GET"",
            cache: false,
            async: false,
            success: function (result) {
                var optionDOM = '<option value=""SelectProperty"">--Select Property--</option>';
                for (var index in result) {
                    optionDOM += '<option value=""' + index + '"">' + result[index] + '</option>';
                }
                $(""#"" + ""PropertyList1"").html(optionDOM);
                $(""#"" + ""PropertyList1"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
        //Filter dropdown
        $.ajax({
            url: '");

            
            #line 843 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetTabsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + entityname,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = """";
                if (result.length > 0) {
                    optionDOM += '<option value=""All"">All</option>';
                }
                for (i = 0; i < result.length; i++) {
                    var displayName = result[i].Name;
                    if (result[i].Name.indexOf(""T_"") == 0)
                        displayName = displayName.substr(2);
                    optionDOM += '<option value=""' + result[i].AssociationProperty + '"">' + displayName + '</option>';
                }
                $(""#"" + ""Dropdown"").html(optionDOM);
                $(""#"" + ""Dropdown"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
        //Entity Verb
        $.ajax({
            url: '");

            
            #line 866 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetVerbsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + entityname,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = """";
                for (i = 0; i < result.length; i++) {
                    var displayName = result[i].Value;
                    //if (result[i].key.indexOf(""T_"") == 0)
                    //    displayName = displayName.substr(2);
                    optionDOM += '<option value=""' + result[i].Key + '"">' + displayName + '</option>';
                }
                $(""#"" + ""EntityVerb"").html(optionDOM);
                $(""#"" + ""EntityVerb"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                //alert(""error"");
            }
        });
        //
        //Entity Groups
        $.ajax({
            url: '");

            
            #line 887 "..\..\Views\BusinessRule\Edit.cshtml"
             Write(Url.Action("GetGroupsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + entityname,\r\n            type: \"GET\",\r\n            cache: false," +
"\r\n            async: false,\r\n            success: function (result) {\r\n         " +
"       var optionDOM = \'<option value=\"SelectGroup\">--Select Group--</option>\';\r" +
"\n                for (i = 0; i < result.length; i++) {\r\n                    opti" +
"onDOM += \'<option value=\"\' + result[i].Key + \'\">\' + result[i].Value + \'</option>" +
"\';\r\n                }\r\n                $(\"#\" + \"GroupList\").html(optionDOM);\r\n  " +
"              $(\"#\" + \"GroupList\").multiselect(\'rebuild\');\r\n            },\r\n    " +
"        error: function (jqXHR, textStatus, errorThrown) {\r\n                aler" +
"t(\"error\");\r\n            }\r\n        });\r\n    }\r\n    function DuplicateAction() {" +
"\r\n        var flage = true;\r\n        //$(\"#\" + catname).find(\'input[type=checkbo" +
"x]\').is(\":checked\")\r\n        var iselsecurrent = true;\r\n        if ($(\'input[nam" +
"e=IsElseActionList]:checked\').val() == \"0\")\r\n            iselsecurrent = false;\r" +
"\n        var actionListCheckedLabel = $(\'input[name=ActionList]:radio:checked\')." +
"next(\'span:first\').html();\r\n        $(\'table[id=tblActionList]\').each(function (" +
"e) {\r\n            catname = $(this).attr(\'id\');\r\n            var iselse = $(\"#\" " +
"+ catname).find(\'input[type=checkbox]\').is(\":checked\");\r\n            $(\"#\" + cat" +
"name).find(\'input[type=hidden]\').each(function () {\r\n                if ($(this)" +
".attr(\'id\') == \"AssociatedActionTypeIDhdn\") {\r\n                    var currentVa" +
"lAction = $(this).val();\r\n                    if (currentValAction == 1 && actio" +
"nListCheckedLabel.trim() == \"Make Record Readonly\") {\r\n                        $" +
"(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n                        $(\'#dvaler" +
"t\').attr(\"aria-hidden\", \"false\");\r\n                        $(\'#dvalert\').attr(\"s" +
"tyle\", \"display:block;\");\r\n                        $(\'#alertbody\').html(\"<li>The" +
" rule already contains this action..</li>\");\r\n                        flage = fa" +
"lse;\r\n                    }\r\n                    if (currentValAction == 2 && ac" +
"tionListCheckedLabel.trim() == \"Make Fields Mandatory\" && iselse == iselsecurren" +
"t) {\r\n                        $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n   " +
"                     $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n              " +
"          $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                      " +
"  $(\'#alertbody\').html(\"<li>The rule already contains this action..</li>\");\r\n   " +
"                     flage = false;\r\n                    }\r\n                    " +
"if (currentValAction == 3 && actionListCheckedLabel.trim() == \"Email Notificatio" +
"n\" && iselse == iselsecurrent) {\r\n                        $(\'#dvalert\').attr(\"cl" +
"ass\", \"modal fade in\");\r\n                        $(\'#dvalert\').attr(\"aria-hidden" +
"\", \"false\");\r\n                        $(\'#dvalert\').attr(\"style\", \"display:block" +
";\");\r\n                        $(\'#alertbody\').html(\"<li>The rule already contain" +
"s this action..</li>\");\r\n                        flage = false;\r\n               " +
"     }\r\n                    if (currentValAction == 4 && actionListCheckedLabel." +
"trim() == \"Make Fields Readonly\" && iselse == iselsecurrent) {\r\n                " +
"        $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n                        $" +
"(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n                        $(\'#dvalert\'" +
").attr(\"style\", \"display:block;\");\r\n                        $(\'#alertbody\').html" +
"(\"<li>The rule already contains this action..</li>\");\r\n                        f" +
"lage = false;\r\n                    }\r\n                    if (currentValAction =" +
"= 5 && actionListCheckedLabel.trim() == \"Filter Dropdown\") {\r\n                  " +
"      $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n                        $(\'" +
"#dvalert\').attr(\"aria-hidden\", \"false\");\r\n                        $(\'#dvalert\')." +
"attr(\"style\", \"display:block;\");\r\n                        $(\'#alertbody\').html(\"" +
"<li>The rule already contains this action..</li>\");\r\n                        fla" +
"ge = false;\r\n                    }\r\n                    if (currentValAction == " +
"6 && actionListCheckedLabel.trim() == \"Make Fields Hidden\" && iselse == iselsecu" +
"rrent) {\r\n                        $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r" +
"\n                        $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n          " +
"              $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                  " +
"      $(\'#alertbody\').html(\"<li>The rule already contains this action..</li>\");\r" +
"\n                        flage = false;\r\n                    }\r\n                " +
"    if (currentValAction == 10 && actionListCheckedLabel.trim() == \"Validate Bef" +
"ore Save\") {\r\n                        $(\'#dvalert\').attr(\"class\", \"modal fade in" +
"\");\r\n                        $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n      " +
"                  $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n              " +
"          $(\'#alertbody\').html(\"<li>The rule already contains this action..</li>" +
"\");\r\n                        flage = false;\r\n                    }\r\n            " +
"        if (currentValAction == 13 && actionListCheckedLabel.trim() == \"UI Alert" +
"\") {\r\n                        $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n   " +
"                     $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n              " +
"          $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                      " +
"  $(\'#alertbody\').html(\"<li>The rule already contains this action..</li>\");\r\n   " +
"                     flage = false;\r\n                    }\r\n                    " +
"if (currentValAction == 7 && actionListCheckedLabel.trim() == \"Set Value\" && ise" +
"lse == iselsecurrent) {\r\n                        $(\'#dvalert\').attr(\"class\", \"mo" +
"dal fade in\");\r\n                        $(\'#dvalert\').attr(\"aria-hidden\", \"false" +
"\");\r\n                        $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n   " +
"                     $(\'#alertbody\').html(\"<li>The rule already contains this ac" +
"tion..</li>\");\r\n                        flage = false;\r\n                    }\r\n " +
"               }\r\n            });\r\n        });\r\n        return flage;\r\n    }\r\n  " +
"  function AddActionInGrid(action) {\r\n        if (action == \"ruletype4\")\r\n      " +
"      if ($(\"#TimeValue\").val().length == 0 || ($(\"#cmbNotifyTo\").val() == undef" +
"ined)) {\r\n                // alert(\"Provide required information to add action !" +
"\");\r\n                $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n            " +
"    $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n                $(\'#dvalert\').a" +
"ttr(\"style\", \"display:block;\");\r\n                $(\'#alertbody\').html(\"<li>Provi" +
"de required information to add action !</li>\");\r\n                return false;\r\n" +
"            }\r\n        if (action == \"ruletype23\")\r\n            if ($(\"#Property" +
"List1\").val() == undefined) {\r\n                $(\'#dvalert\').attr(\"class\", \"moda" +
"l fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n     " +
"           $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                $(\'#a" +
"lertbody\').html(\"<li>Select atleast one property !</li>\");\r\n                retu" +
"rn false;\r\n            }\r\n        if (action == \"ruletype12\")\r\n            if ($" +
"(\"#GroupList\").val() == undefined) {\r\n                $(\'#dvalert\').attr(\"class\"" +
", \"modal fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"false\");" +
"\r\n                $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n              " +
"  $(\'#alertbody\').html(\"<li>Select atleast one group !</li>\");\r\n                " +
"return false;\r\n            }\r\n        if (action == \"ruletype5\")\r\n            if" +
" ($(\"#Dropdown\").val() == undefined) {\r\n                $(\'#dvalert\').attr(\"clas" +
"s\", \"modal fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"false\"" +
");\r\n                $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n            " +
"    $(\'#alertbody\').html(\"<li>Select atleast one dropdown to filter !</li>\");\r\n " +
"               return false;\r\n            }\r\n        if (action == \"ruletype7\") " +
"{\r\n            if ($(\"#Rule7Value\").val() == undefined || $(\"#Rule7Value\").val()" +
" == \"\") {\r\n                $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n      " +
"          $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n                $(\'#dvale" +
"rt\').attr(\"style\", \"display:block;\");\r\n                $(\'#alertbody\').html(\"<li" +
">Provide Property Value !</li>\");\r\n                return false;\r\n            }\r" +
"\n            if ($(\"#PropertyList7\").val() == undefined || $(\"#PropertyList7\").v" +
"al() == \"SelectProperty\") {\r\n                $(\'#dvalert\').attr(\"class\", \"modal " +
"fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n       " +
"         $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                $(\'#ale" +
"rtbody\').html(\"<li>Select atleast one property !</li>\");\r\n                return" +
" false;\r\n            }\r\n            if ($(\"#SuggestedDynamicValue7\").val() == \"S" +
"electProperty\" && $(\"#Rule7Operator\").val() == 3) {\r\n                $(\'#dvalert" +
"\').attr(\"class\", \"modal fade in\");\r\n                $(\'#dvalert\').attr(\"aria-hid" +
"den\", \"false\");\r\n                $(\'#dvalert\').attr(\"style\", \"display:block;\");\r" +
"\n                $(\'#alertbody\').html(\"<li>Select atleast one property !</li>\");" +
"\r\n                return false;\r\n            }\r\n            if ($(\"#SuggestedDyn" +
"amicValue71\").val() == \"SelectProperty\" && $(\"#Rule7Operator\").val() == 3) {\r\n  " +
"              $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n                $(\'" +
"#dvalert\').attr(\"aria-hidden\", \"false\");\r\n                $(\'#dvalert\').attr(\"st" +
"yle\", \"display:block;\");\r\n                $(\'#alertbody\').html(\"<li>Select atlea" +
"st one association property !</li>\");\r\n                return false;\r\n          " +
"  }\r\n        }\r\n        if (action == \"ruletype8\")\r\n            if ($(\"#EntityVe" +
"rb\").val() == undefined) {\r\n                $(\'#dvalert\').attr(\"class\", \"modal f" +
"ade in\");\r\n                $(\'#dvalert\').attr(\"aria-hidden\", \"false\");\r\n        " +
"        $(\'#dvalert\').attr(\"style\", \"display:block;\");\r\n                $(\'#aler" +
"tbody\').html(\"<li>Select atleast one verb !</li>\");\r\n                return fals" +
"e;\r\n            }\r\n        var str = \"<tr>\";\r\n        var type = \"\";\r\n\r\n        " +
"var iselse = true;\r\n        if ($(\'input[name=IsElseActionList]:checked\').val() " +
"== \"0\")\r\n            iselse = false;\r\n\r\n        if (action == \"ruletype5\") {\r\n  " +
"          if ($(\'input[name=ActionList]:checked\').val() == \'5\') {\r\n             " +
"   str += \"<td>Filter Dropdown</td>\";\r\n                type = \'5\';\r\n            " +
"}\r\n            var val = $(\"#Dropdown\").val();\r\n            var DropdownVal = $(" +
"\"#Dropdown option:selected\").map(function () {\r\n                return $(this).t" +
"ext();\r\n            }).get().join();\r\n            str += \"<td>\" + DropdownVal + " +
"\"</td>\";\r\n            if (!iselse)\r\n                $(\"#lblruletype\" + type).val" +
"(val);\r\n            else\r\n                $(\"#lblruletype\" + type + \"else\").val(" +
"val);\r\n            $(\"#Dropdown option:selected\").removeAttr(\"selected\");\r\n     " +
"       $(\"#Dropdown\").multiselect(\'rebuild\');\r\n        }\r\n        else {\r\n      " +
"      if (action == \"ruletype23\") {\r\n                if ($(\'input[name=ActionLis" +
"t]:checked\').val() == \'3\') {\r\n                    str += \"<td>Mandatory Properti" +
"es</td>\";\r\n                    type = \'3\';\r\n                }\r\n                e" +
"lse if ($(\'input[name=ActionList]:checked\').val() == \'6\') {\r\n                   " +
" str += \"<td>Hidden Properties</td>\";\r\n                    type = \'6\';\r\n        " +
"        }\r\n                else {\r\n                    str += \"<td>ReadOnly Prop" +
"erties</td>\";\r\n                    type = \'2\';\r\n                }\r\n             " +
"   var option_all = $(\"#PropertyList1 option:selected\").map(function () {\r\n     " +
"               return $(this).text();\r\n                }).get().join();\r\n       " +
"         var val = $(\"#PropertyList1\").val();\r\n                str += \"<td>\" + o" +
"ption_all + \"</td>\";\r\n\r\n                if (!iselse)\r\n                    $(\"#lb" +
"lruletype\" + type).val(val);\r\n                else\r\n                    $(\"#lblr" +
"uletype\" + type + \"else\").val(val);\r\n                $(\"#PropertyList1 option:se" +
"lected\").removeAttr(\"selected\");\r\n                $(\"#PropertyList1\").multiselec" +
"t(\'rebuild\');\r\n            } else {\r\n                if (action == \"ruletype12\")" +
" {\r\n                    str += \"<td>Hidden Groups</td>\";\r\n                    ty" +
"pe = \'12\';\r\n\r\n                    var option_all = $(\"#GroupList option:selected" +
"\").map(function () {\r\n                        return $(this).text();\r\n          " +
"          }).get().join();\r\n                    var val = $(\"#GroupList\").val();" +
"\r\n                    str += \"<td>\" + option_all + \"</td>\";\r\n\r\n                 " +
"   if (!iselse)\r\n                        $(\"#lblruletype\" + type).val(val + \"|\" " +
"+ option_all);\r\n                    else\r\n                        $(\"#lblruletyp" +
"e\" + type + \"else\").val(val + \"|\" + option_all);\r\n                    $(\"#GroupL" +
"ist option:selected\").removeAttr(\"selected\");\r\n                    $(\"#GroupList" +
"\").multiselect(\'rebuild\');\r\n                }\r\n                else if (action =" +
"= \"ruletype4\") {\r\n                    var valNotify = \"\";\r\n                    f" +
"or (var o = 0; o < $(\'#NotifyRoleList option:selected\').length; o++) {\r\n        " +
"                valNotify += $(\'#NotifyRoleList option:selected\')[o].text + \",\";" +
"\r\n                    }\r\n                    str += \"<td>Email Notification</td>" +
"\";\r\n                    var val1 = $(\"#cmbNotifyTo\").val();\r\n                   " +
" str += \"<td>Notify To :- \" + val1 +\r\n                        \"<br/>Extra email-" +
"ids :- \" + $(\"#NotifyToExtra\").val() + \"\" +\r\n                    \"<br/>Notify Ro" +
"les To :- \" + valNotify + \"\" + \"</td>\";\r\n                    type = \'4\';\r\n      " +
"              if (!iselse)\r\n                        $(\"#lblruletype\" + type).val" +
"(val1);\r\n                    else\r\n                        $(\"#lblruletype\" + ty" +
"pe + \"else\").val(val1);\r\n                }\r\n                else {\r\n            " +
"        if (action == \"ruletype7\") {\r\n                        str += \"<td>Set Va" +
"lue</td>\";\r\n                        type = \'7\';\r\n                        var opt" +
"ion_all = $(\"#PropertyList7 option:selected\").text();\r\n                        v" +
"ar val = $(\"#PropertyList7\").val();\r\n                        //Inline Setvalue\r\n" +
"                        if ($(\"#AssociationPropertyList7\").val() != null && $(\"#" +
"AssociationPropertyList7\").val() != \"\") {\r\n                            val = \"[\"" +
" + val + \".\" + $(\"#AssociationPropertyList7\").val() + \"]\";\r\n                    " +
"        option_all = \"[\" + option_all + \".\" + $(\"#AssociationPropertyList7 optio" +
"n:selected\").text() + \"]\";\r\n                        }\r\n                        /" +
"/date calculations\r\n                        var actionValue = \"\";\r\n             " +
"           if ($(\"#DurationCountInAction\").val() != undefined && $(\"#DurationCou" +
"ntInAction\").val().length != 0) {\r\n                            if ($(\"#DurationC" +
"ountInAction\").val().match(/[0-9]/g) == null) {\r\n                               " +
" alert(\"Please enter correct value in Count.\");\r\n                               " +
" return false;\r\n                            }\r\n                            actio" +
"nValue = actionValue + \" \" + $(\"#DateOperatorListInAction\").val() + \" \" + $(\"#Du" +
"rationCountInAction\").val() + \" \" + $(\"#DurationListInAction\").val();\r\n         " +
"               }\r\n                        //\r\n                        //Verify P" +
"roperty Value for Data Type\r\n                        var exMsg = VerifyPropertyA" +
"ndValueDataType($(\"#EntityList\").val(), val, $(\"#Rule7Value\").val() + actionValu" +
"e, $(\"#Rule7Operator option:selected\").text(), \'action\');\r\n                     " +
"   if (exMsg != \"\" && exMsg != null) {\r\n                            alert(\'Pleas" +
"e enter correct Property Value. \' + exMsg);\r\n                            return " +
"false;\r\n                        }\r\n                        var dynamicSetDispPro" +
"perty = $(\"#Rule7Value\").val();\r\n                        if ($(\"#Rule7Operator\")" +
".val() == 3) {\r\n                            if ($(\"#\" + \"SuggestedDynamicValue71" +
"\").val() != null && $(\"#\" + \"SuggestedDynamicValue71\").val().length > 0) {\r\n    " +
"                            dynamicSetDispProperty = \"[\" + $(\"#\" + \"SuggestedDyn" +
"amicValue7 option:selected\").text() + \".\" + $(\"#\" + \"SuggestedDynamicValue71 opt" +
"ion:selected\").text() + \"]\";\r\n                            }\r\n                   " +
"         else {\r\n                                dynamicSetDispProperty = \"[\" + " +
"$(\"#\" + \"SuggestedDynamicValue7 option:selected\").text() + \"]\";\r\n               " +
"             }\r\n                        }\r\n\r\n                        str += \"<td" +
">\" + option_all + \"=\" + dynamicSetDispProperty + actionValue + \"</td>\";\r\n       " +
"                 var lblruletype7val = $(\"#lblruletype7\").val();\r\n              " +
"          lblruletype7val += val + \",\" + \"=\" + \",\" + $(\"#Rule7Value\").val() + ac" +
"tionValue + \"?\";\r\n                        $(\"#lblruletype7\").val(lblruletype7val" +
");\r\n                        if (!iselse)\r\n                            $(\"#lblrul" +
"etype7\").val(lblruletype7val);\r\n                        else\r\n                  " +
"          $(\"#lblruletype7else\").val(lblruletype7val);\r\n                        " +
"$(\"#DurationCountInAction\").val(\'\');\r\n                    }\r\n                   " +
" else {\r\n                        if (action == \"ruletype8\") {\r\n                 " +
"           str += \"<td>Invoke Action</td>\";\r\n                            type = " +
"\'8\';\r\n                            var option_all = $(\"#EntityVerb option:selecte" +
"d\").text();\r\n                            var val = $(\"#EntityVerb\").val();\r\n    " +
"                        str += \"<td>\" + option_all + \"</td>\";\r\n                 " +
"           if (!iselse)\r\n                                $(\"#lblruletype8\").val(" +
"val);\r\n                            else\r\n                                $(\"#lbl" +
"ruletype8else\").val(val);\r\n                        }\r\n                        el" +
"se if (action == \"ruletype10\") {\r\n                            str += \"<td>Valida" +
"te Before Save</td>\";\r\n                            var val1 = \"Validate Before S" +
"ave\";\r\n                            str += \"<td>\" + val1 + \"</td>\";\r\n            " +
"                type = \'10\';\r\n                            if (!iselse)\r\n        " +
"                        $(\"#lblruletype\" + type).val(val1);\r\n                   " +
"         else\r\n                                $(\"#lblruletype\" + type + \"else\")" +
".val(val1);\r\n                        } else if (action == \"ruletype13\") {\r\n     " +
"                       str += \"<td>UI Alert</td>\";\r\n                            " +
"var val1 = \"UI Alert\";\r\n                            str += \"<td>\" + val1 + \"</td" +
">\";\r\n                            type = \'13\';\r\n                            if (!" +
"iselse)\r\n                                $(\"#lblruletype\" + type).val(val1);\r\n  " +
"                          else\r\n                                $(\"#lblruletype\"" +
" + type + \"else\").val(val1);\r\n                        } else\r\n                  " +
"          if (action == \"ruletype11\") {\r\n                                str += " +
"\"<td>Make Record & Associations Readonly</td>\";\r\n                               " +
" var val1 = \"Make Record & Associations Readonly\";\r\n                            " +
"    str += \"<td>\" + val1 + \"</td>\";\r\n                                type = \'11\'" +
";\r\n                                if (!iselse)\r\n                               " +
"     $(\"#lblruletype\" + type).val(val1);\r\n                                else\r\n" +
"                                    $(\"#lblruletype\" + type + \"else\").val(val1);" +
"\r\n                            }\r\n                            else {\r\n           " +
"                     str += \"<td>Make Record Readonly</td>\";\r\n                  " +
"              var val1 = \"Make Record Readonly\";\r\n                              " +
"  str += \"<td>\" + val1 + \"</td>\";\r\n                                type = \'1\';\r\n" +
"                                if (!iselse)\r\n                                  " +
"  $(\"#lblruletype\" + type).val(val1);\r\n                                else\r\n   " +
"                                 $(\"#lblruletype\" + type + \"else\").val(val1);\r\n " +
"                           }\r\n                    }\r\n                }\r\n\r\n      " +
"      }\r\n        }\r\n\r\n        str += \"<td>\" + iselse + \"</td>\";\r\n        str += " +
"\"<td><i name=\\\"lblruletype\" + type + \"\\\" onclick=\\\"deleteRow(this);\\\" class=\\\"fa" +
"m-delete\\\"></i></td>\";\r\n        $(\'#tblActionList\').show();\r\n        $(\'#tblActi" +
"onList\').append(str);\r\n        if (DuplicateAction() == false) {\r\n            de" +
"leteRow($(\"i[name =lblruletype\" + type + \"]\"))\r\n            deleteRow($(\"i[name " +
"=lblruletype\" + type + \"else]\"))\r\n        }\r\n    }\r\n\r\n    ");

WriteLiteral(@"
    $(document).ready(function () {
        var SelectedText = $('#EntityList :selected').val();
        $('#EntityName').val($('#EntityList :selected').val());
        FillPropertyOnLoad(SelectedText);
        //$('#TimeRuleApplyOn').change(function () {
        //    var val = $(this).val();
        //    if (val != """")
        //        $('#rulecondition').show();
        //    else
        //        $('#rulecondition').hide();
        //});
        $('select[name=cmbNotifyTo]').multiselect({
            buttonWidth: '100%'
        });
        $('select[name=PropertyList1]').multiselect({
            buttonWidth: '100%'
        });
        $('select[name=Dropdown]').multiselect({
            buttonWidth: '100%'
        });
        $('#EntityList').change(function () {

            $('#EntityName').val($('#EntityList :selected').val());
            var SelectedEntity = $('#EntityList :selected').val();
            // Time based
            if (SelectedEntity.length == 0)
                return false;
            $.ajax({
                url: '");

            
            #line 1299 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetUserAssociation","BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    var optionDOM = """";
                    for (i = 0; i < result.length; i++) {
                        optionDOM += '<option value=""' + result[i].Key + '"">' + result[i].Value + '</option>';
                    }
                    $(""#"" + ""cmbNotifyTo"").html(optionDOM);
                    $(""#"" + ""cmbNotifyTo"").multiselect('rebuild');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""error"");
                }
            })
            //
            // Conditiion
            $.ajax({
                url: '");

            
            #line 1317 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetPropertiesofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    var optionDOM = '<option value=""SelectProperty"">--Select Property--</option>';
                    for (i = 0; i < result.length; i++) {
                        optionDOM += '<option value=""' + result[i].Name + '"">' + result[i].DisplayName + '</option>';
                    }
                    $(""#"" + ""PropertyList"").html(optionDOM);
                    $(""#"" + ""PropertyList7"").html(optionDOM);
                    $(""#"" + ""PropertyList"").select('rebuild')
                    //$(""#"" + ""PropertyList1"").html(optionDOM);
                    //$(""#"" + ""PropertyList1"").multiselect('rebuild');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""error"");
                }
            })
            $.ajax({
                url: '");

            
            #line 1336 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetPropertiesofEntityWithInLineProperties", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedText,
                type: ""GET"",
                cache: false,
                async: false,
                success: function (result) {
                    var optionDOM = '<option value=""SelectProperty"">--Select Property--</option>';
                    for (var index in result) {
                        optionDOM += '<option value=""' + index + '"">' + result[index] + '</option>';
                    }
                    $(""#"" + ""PropertyList1"").html(optionDOM);
                    $(""#"" + ""PropertyList1"").multiselect('rebuild');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""error"");
                }
            })
            //
            //Filter dropdown
            $.ajax({
                url: '");

            
            #line 1355 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetTabsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    var optionDOM = """";
                    for (i = 0; i < result.length; i++) {
                        var displayName = result[i].Name;
                        if (result[i].Name.indexOf(""T_"") == 0)
                            displayName = displayName.substr(2);
                        optionDOM += '<option value=""' + result[i].AssociationProperty + '"">' + displayName + '</option>';
                    }
                    $(""#"" + ""Dropdown"").html(optionDOM);
                    $(""#"" + ""Dropdown"").multiselect('rebuild');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""error"");
                }
            });
            //Entity Verb
            $.ajax({
                url: '");

            
            #line 1375 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetVerbsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedEntity,
                type: ""GET"",
                cache: false,
                success: function (result) {
                    var optionDOM = """";
                    for (i = 0; i < result.length; i++) {
                        var displayName = result[i].Value;
                        optionDOM += '<option value=""' + result[i].Key + '"">' + displayName + '</option>';
                    }
                    $(""#"" + ""EntityVerb"").html(optionDOM);
                    $(""#"" + ""EntityVerb"").multiselect('rebuild');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(""error"");
                }
            });
            //
            //Entity Groups
            $.ajax({
                url: '");

            
            #line 1394 "..\..\Views\BusinessRule\Edit.cshtml"
                 Write(Url.Action("GetGroupsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral("\' + \'?Entity=\' + SelectedText,\r\n                type: \"GET\",\r\n                cac" +
"he: false,\r\n                async: false,\r\n                success: function (re" +
"sult) {\r\n                    var optionDOM = \'<option value=\"SelectGroup\">--Sele" +
"ct Group--</option>\';\r\n                    for (i = 0; i < result.length; i++) {" +
"\r\n                        optionDOM += \'<option value=\"\' + result[i].Key + \'\">\' " +
"+ result[i].Value + \'</option>\';\r\n                    }\r\n                    $(\"" +
"#\" + \"GroupList\").html(optionDOM);\r\n                    $(\"#\" + \"GroupList\").mul" +
"tiselect(\'rebuild\');\r\n                },\r\n                error: function (jqXHR" +
", textStatus, errorThrown) {\r\n                    alert(\"error\");\r\n             " +
"   }\r\n            });\r\n        });\r\n        $(\'#ActionList input\').change(functi" +
"on () {\r\n\r\n            var actionListCheckedLabel = $(\'input[name=ActionList]:ra" +
"dio:checked\').next(\'span:first\').html();\r\n\r\n            var Entity = $(\'#EntityN" +
"ame\').val();\r\n            if (Entity == undefined || Entity.length == 0) {\r\n    " +
"            $(\'#dvalert\').attr(\"class\", \"modal fade in\");\r\n                $(\'#d" +
"valert\').attr(\"aria-hidden\", \"false\");\r\n                $(\'#dvalert\').attr(\"styl" +
"e\", \"display:block;\");\r\n                $(\'#alertbody\').html(\"<li>Select Entity<" +
"/li>\");\r\n                $(\'input[name=ActionList]:checked\').val() = 0;\r\n       " +
"         return false;\r\n            }\r\n            $(\"#chk1\").removeAttr(\"checke" +
"d\");\r\n            $(\"#chk2\").removeAttr(\"checked\");\r\n            $(\"#chk3\").remo" +
"veAttr(\"checked\");\r\n            var SelectedText = $(\'input[name=ActionList]:che" +
"cked\').val();\r\n            $(\'div[name=ruletype]\').each(function (e) {\r\n        " +
"        $(this).attr(\"class\", \"collapse\");\r\n            });\r\n            if (Sel" +
"ectedText.length == 1 && (SelectedText == 2 || SelectedText == 3 || SelectedText" +
" == 6)) {\r\n                $(\'#ruletype23\').attr(\"class\", \"in\");\r\n            }\r" +
"\n            else if (SelectedText == 12) {\r\n                $(\'#ruletype12\').at" +
"tr(\"class\", \"in\");\r\n            }\r\n            else {\r\n                if (Selec" +
"tedText == 4 || SelectedText == 7 || SelectedText == 8) {\r\n                    $" +
"(\'#ruletype\' + SelectedText).attr(\"class\", \"in\");\r\n                } else {\r\n   " +
"                 if (SelectedText == 1)\r\n                        AddActionInGrid" +
"(\'ruletype1\');\r\n                    if (SelectedText == 11)\r\n                   " +
"     AddActionInGrid(\'ruletype11\');\r\n                    if (SelectedText == 5)\r" +
"\n                        $(\'#ruletype\' + SelectedText).attr(\"class\", \"in\");\r\n   " +
"                 if (SelectedText == 10)\r\n                        AddActionInGri" +
"d(\'ruletype10\');\r\n                    if (SelectedText == 13)\r\n                 " +
"       AddActionInGrid(\'ruletype13\');\r\n                }\r\n            }\r\n       " +
"     if (SelectedText == 1 || SelectedText == 11 || SelectedText == 2 || Selecte" +
"dText == 5 || SelectedText == 6)\r\n                $(\"#chk1\").prop(\"checked\", tru" +
"e)\r\n            else\r\n                if (SelectedText == 3 || SelectedText == 7" +
")\r\n                    $(\"#chk2\").prop(\"checked\", true)\r\n                else\r\n " +
"                   if (SelectedText == 4 || SelectedText == 8)\r\n                " +
"        $(\"#chk3\").prop(\"checked\", true)\r\n                    else\r\n            " +
"            $(\"#ActionTriggerType\").hide();\r\n        });\r\n        $(\'#ConditionO" +
"perator\').val($(\'#OperatorList :selected\').val());\r\n        $(\'#OperatorList\').c" +
"hange(function () {\r\n            var SelectedText = $(\'#OperatorList :selected\')" +
".val();\r\n            $(\'#ConditionOperator\').val(SelectedText);\r\n        });\r\n  " +
"      var ruleType = $(\'#AssociatedBusinessRuleTypeID\').val();\r\n        if (rule" +
"Type == \"3\") {\r\n            $(\'#OnUpdate\').attr(\'checked\', true);\r\n            $" +
"(\'#OnAdd\').attr(\'checked\', true);\r\n            $(\'#OnPropertyChange\').attr(\'chec" +
"ked\', false);\r\n        }\r\n        else if (ruleType == \"2\") {\r\n            $(\'#O" +
"nUpdate\').attr(\'checked\', true);\r\n            $(\'#OnAdd\').attr(\'checked\', false)" +
";\r\n            $(\'#OnPropertyChange\').attr(\'checked\', false);\r\n        }\r\n      " +
"  else if (ruleType == \"1\" || ruleType == \"11\") {\r\n            $(\'#OnUpdate\').at" +
"tr(\'checked\', false);\r\n            $(\'#OnAdd\').attr(\'checked\', true);\r\n         " +
"   $(\'#OnPropertyChange\').attr(\'checked\', false);\r\n        }\r\n        else if (r" +
"uleType == \"4\") {\r\n            $(\'#OnUpdate\').attr(\'checked\', false);\r\n         " +
"   $(\'#OnAdd\').attr(\'checked\', false);\r\n            $(\'#OnUpdate\').attr(\'disable" +
"d\', true);\r\n            $(\'#OnAdd\').attr(\'disabled\', true);\r\n            $(\'#OnP" +
"ropertyChange\').attr(\'checked\', true);\r\n            $(\'#Scheduled\').attr(\'disabl" +
"ed\', true)\r\n        }\r\n        else if (ruleType == \"5\") {\r\n            $(\'#OnUp" +
"date\').attr(\'checked\', false);\r\n            $(\'#OnAdd\').attr(\'checked\', false);\r" +
"\n            $(\'#OnPropertyChange\').attr(\'checked\', false);\r\n            $(\'#Sch" +
"eduled\').attr(\'checked\', true);\r\n            $(\'#Scheduled\').trigger(\"change\");\r" +
"\n            $(\'#ScheduledDateTimeStart\').val(\'");

            
            #line 1499 "..\..\Views\BusinessRule\Edit.cshtml"
                                         Write(ViewData["ScheduledDateTimeStart"]);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n            $(\'#ScheduledDateTimeEnd\').val(\'");

            
            #line 1500 "..\..\Views\BusinessRule\Edit.cshtml"
                                       Write(ViewData["ScheduledDateTimeEnd"]);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n            $(\'#ScheduledDailyTime\').val(\'");

            
            #line 1501 "..\..\Views\BusinessRule\Edit.cshtml"
                                     Write(ViewData["ScheduledDailyTime"]);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n        }\r\n        else if (ruleType == \"6\") {\r\n            $(\'#OnUpdate\').a" +
"ttr(\'checked\', false);\r\n            $(\'#OnAdd\').attr(\'checked\', false);\r\n       " +
"     $(\'#OnPropertyChange\').attr(\'checked\', false);\r\n            $(\'#Scheduled\')" +
".attr(\'checked\', false);\r\n            $(\'#BeforeSave\').attr(\'checked\', true);\r\n " +
"           $(\'#OnUpdate\').attr(\'disabled\', true);\r\n            $(\'#OnAdd\').attr(" +
"\'disabled\', true);\r\n            $(\'#OnPropertyChange\').attr(\'disabled\', true);\r\n" +
"            $(\'#Scheduled\').attr(\'disabled\', true);\r\n        }\r\n\r\n        $(\"inp" +
"ut[type=radio][value=5]\", $(\"#dvActions\")).prop(\"disabled\", true);\r\n        Filt" +
"erActionList();\r\n        $(\'#dvChkRuleType\').change(function () {\r\n            F" +
"ilterActionList();\r\n        });\r\n        //filter Add Action dropdown\r\n\r\n       " +
" $(\'#chkAlways\').change(function () {\r\n            AddAlwaysConditionInGrid(this" +
");\r\n            if ($(\'#chkAlways\').is(\":checked\")) {\r\n                $(\"#btnAd" +
"dAction4\").attr(\"disabled\", true);\r\n                $(\'input:radio[name=\"IsElseA" +
"ctionList\"]\').prop(\'disabled\', true);\r\n                $(\'input:radio[name=\"IsEl" +
"seActionList\"]\').filter(\'[value=\"0\"]\').prop(\'checked\', true);\r\n            }\r\n  " +
"          else {\r\n                $(\"#btnAddAction4\").attr(\"disabled\", false);\r\n" +
"                $(\'input:radio[name=\"IsElseActionList\"]\').prop(\'disabled\', false" +
");\r\n            }\r\n        });\r\n        if ($(\'#idAlways\').length == 1) {\r\n     " +
"       $(\'#chkAlways\').prop(\'checked\', true);\r\n            $(\"#btnAddAction4\").a" +
"ttr(\"disabled\", true);\r\n            $(\'input:radio[name=\"IsElseActionList\"]\').pr" +
"op(\'disabled\', true);\r\n        }\r\n        else {\r\n            $(\'#chkAlways\').pr" +
"op(\'checked\', false);\r\n            $(\"#btnAddAction4\").attr(\"disabled\", false);\r" +
"\n            $(\'input:radio[name=\"IsElseActionList\"]\').prop(\'disabled\', false);\r" +
"\n        }\r\n        $(\'#chkAlways\').checked = false;\r\n\r\n        $(\'input:radio[n" +
"ame=\"IsElseActionList\"]\').filter(\'[value=\"0\"]\').attr(\'checked\', true);\r\n    });\r" +
"\n    function FilterActionList() {\r\n        if (($(\'#OnUpdate\').is(\":checked\") &" +
"& $(\'#OnAdd\').is(\":checked\")) || $(\'#OnAdd\').is(\":checked\")) {\r\n            $(\':" +
"radio\', $(\"#dvActions\")).each(function () {\r\n                if ($(this).val() =" +
"= \'1\' || $(this).val() == \'2\' || $(this).val() == \'11\')\r\n                    $(\"" +
"input[type=radio][value=\" + $(this).val() + \"]\", $(\"#dvActions\")).attr(\"disabled" +
"\", true);\r\n                else\r\n                    $(\"input[type=radio][value=" +
"\" + $(this).val() + \"]\", $(\"#dvActions\")).attr(\"disabled\", false);\r\n            " +
"});\r\n            $(\"#OperatorList option[value=\'Changes to anything\']\").prop(\'di" +
"sabled\', true);\r\n            $(\"#ValueTypeList option[value=\'Changes to anything" +
"\']\").prop(\'disabled\', true);\r\n            $(\"#ValueTypeList option[value=\'Dynami" +
"c\']\").prop(\'disabled\', false);\r\n            $(\"#chkAlways\").prop(\'disabled\', fal" +
"se);\r\n        }\r\n        else if ($(\'#OnUpdate\').is(\":checked\")) {\r\n            " +
"$(\':radio\', $(\"#dvActions\")).each(function () {\r\n                $(\"input[type=r" +
"adio][value=\" + $(this).val() + \"]\", $(\"#dvActions\")).attr(\"disabled\", false);\r\n" +
"            });\r\n            $(\"#OperatorList option[value=\'Changes to anything\'" +
"]\").prop(\'disabled\', true);\r\n            $(\"#ValueTypeList option[value=\'Changes" +
" to anything\']\").prop(\'disabled\', true);\r\n            $(\"#ValueTypeList option[v" +
"alue=\'Dynamic\']\").prop(\'disabled\', false);\r\n            $(\"#chkAlways\").prop(\'di" +
"sabled\', false);\r\n        }\r\n        else if ($(\'#OnPropertyChange\').is(\":checke" +
"d\")) {\r\n            $(\':radio\', $(\"#dvActions\")).each(function () {\r\n           " +
"     if ($(this).val() == \'1\' || $(this).val() == \'2\' || $(this).val() == \'8\' ||" +
" $(this).val() == \'11\')\r\n                    $(\"input[type=radio][value=\" + $(th" +
"is).val() + \"]\", $(\"#dvActions\")).attr(\"disabled\", true);\r\n                else\r" +
"\n                    $(\"input[type=radio][value=\" + $(this).val() + \"]\", $(\"#dvA" +
"ctions\")).attr(\"disabled\", false);\r\n            });\r\n            $(\"#OperatorLis" +
"t option[value=\'Changes to anything\']\").prop(\'disabled\', false);\r\n            $(" +
"\"#ValueTypeList option[value=\'Changes to anything\']\").prop(\'disabled\', false);\r\n" +
"            $(\"#ValueTypeList option[value=\'Dynamic\']\").prop(\'disabled\', false);" +
"\r\n            $(\"#chkAlways\").prop(\'disabled\', true);\r\n            $(\"#chkAlways" +
"\").prop(\'checked\', false);\r\n            $(\'table#tblConditionList tr#idAlways\')." +
"remove();\r\n            $(\"#lblrulecondition\").val(\'\');\r\n        }\r\n        else " +
"if ($(\'#Scheduled\').is(\":checked\")) {\r\n            $(\':radio\', $(\"#dvActions\"))." +
"each(function () {\r\n                if ($(this).val() == \'4\' || $(this).val() ==" +
" \'7\' || $(this).val() == \'8\')\r\n                    $(\"input[type=radio][value=\" " +
"+ $(this).val() + \"]\", $(\"#dvActions\")).attr(\"disabled\", false);\r\n              " +
"  else\r\n                    $(\"input[type=radio][value=\" + $(this).val() + \"]\", " +
"$(\"#dvActions\")).attr(\"disabled\", true);\r\n            });\r\n            $(\"#Opera" +
"torList option[value=\'Changes to anything\']\").prop(\'disabled\', false);\r\n        " +
"    $(\"#ValueTypeList option[value=\'Changes to anything\']\").prop(\'disabled\', fal" +
"se);\r\n            $(\"#ValueTypeList option[value=\'Dynamic\']\").prop(\'disabled\', f" +
"alse);\r\n            $(\"#chkAlways\").prop(\'disabled\', false);\r\n        }\r\n       " +
" else if ($(\'#BeforeSave\').is(\":checked\")) {\r\n            $(\':radio\', $(\"#dvActi" +
"ons\")).each(function () {\r\n                if ($(this).val() == \'7\')\r\n          " +
"          $(\"input[type=radio][value=\" + $(this).val() + \"]\", $(\"#dvActions\")).a" +
"ttr(\"disabled\", false);\r\n                else\r\n                    $(\"input[type" +
"=radio][value=\" + $(this).val() + \"]\", $(\"#dvActions\")).attr(\"disabled\", true);\r" +
"\n            });\r\n            $(\"#OperatorList option[value=\'Changes to anything" +
"\']\").prop(\'disabled\', false);\r\n            $(\"#ValueTypeList option[value=\'Chang" +
"es to anything\']\").prop(\'disabled\', false);\r\n            $(\"#ValueTypeList optio" +
"n[value=\'Dynamic\']\").prop(\'disabled\', false);\r\n            $(\"#chkAlways\").prop(" +
"\'disabled\', false);\r\n        }\r\n        else {\r\n            $(\':radio\', $(\"#dvAc" +
"tions\")).each(function () {\r\n                if ($(this).val() == \'0\' || $(this)" +
".val() == \'5\')\r\n                    $(\"input[type=radio][value=\" + $(this).val()" +
" + \"]\", $(\"#dvActions\")).attr(\"disabled\", false);\r\n                else\r\n       " +
"             $(\"input[type=radio][value=\" + $(this).val() + \"]\", $(\"#dvActions\")" +
").attr(\"disabled\", true);\r\n            });\r\n            $(\"#OperatorList option[" +
"value=\'Changes to anything\']\").prop(\'disabled\', true);\r\n            $(\"#ValueTyp" +
"eList option[value=\'Changes to anything\']\").prop(\'disabled\', true);\r\n           " +
" $(\"#ValueTypeList option[value=\'Dynamic\']\").prop(\'disabled\', false);\r\n         " +
"   $(\"#chkAlways\").prop(\'disabled\', false);\r\n        }\r\n    }\r\n</script>\r\n<scrip" +
"t>\r\n    function ChangeNextRuntime(obj) {\r\n        var currentval = $(\"#Schedule" +
"dDateTimeStart\").val();\r\n        var currenttime = $(\"#ScheduledDailyTime\").val(" +
");\r\n        $(\"#NextRuntime\").val(currentval + \" \" + currenttime);\r\n        $(\"#" +
"PreviousRuntime\").hide();\r\n    }\r\n    $(document).on(\'change\', \'.tcheckbox\', fun" +
"ction () {\r\n        if (this.id == \"Scheduled\") {\r\n            if (this.checked)" +
" {\r\n                $(\"#ScheduleCalendar\").show();\r\n                ChangeSchedu" +
"leType();\r\n                $(\'#OnUpdate\').attr(\'checked\', false);\r\n             " +
"   $(\'#OnAdd\').attr(\'checked\', false);\r\n                $(\"#OnPropertyChange\").a" +
"ttr(\'checked\', false);\r\n                $(\"#BeforeSave\").attr(\'checked\', false);" +
"\r\n                $(\'#OnUpdate\').attr(\'disabled\', true);\r\n                $(\'#On" +
"Add\').attr(\'disabled\', true);\r\n                $(\"#OnPropertyChange\").attr(\'disa" +
"bled\', true);\r\n                $(\"#BeforeSave\").attr(\'disabled\', true);\r\n       " +
"         $(\'#dvChkRuleType\').trigger(\"change\");\r\n                //$(\'#divAlways" +
"\').hide();\r\n            }\r\n            else {\r\n                $(\"#ScheduleCalen" +
"dar\").hide();\r\n                $(\'#OnUpdate\').removeAttr(\'disabled\');\r\n         " +
"       $(\'#OnAdd\').removeAttr(\'disabled\');\r\n                $(\"#OnPropertyChange" +
"\").removeAttr(\'disabled\');\r\n                $(\"#BeforeSave\").removeAttr(\'disable" +
"d\');\r\n                $(\'#OnUpdate\').attr(\'checked\', true);\r\n                $(\'" +
"#OnAdd\').attr(\'checked\', true);\r\n                $(\'#dvChkRuleType\').trigger(\"ch" +
"ange\");\r\n                //$(\'#divAlways\').show();\r\n            }\r\n        }\r\n  " +
"      else if (this.id == \"OnPropertyChange\") {\r\n            if (this.checked) {" +
"\r\n                $(\'#OnUpdate\').attr(\'checked\', false);\r\n                $(\'#On" +
"Add\').attr(\'checked\', false);\r\n                $(\'#Scheduled\').attr(\'checked\', f" +
"alse);\r\n                $(\'#BeforeSave\').attr(\'checked\', false);\r\n              " +
"  $(\'#OnUpdate\').attr(\'disabled\', true);\r\n                $(\'#OnAdd\').attr(\'disa" +
"bled\', true);\r\n                $(\'#Scheduled\').attr(\'disabled\', true);\r\n        " +
"        $(\'#BeforeSave\').attr(\'disabled\', true);\r\n                $(\'#dvChkRuleT" +
"ype\').trigger(\"change\");\r\n            }\r\n            else {\r\n                $(\'" +
"#OnUpdate\').removeAttr(\'disabled\');\r\n                $(\'#OnAdd\').removeAttr(\'dis" +
"abled\');\r\n                $(\'#Scheduled\').removeAttr(\'disabled\');\r\n             " +
"   $(\'#BeforeSave\').removeAttr(\'disabled\');\r\n                $(\'#OnUpdate\').attr" +
"(\'checked\', true);\r\n                $(\'#OnAdd\').attr(\'checked\', true);\r\n        " +
"        $(\'#Scheduled\').attr(\'checked\', true);\r\n                $(\'#dvChkRuleTyp" +
"e\').trigger(\"change\");\r\n            }\r\n        }\r\n        else if (this.id == \"B" +
"eforeSave\") {\r\n            if (this.checked) {\r\n                $(\'#OnUpdate\').a" +
"ttr(\'checked\', false);\r\n                $(\'#OnAdd\').attr(\'checked\', false);\r\n   " +
"             $(\'#Scheduled\').attr(\'checked\', false);\r\n                $(\'#OnUpda" +
"te\').attr(\'disabled\', true);\r\n                $(\'#OnAdd\').attr(\'disabled\', true)" +
";\r\n                $(\'#Scheduled\').attr(\'disabled\', true);\r\n                $(\'#" +
"dvChkRuleType\').trigger(\"change\");\r\n            }\r\n            else {\r\n         " +
"       $(\'#OnUpdate\').removeAttr(\'disabled\');\r\n                $(\'#OnAdd\').remov" +
"eAttr(\'disabled\');\r\n                $(\'#Scheduled\').removeAttr(\'disabled\');\r\n   " +
"             $(\'#OnUpdate\').attr(\'checked\', true);\r\n                $(\'#OnAdd\')." +
"attr(\'checked\', true);\r\n                $(\'#Scheduled\').attr(\'checked\', false);\r" +
"\n                $(\'#dvChkRuleType\').trigger(\"change\");\r\n            }\r\n        " +
"}\r\n    });\r\n\r\n</script>\r\n<style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n    .panel-group .panel {\r\n        margin-bottom: 10px;\r\n        overflow: vis" +
"ible;\r\n    }\r\n</style>\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n");

            
            #line 1713 "..\..\Views\BusinessRule\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 1713 "..\..\Views\BusinessRule\Edit.cshtml"
               var Entity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.EntityName);
             var EntityDisplayName = Model.EntityName;
             if (Entity != null)
             {
                 EntityDisplayName = Entity.DisplayName;
             }
             var ShortDetails = "#" + Model.Id + "-" + EntityDisplayName + "-" + Model.RuleName;
            
            
            #line default
            #line hidden
WriteLiteral("\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> Business Rule  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>");

            
            #line 1721 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                          Write(ShortDetails);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            <div");

WriteLiteral(" style=\"float:right;\"");

WriteLiteral(">\r\n                <i");

WriteLiteral(" class=\'glyphicon glyphicon-add-sign\'");

WriteLiteral("></i>  ");

            
            #line 1723 "..\..\Views\BusinessRule\Edit.cshtml"
                                                         Write(Html.ActionLink("Back To List", "Cancel", new { UrlReferrer = ViewData["BusinessRuleParentUrl"] }, new { @style = "cursor:pointer;font-size: 15px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n        </h1>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>" +
"\r\n<div");

WriteLiteral(" class=\"panel-group\"");

WriteLiteral(" id=\"accordion\"");

WriteLiteral(">\r\n    ");

WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n\r\n        <div");

WriteLiteral(" class=\"panel-heading\"");

WriteLiteral(">\r\n            <h4");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" style=\"float:none;\"");

WriteLiteral(">\r\n                <a");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#BusinessRule\"");

WriteLiteral(">Business Rule</a>\r\n            </h4>\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"BusinessRule\"");

WriteLiteral(" class=\"panel-collapse collapse in\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\r\n\r\n\r\n                ");

WriteLiteral("\r\n                <div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n                    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n                        <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Details</a></li>\r\n");

            
            #line 1747 "..\..\Views\BusinessRule\Edit.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 1747 "..\..\Views\BusinessRule\Edit.cshtml"
                         if (Model.AssociatedBusinessRuleTypeID == 5)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <li><a");

WriteLiteral(" href=\"#TaskHistory\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Task History</a></li>\r\n");

            
            #line 1750 "..\..\Views\BusinessRule\Edit.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <li ");

            
            #line 1751 "..\..\Views\BusinessRule\Edit.cshtml"
                        Write(!User.CanView("JournalEntry") ? "style=display:none;" : "");

            
            #line default
            #line hidden
WriteLiteral("><a");

WriteLiteral(" href=\"#JournalEntryToBusinessRuleRelation\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Business Rule Journal</a></li>\r\n                    </ul>\r\n                    <" +
"div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n                        ");

WriteLiteral("\r\n                        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n\r\n\r\n\r\n\r\n");

            
            #line 1760 "..\..\Views\BusinessRule\Edit.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 1760 "..\..\Views\BusinessRule\Edit.cshtml"
                             using (Html.BeginForm("Edit", "BusinessRule", new { UrlReferrer = Convert.ToString(ViewData["BusinessRuleParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                
            
            #line default
            #line hidden
            
            #line 1762 "..\..\Views\BusinessRule\Edit.cshtml"
                           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 1762 "..\..\Views\BusinessRule\Edit.cshtml"
                                                        ;
                                                        Html.ValidationSummary(true);
                                                        Html.EnableClientValidation();

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                    <i");

WriteLiteral(" class=\"fam-script-lightning pull-left\"");

WriteLiteral("></i>\r\n                                                                    <h3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Rule Details </h3>\r\n                                                            " +
"    </div>\r\n                                                                <div" +
"");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\r\n\r\n");

            
            #line 1774 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    
            
            #line default
            #line hidden
            
            #line 1774 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                     if (User.CanView("BusinessRule", "RuleName"))
                                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-12\"");

WriteLiteral(">");

            
            #line 1778 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      Write(Html.LabelFor(model => model.RuleName));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                                             " +
"                   <div");

WriteLiteral(" class=\"input-group col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1780 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBoxFor(model => model.RuleName, getHtmlAttributes("RuleName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1781 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.RuleName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

            
            #line 1785 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    }
                                                                    else
                                                                    { 
            
            #line default
            #line hidden
            
            #line 1787 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                 Write(Html.HiddenFor(model => model.RuleName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 1787 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                               }

            
            #line default
            #line hidden
WriteLiteral("                                                                    ");

            
            #line 1788 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                     if (User.CanView("BusinessRule", "Description"))
                                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-12\"");

WriteLiteral(">");

            
            #line 1792 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      Write(Html.LabelFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"          <div");

WriteLiteral(" class=\"input-group col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1794 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextAreaFor(model => model.Description, getHtmlAttributes("Description")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1795 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

            
            #line 1799 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n\r\n                                                                </div>\r\n\r" +
"\n                                                            </div>\r\n           " +
"                                             </div>\r\n");

            
            #line 1808 "..\..\Views\BusinessRule\Edit.cshtml"


            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                    <i");

WriteLiteral(" class=\"fam-script-lightning pull-left\"");

WriteLiteral("></i>\r\n                                                                    <h3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Define Entity and Roles </h3>\r\n                                                 " +
"               </div>\r\n                                                         " +
"       <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\r\n");

            
            #line 1817 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    
            
            #line default
            #line hidden
            
            #line 1817 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                     if (User.CanView("BusinessRule", "EntityName"))
                                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" style=\"padding-left:22px;\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-12\"");

WriteLiteral(">");

            
            #line 1821 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      Write(Html.LabelFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span>  </label>\r\n                                                            " +
"                    <div");

WriteLiteral(" class=\"input-group col-sm-8 col-md-8 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1823 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.DropDownList("EntityList", null, "-- Select --", new { @required = "required", @class = "form-control", @disabled = "disabled" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1824 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBoxFor(model => model.EntityName, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1825 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

            
            #line 1829 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    }
                                                                    else
                                                                    { 
            
            #line default
            #line hidden
            
            #line 1831 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                 Write(Html.HiddenFor(model => model.EntityName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 1831 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                 }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 1833 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    
            
            #line default
            #line hidden
            
            #line 1833 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                     if (User.CanView("BusinessRule", "Roles"))
                                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" style=\"height:35px;\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-12\"");

WriteLiteral(">Apply to roles</label>\r\n                                                        " +
"                        <div");

WriteLiteral(" class=\"input-group col-sm-8 col-md-8 col-xs-12\"");

WriteLiteral(" id=\"dvRole\"");

WriteLiteral(" name=\"dvRoles\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1839 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.DropDownList("RoleList", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1840 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBoxFor(model => model.Roles, new { style = "border:none !important;Width:0px !important;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1841 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBox("RoleListValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1842 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.Roles));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-12\"");

WriteLiteral(">Disable Rule </label>\r\n                                                         " +
"                       <div");

WriteLiteral(" class=\"input-group col-sm-8 col-md-8 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1850 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.CheckBoxFor(model => model.Disable));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1851 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.Disable));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

WriteLiteral("                                                                        <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-12\"");

WriteLiteral(">Freeze Rule </label>\r\n                                                          " +
"                      <div");

WriteLiteral(" class=\"input-group col-sm-8 col-md-8 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1859 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.CheckBoxFor(model => model.Freeze));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1860 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.Freeze));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

            
            #line 1864 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    }
                                                                    else
                                                                    { 
            
            #line default
            #line hidden
            
            #line 1866 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                 Write(Html.HiddenFor(model => model.DateCreated1, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 1866 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                   }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 1869 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    
            
            #line default
            #line hidden
            
            #line 1869 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                     if (User.CanView("BusinessRule", "DateCreated1"))
                                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                                        <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                                            <l" +
"abel");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 1872 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                  Write(Html.LabelFor(model => model.DateCreated1));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"      <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerDateCreated1\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 1876 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBoxFor(model => model.DateCreated1, "{0:MM/dd/yyyy}", new { @id = "datetimepickerDateCreated1txt", @class = "form-control", @readonly = "readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"         <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                                              " +
"              <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                                          " +
"              </span>\r\n                                                         " +
"                           </div>\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1881 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.ValidationMessageFor(model => model.DateCreated1));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"     </div>\r\n");

            
            #line 1885 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    }
                                                                    else
                                                                    { 
            
            #line default
            #line hidden
            
            #line 1887 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                 Write(Html.HiddenFor(model => model.AssociatedBusinessRuleTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 1887 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                                   }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                                                </div>\r\n     " +
"                                                       </div>\r\n                 " +
"                                       </div>\r\n");

            
            #line 1893 "..\..\Views\BusinessRule\Edit.cshtml"


            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                        <i");

WriteLiteral(" class=\"fam-script-lightning pull-left\"");

WriteLiteral("></i>\r\n                                                                        <h" +
"3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">When to evaluate?</h3>\r\n\r\n\r\n\r\n                                                  " +
"                  </div>\r\n\r\n\r\n                                                  " +
"                  <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

            
            #line 1908 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                            
            
            #line default
            #line hidden
            
            #line 1908 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                             if (User.CanView("BusinessRule", "AssociatedBusinessRuleTypeID"))
                                                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                                                <" +
"div");

WriteLiteral(" class=\"col-sm-10 col-md-12 col-xs-12\"");

WriteLiteral(" style=\"padding-left:10px; margin-top:10px; \"");

WriteLiteral(">\r\n                                                                              " +
"      <label");

WriteLiteral(" class=\"col-sm-2\"");

WriteLiteral("></label>\r\n                                                                      " +
"              <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"          ");

WriteLiteral("\r\n                                                                               " +
"         <div");

WriteLiteral(" id=\"dvChkRuleType\"");

WriteLiteral(" style=\"margin-top:-5px;\"");

WriteLiteral(">\r\n\r\n");

            
            #line 1916 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                            
            
            #line default
            #line hidden
            
            #line 1916 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                             foreach (var person in ViewBag.AssociatedBusinessRuleTypeID)
                                                                                            {
                                                                                                if (person.Value == "1" || person.Value == "2" || person.Value == "4" || person.Value == "5" || person.Value == "6")
                                                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                                 " +
"                   <input");

WriteLiteral(" type=\"checkbox\"");

WriteAttribute("name", Tuple.Create(" name=\"", 103129), Tuple.Create("\"", 103148)
            
            #line 1920 "..\..\Views\BusinessRule\Edit.cshtml"
                                               , Tuple.Create(Tuple.Create("", 103136), Tuple.Create<System.Object, System.Int32>(person.Text
            
            #line default
            #line hidden
, 103136), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 103149), Tuple.Create("\"", 103170)
            
            #line 1920 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                    , Tuple.Create(Tuple.Create("", 103157), Tuple.Create<System.Object, System.Int32>(person.Value
            
            #line default
            #line hidden
, 103157), false)
);

WriteAttribute("id", Tuple.Create(" id=\"", 103171), Tuple.Create("\"", 103188)
            
            #line 1920 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       , Tuple.Create(Tuple.Create("", 103176), Tuple.Create<System.Object, System.Int32>(person.Text
            
            #line default
            #line hidden
, 103176), false)
);

WriteLiteral(" class=\"tcheckbox\"");

WriteLiteral(" />\r\n");

WriteLiteral("                                                                                 " +
"                   <label>\r\n");

WriteLiteral("                                                                                 " +
"                       ");

            
            #line 1922 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                   Write(person.Text);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                     </label>\r\n");

            
            #line 1924 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                }
                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                                                                 " +
"           ");

            
            #line 1926 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.ValidationMessageFor(model => model.AssociatedBusinessRuleTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 1927 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.DropDownList("AssociatedBusinessRuleTypeID", null, new { @class = "form-control hidden", @style = "display:none" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"         </div>\r\n                                                               " +
"                     </div>\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1930 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.HiddenFor(model => model.T_SchedulerTaskID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 1931 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.HiddenFor(model => model.t_schedulertask.ConcurrencyKey));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                                                             " +
"       <div");

WriteLiteral(" id=\"ScheduleCalendar\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                                              " +
"          <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                                              " +
"              <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                  <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                                                              " +
"                      <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                              " +
"                          <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\r\n                                                                        " +
"                                <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Basic Details</h3>\r\n                                                            " +
"                                        </div>\r\n                                " +
"                                                                    <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"                          <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Name\"");

WriteLiteral(">\r\n                                                                              " +
"                              <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Name\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 1945 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                      Write(Html.LabelFor(model => model.t_schedulertask.T_Name));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                                                  <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1948 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.TextBoxFor(model => model.t_schedulertask.T_Name, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1949 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_Name));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>




                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Description\"");

WriteLiteral(">\r\n                                                                              " +
"                              <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Description\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 1959 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                      Write(Html.LabelFor(model => model.t_schedulertask.T_Description));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"                                          <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1961 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.TextAreaFor(model => model.t_schedulertask.T_Description, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1962 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_Description));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_AssociatedScheduleTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 1968 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                                              <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1971 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.RadioButtonListFor(model => model.t_schedulertask.T_AssociatedScheduleTypeID, (SelectList)ViewBag.T_AssociatedScheduleTypeID, new { @onclick = "ChangeScheduleType();", @required = "required", @dataurl = Url.Action("GetAllValueForRB", "T_Scheduletype", new { caller = "T_AssociatedScheduleTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1972 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_StartDateTime\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 1978 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_StartDateTime));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                                              <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start Date Time\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                      <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickert_schedulertask_T_StartDateTime\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                       ");

            
            #line 1982 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                   Write(Html.TextBoxFor(model => model.t_schedulertask.T_StartDateTime, "{0:MM/dd/yyyy hh:mm tt}", new { @class = "form-control", @format = "MM/DD/YYYY hh:mm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                                         <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                                              " +
"                                              <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral(@"></i>
                                                                                                                        </span>
                                                                                                                    </div>
");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 1987 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_StartDateTime));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                                                                                $(function () {
                                                                                                                    $('#datetimepickert_schedulertask_T_StartDateTime').datetimepicker({});
                                                                                                                    $('#t_schedulertask_T_StartDateTime').datetimepicker({});
                                                                                                                });
                                                                                                            </script>
                                                                                                        </div>

                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" id=\"dvRepeat\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                                              " +
"              <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                  <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                                                              " +
"                      <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                              " +
"                          <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\r\n                                                                        " +
"                                <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Recurrence Detail</h3>\r\n                                                        " +
"                                            </div>\r\n                            " +
"                                                                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\r\n                                                                            " +
"                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_AssociatedRecurringScheduleDetailsTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2013 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                                                     " +
"                                       <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2016 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.RadioButtonListFor(model => model.t_schedulertask.T_AssociatedRecurringScheduleDetailsTypeID, (SelectList)ViewBag.T_AssociatedRecurringScheduleDetailsTypeID, new { @onchange = "RepeatTypeChange();", @dataurl = Url.Action("GetAllValueForRB", "T_RecurringScheduleDetailstype", new { caller = "T_AssociatedRecurringScheduleDetailsTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2017 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>


                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_RecurringRepeatFrequencyID\"");

WriteLiteral(">\r\n                                                                              " +
"                              <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"                                  <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2025 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                      Write(Html.LabelFor(model => model.t_schedulertask.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"                                          <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                      <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                       ");

            
            #line 2028 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                   Write(Html.DropDownListFor(model => model.t_schedulertask.T_RecurringRepeatFrequencyID, (SelectList)ViewBag.T_RecurringRepeatFrequencyID, "--Select--", new { @class = "chosen-select form-control", @HostingName = "T_RecurringFrequency", @dataurl = Url.Action("GetAllValue", "T_RecurringFrequency", new { caller = "T_RecurringRepeatFrequencyID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                                         ");

WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                       ");

            
            #line 2030 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                   Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral(@"

                                                                                                                    </div>
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"RepeatOnWeekly\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral("> Repeat On</label>\r\n                                                            " +
"                                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2041 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.DropDownListFor(model => model.t_schedulertask.SelectedT_RecurrenceDays_T_RepeatOn, (MultiSelectList)ViewBag.SelectedT_RecurrenceDays_T_RepeatOn, new { @multiple = "multiple", @HostingName = "T_RecurrenceDays", @dataurl = Url.Action("GetAllMultiSelectValue", "T_RecurrenceDays", null) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                                     ");

WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_RepeatByID\"");

WriteLiteral(" style=\"min-height:35px;display:none;\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2048 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                                                     " +
"                                       <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2051 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.RadioButtonListFor(model => model.t_schedulertask.T_RepeatByID, (SelectList)ViewBag.T_RepeatByID, new { @dataurl = Url.Action("GetAllValueForRB", "T_MonthlyRepeatType", new { caller = "T_RepeatByID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2052 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral("></div>\r\n\r\n                                                                      " +
"                                  <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_RecurringTaskEndTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2060 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                                                     " +
"                                       <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2063 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.RadioButtonListFor(model => model.t_schedulertask.T_RecurringTaskEndTypeID, (SelectList)ViewBag.T_RecurringTaskEndTypeID, new { @onclick = "ChangeEndType()", @dataurl = Url.Action("GetAllValueForRB", "T_RecurringEndType", new { caller = "T_RecurringTaskEndTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2064 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>


                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EndDate\"");

WriteLiteral(">\r\n                                                                              " +
"                              <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2071 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                  Write(Html.LabelFor(model => model.t_schedulertask.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"                                      <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"End Date\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"                                      <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_EndDate\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"                                       ");

            
            #line 2075 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                   Write(Html.TextBoxFor(model => model.t_schedulertask.T_EndDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                                         <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                                              " +
"                                              <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral(@"></i>
                                                                                                                        </span>
                                                                                                                    </div>
");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2080 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                                                                                $(function () {
                                                                                                                    $('#datetimepickerT_EndDate').datetimepicker({ pickTime: false });
                                                                                                                    $('#T_EndDate').datetimepicker({ pickTime: false });
                                                                                                                });
                                                                                                            </script>
                                                                                                        </div>


                                                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_OccurrenceLimitCount\"");

WriteLiteral(">\r\n                                                                              " +
"                              <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Occurrence Limit Count\"");

WriteLiteral(">\r\n                                                                              " +
"                                  <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 2094 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                      Write(Html.LabelFor(model => model.t_schedulertask.T_OccurrenceLimitCount));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                                      " +
"                                          <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2097 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.TextBoxFor(model => model.t_schedulertask.T_OccurrenceLimitCount, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"                                   ");

            
            #line 2098 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                               Write(Html.ValidationMessageFor(model => model.t_schedulertask.T_OccurrenceLimitCount));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>




                                                                                                        ");

WriteLiteral(@"
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>







                                                                                    </div>
                                                                                </div>
");

            
            #line 2128 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                            }



                                                                            else
                                                                            { 
            
            #line default
            #line hidden
            
            #line 2133 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                         Write(Html.HiddenFor(model => model.Roles, new { @class = "form-control", @style = "display:none" }));

            
            #line default
            #line hidden
            
            #line 2133 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral(@"                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>
");

            
            #line 2140 "..\..\Views\BusinessRule\Edit.cshtml"


            
            #line default
            #line hidden
WriteLiteral("                                                        <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"brsubmit\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"hidden btn btn-primary btn-sm\"");

WriteLiteral(" style=\"display:none; \"");

WriteLiteral(" />\r\n");

            
            #line 2142 "..\..\Views\BusinessRule\Edit.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 2142 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype1", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2142 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2143 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype2", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2143 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2144 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype3", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2144 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2145 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype4", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2145 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2146 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype5", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2146 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2147 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype6", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2147 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2148 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype7", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2148 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2149 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype8", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2149 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                      
                                                        
            
            #line default
            #line hidden
            
            #line 2150 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype10", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2150 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                       
                                                        
            
            #line default
            #line hidden
            
            #line 2151 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype11", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2151 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                       
                                                        
            
            #line default
            #line hidden
            
            #line 2152 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblrulecondition", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2152 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2153 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype12", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2153 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                       
    
            
            #line default
            #line hidden
            
            #line 2154 "..\..\Views\BusinessRule\Edit.cshtml"
Write(Html.TextBox("lblruletype13", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2154 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                   
                                                        
            
            #line default
            #line hidden
            
            #line 2155 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype1else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2155 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2156 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype2else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2156 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2157 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype3else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2157 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2158 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype4else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2158 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2159 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype5else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2159 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2160 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype6else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2160 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2161 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype7else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2161 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2162 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype8else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2162 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                          
                                                        
            
            #line default
            #line hidden
            
            #line 2163 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype10else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2163 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                           
                                                        
            
            #line default
            #line hidden
            
            #line 2164 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype11else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2164 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                           
                                                        
            
            #line default
            #line hidden
            
            #line 2165 "..\..\Views\BusinessRule\Edit.cshtml"
                                                   Write(Html.TextBox("lblruletype12else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2165 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                                                           
    
            
            #line default
            #line hidden
            
            #line 2166 "..\..\Views\BusinessRule\Edit.cshtml"
Write(Html.TextBox("lblruletype13else", null, new { @class = "hidden" }));

            
            #line default
            #line hidden
            
            #line 2166 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                       

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"margin-top:-20px;\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                        <i");

WriteLiteral(" class=\"fam-script-lightning pull-left\"");

WriteLiteral("></i>\r\n                                                                        <h" +
"3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Define condition to apply rule</h3>\r\n                                           " +
"                         </div>\r\n                                               " +
"                     <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" id=\"rulecondition\"");

WriteLiteral(">\r\n\r\n                                                                            " +
"<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" id=\"divAlways\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"          <label");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-12\"");

WriteLiteral(">Always </label>\r\n                                                               " +
"                         <div");

WriteLiteral(" class=\"input-group col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"              <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"Always\"");

WriteLiteral(" value=\"Always\"");

WriteLiteral(" id=\"chkAlways\"");

WriteLiteral(@" />
                                                                                            <label>  (Action will always execute and will not require any condition)</label>
                                                                                        </div>

                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"col-sm-3 col-md-3 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <label>Select Property <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2194 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.DropDownList("PropertyList", null, new { @onchange = "FillDateInConditionValue(this);GetSecondLevelAttributeForCondition();", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2195 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.DropDownList("AssociationPropertyList", null, "-- Select --", new { @onchange = "GetSuggestedValues(this);FillDateInConditionForAssociation();", @class = "form-control", @style = "margin-top:8px;display:none;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"         <div");

WriteLiteral(" class=\"col-sm-3 col-md-3 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <label>Select Operator <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"OperatorList\"");

WriteLiteral(" onchange=\"SetValueType(this);\"");

WriteLiteral(">\r\n                                                                              " +
"          <option");

WriteLiteral(" value=\"=\"");

WriteLiteral(">Equals to</option>\r\n                                                            " +
"                            <option");

WriteLiteral(" value=\">\"");

WriteLiteral(">Greater than</option>\r\n                                                         " +
"                               <option");

WriteLiteral(" value=\"<\"");

WriteLiteral(">Less than</option>\r\n                                                            " +
"                            <option");

WriteLiteral(" value=\"<=\"");

WriteLiteral(">Less than Or Equals to</option>\r\n                                               " +
"                                         <option");

WriteLiteral(" value=\">=\"");

WriteLiteral(">Greater than Or Equals to</option>\r\n                                            " +
"                                            <option");

WriteLiteral(" value=\"Contains\"");

WriteLiteral(">Contains</option>\r\n                                                             " +
"                           <option");

WriteLiteral(" value=\"!=\"");

WriteLiteral(">Not Equals to</option>\r\n                                                        " +
"                                <option");

WriteLiteral(" value=\"Changes to anything\"");

WriteLiteral(" disabled>Changes to anything</option>\r\n                                         " +
"                                               <option");

WriteLiteral(" value=\"Match\"");

WriteLiteral(">Match</option>\r\n                                                                " +
"                    </select>\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2212 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBox("ConditionOperator", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"         <div");

WriteLiteral(" class=\"col-sm-3 col-md-3 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <label>Select Value Type<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"ValueTypeList\"");

WriteLiteral(" onchange=\"GetSuggestedValues(this);\"");

WriteLiteral(">\r\n                                                                              " +
"          <option");

WriteLiteral(" value=\"Constant\"");

WriteLiteral(">Constant</option>\r\n                                                             " +
"                           <option");

WriteLiteral(" value=\"Pick From List\"");

WriteLiteral(">Pick From List</option>\r\n                                                       " +
"                                 <option");

WriteLiteral(" value=\"Changes to anything\"");

WriteLiteral(">Changes to anything</option>\r\n                                                  " +
"                                      <option");

WriteLiteral(" value=\"Regular Expression\"");

WriteLiteral(">Regular Expression</option>\r\n                                                   " +
"                                     <option");

WriteLiteral(" value=\"Dynamic\"");

WriteLiteral(">Dynamic</option>\r\n                                                              " +
"                      </select>\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2225 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBox("ConditionValueType", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
" </div>\r\n                                                                       " +
"     </div>\r\n                                                                   " +
"         <div");

WriteLiteral(" class=\"col-sm-3 col-md-3 col-xs-12\"");

WriteLiteral(">\r\n                                                                              " +
"  <label>Property Value <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" style=\"display:none; padding-left:0px;\"");

WriteLiteral(" id=\"dvSuggestedPropertyValue\"");

WriteLiteral(" class=\"col-sm-8 col-md-8 col-xs-8\"");

WriteLiteral(">\r\n                                                                              " +
"          ");

WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2233 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("SuggestedPropertyValue", null, new { @onchange = "FillSugestedValues();", @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2234 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("SuggestedPropertyValues", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"     </div>\r\n\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2237 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBox("ConditionValue", null, new { @class = "col-sm-8 col-md-8 col-xs-8", @style = "border-radius:4px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"     <div");

WriteLiteral(" id=\"dvRule7DynamicValueInCondition\"");

WriteLiteral(" class=\"col-sm-8 col-md-8 col-xs-8\"");

WriteLiteral(" style=\"display:none; padding:0px;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2239 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("SuggestedDynamicValueInCondition7", null, "-- Select --", new { @onchange = "GetSecondLevelAttributeInCondition();", @class = "form-control", @style = "margin:0px;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2240 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("SuggestedDynamicValueInCondition71", null, "-- Select --", new { @class = "form-control", @style = "margin-top:8px;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"     </div>\r\n                                                                   " +
"                 <div");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-4\"");

WriteLiteral(" style=\"padding:0px 0px 0px 5px;\"");

WriteLiteral(">\r\n                                                                              " +
"          <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"LogicalConnectorList\"");

WriteLiteral(">\r\n                                                                              " +
"              <option");

WriteLiteral(" value=\"AND\"");

WriteLiteral(">AND</option>\r\n                                                                  " +
"                          <option");

WriteLiteral(" value=\"OR\"");

WriteLiteral(">OR</option>\r\n                                                                   " +
"                     </select>\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2247 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("LogicalConnector", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"     </div>\r\n\r\n\r\n                                                               " +
"                     <div");

WriteLiteral(" id=\"dvDurationInCondition\"");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(" style=\"display:none; padding:0px; margin-top:5px;\"");

WriteLiteral(">\r\n                                                                              " +
"          <select");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-4\"");

WriteLiteral(" id=\"DateOperatorList\"");

WriteLiteral(" style=\"border-radius:4px 0px 0px 4px;\"");

WriteLiteral(">\r\n                                                                              " +
"              <option");

WriteLiteral(" value=\"+\"");

WriteLiteral(">Add (+)</option>\r\n                                                              " +
"                              <option");

WriteLiteral(" value=\"-\"");

WriteLiteral(">Subtract (-)</option>\r\n                                                         " +
"                               </select>\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2256 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("DurationCount", null, new { @placeholder = "Enter Number", @class = "col-sm-4 col-md-4 col-xs-4", @style = "border-left:0px; border-right:0px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"         <select");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-4\"");

WriteLiteral(" id=\"DurationList\"");

WriteLiteral(" style=\"border-radius:0px 4px 4px 0px;\"");

WriteLiteral(">\r\n\r\n                                                                            " +
"                <option");

WriteLiteral(" value=\"Days\"");

WriteLiteral(">Days</option>\r\n                                                                 " +
"                           <option");

WriteLiteral(" value=\"Weeks\"");

WriteLiteral(">Weeks</option>\r\n                                                                " +
"                            <option");

WriteLiteral(" value=\"Months\"");

WriteLiteral(">Months</option>\r\n                                                               " +
"                             <option");

WriteLiteral(" value=\"Years\"");

WriteLiteral(@">Years</option>
                                                                                        </select>
                                                                                    </div>

                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-lg-12\"");

WriteLiteral(" style=\"margin-top:10px; padding:0px\"");

WriteLiteral(">\r\n                                                                            <b" +
"utton");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction4\"");

WriteLiteral(" onclick=\"AddConditionInGrid()\"");

WriteLiteral(" class=\"btn btn-primary pull-right\"");

WriteLiteral(@">Add Condition</button>
                                                                        </div>

                                                                    </div>

                                                                    <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n");

            
            #line 2276 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                        
            
            #line default
            #line hidden
            
            #line 2276 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                         if ( User.CanView("Condition"))
                                                                        {
                                                                            Html.RenderAction("Index", "Condition", new { RenderPartial = true, HostingEntity = "BusinessRule", HostingEntityID = @Model.Id, AssociatedType = "RuleConditions" });
                                                                        }

            
            #line default
            #line hidden
WriteLiteral(@"                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
");

            
            #line 2284 "..\..\Views\BusinessRule\Edit.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 2284 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                       

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                                                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                        <i");

WriteLiteral(" class=\"fam-lightbulb pull-left\"");

WriteLiteral("></i>\r\n                                                                        <h" +
"3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Define Actions</h3>\r\n                                                           " +
"             <div");

WriteLiteral(" class=\"input-group col-sm-6 col-md-6 col-xs-12 pull-right\"");

WriteLiteral(">\r\n                                                                            <l" +
"abel>  (Select for each action to execute, if condition evaluates- )</label>\r\n");

WriteLiteral("                                                                            ");

            
            #line 2293 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                       Write(Html.RadioButtonList("IsElseActionList"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                        </div>\r" +
"\n                                                                    </div>\r\n\r\n " +
"                                                                   <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"padding-top:10px;\"");

WriteLiteral(">\r\n                                                                            <l" +
"abel");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-2\"");

WriteLiteral("></label>\r\n                                                                      " +
"      <div");

WriteLiteral(" class=\"col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(" id=\"dvActions\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" id=\"ActionList\"");

WriteLiteral(" class=\"input-group newradiocontainer\"");

WriteLiteral(">\r\n                                                                              " +
"          <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" style=\"margin-top:-4px;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2304 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.RadioButtonList("ActionList", actionListItems));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2305 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.TextBox("ActionListValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"ActionTriggerType\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                                                            <i" +
"nput");

WriteLiteral(" id=\"chk1\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" disabled /> On Fetch\r\n                                                          " +
"                  <input");

WriteLiteral(" id=\"chk2\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" disabled");

WriteLiteral(" style=\"margin-left:5px;\"");

WriteLiteral(" /> On Save\r\n                                                                    " +
"        <input");

WriteLiteral(" id=\"chk3\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" disabled");

WriteLiteral(" style=\"margin-left:5px;\"");

WriteLiteral(" /> After Save\r\n                                                                 " +
"       </div>\r\n                                                                 " +
"   </div>\r\n\r\n\r\n                                                                 " +
"   <div");

WriteLiteral(" id=\"ruletype4\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(" style=\"border:0px !important\"");

WriteLiteral(">\r\n\r\n                                                                            " +
"<div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"border:0px !important\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Notify within days <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2326 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("TimeValue", null, new { @placeholder = "Days within to notify, 0 for immediate", @required = "required", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" name=\"dvNotifyTo\"");

WriteLiteral(" id=\"dvNotify\"");

WriteLiteral(">\r\n                                                                              " +
"          <label>Notify to <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                          <br />\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2333 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("cmbNotifyTo", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2334 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("NotifyTo", null, new { style = "border:none !important;Width:0px !important;" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Specify extra email-ids </label>\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2340 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextArea("NotifyToExtra", null, new { @placeholder = "Notify some these people also", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" name=\"dvNotifyRoleTo\"");

WriteLiteral(" id=\"dvRoleNotify\"");

WriteLiteral(">\r\n                                                                              " +
"          <label>Notify to Roles <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral("></span></label>\r\n                                                               " +
"                         <br />\r\n\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2348 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("NotifyRoleList", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2349 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("NotifyToRole", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>


                                                                                <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(@">
                                                                                        <label>Notification Message </label>
                                                                                        <label>(###Record### to display record, ###RecordLink### to display hyperlink of record)</label>
");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2358 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextArea("AlertMessage", null, new { @placeholder = "Alert Message for notification", @class = "form-control xyz" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"         <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction4\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype4\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-right\"");

WriteLiteral(" style=\"margin-top:5px;\"");

WriteLiteral(@">Add Action</button>

                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"ruletype23\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Select Properties<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      </div>\r\n                                                  " +
"                                  <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2376 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("PropertyList1", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2377 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("PropertyList1Value", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction23\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype23\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(@">Add Action</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"ruletype12\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Select Groups<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      </div>\r\n                                                  " +
"                                  <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2392 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("GroupList", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2393 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.TextBox("GroupListValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction12\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype12\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(@">Add Action</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"ruletype5\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Select Dropdown<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      </div>\r\n                                                  " +
"                                  <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2408 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("Dropdown", null, "-- Select --", new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction5\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype5\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(@">Add Action</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"ruletype7\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"              <label>Select Property <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                              ");

WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2424 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.DropDownList("PropertyList7", null, "-- Select --", new { @required = "required", @onchange = "FillDateInConditionValue(this);GetSecondLevelAttributeForCondition7();", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2425 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.TextBox("PropertyList7Value", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2426 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.DropDownList("AssociationPropertyList7", null, "-- Select --", new { @onchange = "GetSuggestedValues(this);FillDateInConditionForAssociation();", @class = "form-control", @style = "margin-top:8px;display:none;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                        </div>
                                                                                    </div>
                                                                                    <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"              <label> Value Type <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                              <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"Rule7Operator\"");

WriteLiteral(" onchange=\"GetConstantValue();\"");

WriteLiteral(">\r\n                                                                              " +
"                  <option");

WriteLiteral(" value=\"1\"");

WriteLiteral(">Constant</option>\r\n                                                             " +
"                                   <option");

WriteLiteral(" value=\"2\"");

WriteLiteral(">Pick From List</option>\r\n                                                       " +
"                                         <option");

WriteLiteral(" value=\"3\"");

WriteLiteral(@">Dynamic</option>
                                                                                            </select>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Property Value <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                          <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                                                 " +
"           ");

            
            #line 2443 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                       Write(Html.TextBox("Rule7Value", null, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"             <div");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" id=\"dvRule7Value\"");

WriteLiteral(">\r\n                                                                              " +
"                  ");

WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"               ");

            
            #line 2446 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                           Write(Html.DropDownList("SuggestedPropertyValue7", null, new { @onchange = "FillSugestedValues7();", @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"             </div>\r\n                                                           " +
"                                 <div");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" id=\"dvRule7DynamicValue\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"               ");

            
            #line 2449 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                           Write(Html.DropDownList("SuggestedDynamicValue7", null, "-- Select --", new { @onchange = "GetSecondLevelAttribute();", @class = "form-control", @style = "margin-top:8px;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                                                 " +
"               ");

            
            #line 2450 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                           Write(Html.DropDownList("SuggestedDynamicValue71", null, "-- Select --", new { @onchange = "FillSugestedDynamicValues7();", @class = "form-control", @style = "margin-top:8px;", @HostingName = "", @dataurl = "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"             </div>\r\n                                                           " +
"                                 <div");

WriteLiteral(" id=\"dvDurationInAction\"");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(" style=\"display:none; padding:0px; margin-top:5px;\"");

WriteLiteral(">\r\n                                                                              " +
"                  <select");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-4\"");

WriteLiteral(" id=\"DateOperatorListInAction\"");

WriteLiteral(" style=\"border-radius:4px 0px 0px 4px;\"");

WriteLiteral(">\r\n                                                                              " +
"                      <option");

WriteLiteral(" value=\"+\"");

WriteLiteral(">Add (+)</option>\r\n                                                              " +
"                                      <option");

WriteLiteral(" value=\"-\"");

WriteLiteral(">Subtract (-)</option>\r\n                                                         " +
"                                       </select>\r\n");

WriteLiteral("                                                                                 " +
"               ");

            
            #line 2457 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                           Write(Html.TextBox("DurationCountInAction", null, new { @placeholder = "Enter Number", @class = "col-sm-4 col-md-4 col-xs-4", @style = "border-left:0px; border-right:0px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                                               " +
"                 <select");

WriteLiteral(" class=\"col-sm-4 col-md-4 col-xs-4\"");

WriteLiteral(" id=\"DurationListInAction\"");

WriteLiteral(" style=\"border-radius:0px 4px 4px 0px;\"");

WriteLiteral(">\r\n                                                                              " +
"                      <option");

WriteLiteral(" value=\"Days\"");

WriteLiteral(">Days</option>\r\n                                                                 " +
"                                   <option");

WriteLiteral(" value=\"Weeks\"");

WriteLiteral(">Weeks</option>\r\n                                                                " +
"                                    <option");

WriteLiteral(" value=\"Months\"");

WriteLiteral(">Months</option>\r\n                                                               " +
"                                     <option");

WriteLiteral(" value=\"Years\"");

WriteLiteral(@">Years</option>
                                                                                                </select>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction7\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype7\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-right\"");

WriteLiteral(" style=\"margin-top:5px;\"");

WriteLiteral(@">Add Action</button>
                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"ruletype8\"");

WriteLiteral(" class=\"collapse\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                              " +
"  <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"      <div");

WriteLiteral(" class=\'col-sm-4\'");

WriteLiteral(">\r\n                                                                              " +
"          <label>Select Verb<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                              " +
"                      </div>\r\n                                                  " +
"                                  <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"       ");

            
            #line 2481 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                   Write(Html.DropDownList("EntityVerb", null, "-- Select --", new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                    </div>
                                                                                </div>
                                                                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnAddAction8\"");

WriteLiteral(" onclick=\"AddActionInGrid(\'ruletype8\')\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(@">Add Action</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" style=\"padding-top:5px;\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n");

            
            #line 2489 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                        
            
            #line default
            #line hidden
            
            #line 2489 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                         if ( User.CanView("RuleAction"))
                                                                        {
                                                                            Html.RenderAction("Index", "RuleAction", new { RenderPartial = true, HostingEntity = "BusinessRule", HostingEntityID = @Model.Id, AssociatedType = "RuleAction", EntityNameRuleAction = ViewBag.EntityNameRuleAction });
                                                                        }

            
            #line default
            #line hidden
WriteLiteral(@"                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
");

            
            #line 2497 "..\..\Views\BusinessRule\Edit.cshtml"


                                                        
            
            #line default
            #line hidden
            
            #line 2499 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                                    

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12 \"");

WriteLiteral(">\r\n                                                                <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                                                                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                                                        <i");

WriteLiteral(" class=\"fam-script-lightning pull-left\"");

WriteLiteral("></i>\r\n                                                                        <h" +
"3");

WriteLiteral(" style=\"padding-left:10px;\"");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Define Messages</h3>\r\n                                                          " +
"          </div>\r\n                                                              " +
"      <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                                                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12 hidden\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-12\"");

WriteLiteral(">Information Message</label>\r\n                                                   " +
"                             <div");

WriteLiteral(" class=\"input-group col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2512 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBoxFor(model => model.InformationMessage, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div");

WriteLiteral(" class=\"col-sm-12 col-md-12 col-xs-12\"");

WriteLiteral(">\r\n                                                                            <d" +
"iv");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                                              " +
"  <label");

WriteLiteral(" class=\"col-sm-2 col-md-2 col-xs-12\"");

WriteLiteral(">Custom Message</label>\r\n                                                        " +
"                        <div");

WriteLiteral(" class=\"input-group col-sm-10 col-md-10 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                                 " +
"   ");

            
            #line 2520 "..\..\Views\BusinessRule\Edit.cshtml"
                                                                               Write(Html.TextBoxFor(model => model.FailureMessage, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
");

            
            #line 2528 "..\..\Views\BusinessRule\Edit.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                        ");

WriteLiteral("\r\n                        <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"JournalEntryToBusinessRuleRelation\"");

WriteLiteral(">\r\n");

            
            #line 2532 "..\..\Views\BusinessRule\Edit.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 2532 "..\..\Views\BusinessRule\Edit.cshtml"
                              Html.RenderAction("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "BusinessRule", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry" });
            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n                        <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"TaskHistory\"");

WriteLiteral(">\r\n");

            
            #line 2535 "..\..\Views\BusinessRule\Edit.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 2535 "..\..\Views\BusinessRule\Edit.cshtml"
                              Html.RenderAction("TaskHistory", "BusinessRule", new { RenderPartial = true, HostingEntity = "BusinessRule", HostingEntityID = @Model.Id });
            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </d" +
"iv>\r\n                ");

WriteLiteral("\r\n            </div>\r\n        </div>\r\n        ");

WriteLiteral("\r\n    </div>\r\n");

WriteLiteral("    ");

            
            #line 2544 "..\..\Views\BusinessRule\Edit.cshtml"
Write(Html.ActionLink("Back To List", "Cancel", new { UrlReferrer = ViewData["BusinessRuleParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <input");

WriteLiteral(" type=\"button\"");

WriteLiteral(" onclick=\"$(\'#brsubmit\').click()\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n    <div");

WriteLiteral(" class=\"modal fade\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(" id=\"dvalert\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"modal-dialog\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"modal-content\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"modal-header\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"close\"");

WriteLiteral(" onclick=\"closealert();\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">&times;</button>\r\n                    <center><h4");

WriteLiteral(" class=\"modal-title\"");

WriteLiteral(">Validation Alert</h4></center>\r\n                    <div");

WriteLiteral(" class=\"alert alert-warning\"");

WriteLiteral(" id=\"alertbody\"");

WriteLiteral(">\r\n                    </div>\r\n                    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" onclick=\"closealert();\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </d" +
"iv>\r\n</div>\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 180353), Tuple.Create("\"", 180401)
, Tuple.Create(Tuple.Create("", 180359), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/Common2/bootstrap-multiselect.js")
, 180359), false)
);

WriteLiteral("></script>\r\n<script>\r\n    $(document).ready(function () {\r\n        $(\'select[mult" +
"iple=\"multiple\"]\').each(function () {\r\n            $(this).multiselect({ buttonW" +
"idth: \'100%\' });\r\n        });\r\n        $(\'select[name=RoleList]\').multiselect({\r" +
"\n            buttonWidth: \'100%\'\r\n        });\r\n        $(\'select[name=NotifyRole" +
"List]\').multiselect({\r\n            buttonWidth: \'100%\'\r\n        });\r\n        $(\'" +
"select[name=EntityVerb]\').multiselect({\r\n            buttonWidth: \'100%\'\r\n      " +
"  });\r\n        $(\'div[name=dvRoles]\').each(function (e) {\r\n            catname =" +
" $(this).attr(\'id\');\r\n            var firstInput = $(\"#\" + catname).find(\'input[" +
"type=hidden],input[type=text],input[type=password],input[type=radio],input[type=" +
"checkbox],textarea,select\').filter(\':visible:first\');\r\n            var firstButt" +
"on = $(\"#\" + catname).find(\'button\').filter(\':first\');\r\n            var firstSel" +
"ect = $(\"#\" + catname).find(\'select\').filter(\':first\');\r\n            var txtid =" +
" firstInput.attr(\'id\');\r\n            var selectid = firstSelect.attr(\'id\');\r\n   " +
"         var btntitle = firstButton.attr(\'title\');\r\n            if (firstInput !" +
"= null) {\r\n                var txtvalue = $(\"#\" + txtid).attr(\'value\');\r\n       " +
"         if (txtvalue != undefined && txtvalue.length > 0) {\r\n                  " +
"  var separated = txtvalue.split(\",\");\r\n                    for (var i = 0, leng" +
"th = separated.length; i < length; i++) {\r\n                        var chunk = $" +
".trim(separated[i]);\r\n                        var ele = document.getElementById(" +
"selectid);\r\n                        for (var o = 0; o < ele.options.length; o++)" +
" {\r\n                            if ($.trim(ele.options[o].value) == chunk) {\r\n  " +
"                              ele.options[o].selected = true;\r\n                 " +
"           }\r\n                        }\r\n                    } $(\"#\" + selectid)" +
".multiselect(\'refresh\');\r\n                }\r\n            }\r\n        });\r\n    });" +
"\r\n</script>\r\n<script>\r\n    $(\"form\").submit(function () {\r\n        try {\r\n      " +
"      $(\'#PropertyList1Value\').val(($(\'#PropertyList1\').val()));\r\n            $(" +
"\'#PropertyList7Value\').val(($(\'#PropertyList7\').val()));\r\n            $(\'#RoleLi" +
"stValue\').val(($(\'#RoleList\').val()));\r\n            $(\'#NotifyToRole\').val(($(\'#" +
"NotifyRoleList\').val()));\r\n            $(\'#TimeRuleApplyOnValue\').val($(\'#TimeRu" +
"leApplyOn\').val());\r\n        } catch (ex) { }\r\n        $(\'div[name=dvNotifyTo]\')" +
".each(function (e) {\r\n            catname = $(this).attr(\'id\');\r\n            var" +
" firstInput = $(\"#\" + catname).find(\'input[type=hidden],input[type=text],input[t" +
"ype=password],input[type=radio],input[type=checkbox],textarea,select\').filter(\':" +
"visible:first\');\r\n            var firstButton = $(\"#\" + catname).find(\'button\')." +
"filter(\':first\');\r\n            var txtid = firstInput.attr(\'id\');\r\n            v" +
"ar btntitle = firstButton.attr(\'title\');\r\n            var value = $(\'#cmbNotifyT" +
"o\').val();\r\n            if (firstButton != null) {\r\n                if (btntitle" +
" != \'None selected\')\r\n                    $(\"#\" + txtid).val(value);\r\n          " +
"      else\r\n                    $(\"#\" + txtid).val(\'\');\r\n            }\r\n        " +
"});\r\n        var ruleType = \"\";\r\n        if ($(\"#\" + \"OnAdd\").is(\':checked\') && " +
"$(\"#\" + \"OnUpdate\").is(\':checked\'))\r\n            ruleType = \"3\";\r\n        else i" +
"f ($(\"#\" + \"OnUpdate\").is(\':checked\'))\r\n            ruleType = \"2\";\r\n        els" +
"e if ($(\"#\" + \"OnAdd\").is(\':checked\'))\r\n            ruleType = \"1\";\r\n        els" +
"e if ($(\"#\" + \"OnPropertyChange\").is(\':checked\'))\r\n            ruleType = \"4\";\r\n" +
"        if ($(\"#\" + \"Scheduled\").is(\':checked\')) {\r\n            ruleType = \"5\";\r" +
"\n            SaveDateTimeBR(\"t_schedulertask_T_StartDateTime\");\r\n        }\r\n    " +
"    if ($(\"#\" + \"BeforeSave\").is(\':checked\'))\r\n            ruleType = \"6\";\r\n    " +
"    $(\"#AssociatedBusinessRuleTypeID\").val(ruleType);\r\n        var flag = false;" +
"\r\n        if (ruleType == \"5\") {\r\n            $(\"#tblActionList tr td:nth-child(" +
"2)\").filter(function (i) {\r\n                if ($(this).html().indexOf(\'Make Rec" +
"ords Readonly\') >= 0 || $(this).html().indexOf(\'ReadOnly Properties\') >= 0\r\n    " +
"                || $(this).html().indexOf(\'Mandatory Properties\') >= 0 || $(this" +
").html().indexOf(\'Filter Dropdown\') >= 0\r\n                    || $(this).html()." +
"indexOf(\'Hidden Properties\') >= 0)\r\n                    flag = true;\r\n          " +
"  });\r\n            if (flag) {\r\n                alert(\"Please select appropriate" +
" Action Type with Schedule.\");\r\n                return false;\r\n            }\r\n  " +
"      }\r\n        if ($(\'input[name=ActionList]:checked\').val() == \"5\" && ($(\"#\" " +
"+ \"lblrulecondition\").val() == \"Id,>,0,AND?\" || $(\'table#tblConditionList tr#idA" +
"lways\').length > 0)) {\r\n            flag = true;\r\n        }\r\n        $(\"#tblActi" +
"onList tr td:nth-child(2)\").filter(function (i) {\r\n            if ($(this).html(" +
").indexOf(\'Filter Dropdown\') >= 0 && $(\'table#tblConditionList tr#idAlways\').len" +
"gth > 0) {\r\n                flag = true;\r\n            }\r\n        });\r\n        if" +
" (flag) {\r\n            alert(\"Filter Dropdown requires condition. It can\'t be us" +
"ed with \'Always\'.\");\r\n            return false;\r\n        }\r\n        if ($(\'#chkA" +
"lways\').is(\":checked\")) {\r\n            var flagAlways = false;\r\n            $(\'#" +
"tblActionList tr\').each(function () {\r\n                if ($(this).closest(\'tr\')" +
".find(\'td:eq(2)\').text() == \"true\") {\r\n                    flagAlways = true;\r\n " +
"               }\r\n                if ($(this).closest(\'tr\').find(\'td:eq(3)\').fin" +
"d(\':checkbox\').is(\':checked\')) {\r\n                    flagAlways = true;\r\n      " +
"          }\r\n            });\r\n            if (flagAlways) {\r\n                ale" +
"rt(\"Always in Condition & Action for Else Condition can\'t be used.\");\r\n         " +
"       return false;\r\n            }\r\n        }\r\n    });\r\n</script>\r\n\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
