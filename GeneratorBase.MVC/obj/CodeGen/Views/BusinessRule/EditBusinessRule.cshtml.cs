#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.BusinessRule
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/BusinessRule/EditBusinessRule.cshtml")]
    public partial class EditBusinessRule : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.BusinessRule>
    {
        public EditBusinessRule()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
  
    ViewBag.Title = "Create Business Rule";
    var Roles = Model.Roles;
    var RuleType = Model.associatedbusinessruletype.TypeNo;

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign text-primary\"");

WriteLiteral("></i> Business Rule  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Create</span>\r\n");

WriteLiteral("            ");

            
            #line 11 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
       Write(Html.ActionLink("Back To List", "Cancel", new { UrlReferrer = ViewData["BusinessRuleParentUrl"] }, new { @class = "btn btn-default btn-sm small pull-right" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </h1>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 672), Tuple.Create("\"", 730)
            
            #line 16 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
, Tuple.Create(Tuple.Create("", 679), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Content/bootstrap-multiselect.css")
            
            #line default
            #line hidden
, 679), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n");

            
            #line 17 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
 if (@ViewBag.IsContainsCondition == true)
{

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillcondition() {\r\n            $(\"#\" + \"PropertyList\").val(\'");

            
            #line 21 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                    Write(Model.ruleconditions.FirstOrDefault().PropertyName);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n        }\r\n    </script>\r\n");

            
            #line 24 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("     <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillcondition() {\r\n        }\r\n    </script>\r\n");

            
            #line 31 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}

            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
 if(Model.ruleaction.FirstOrDefault().actionarguments.FirstOrDefault(p=>p.ParameterName == "NotifyOn") != null)
{

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillNotifyOn() {\r\n            var roles = \"");

            
            #line 36 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                    Write(Model.ruleaction.FirstOrDefault().actionarguments.FirstOrDefault(p=>p.ParameterName == "NotifyOn").ParameterValue);

            
            #line default
            #line hidden
WriteLiteral(@""".split("","");
            var eleRoles = document.getElementById(""TimeRuleApplyOn"");
            for (i = 0; i < roles.length; i++) {
                for (var o = 0; o < eleRoles.options.length; o++) {
                    if (eleRoles.options[o].value == roles[i])
                        eleRoles.options[o].selected = true;
                }
            }
        }
    </script>
");

            
            #line 46 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillNotifyOn() {\r\n        }\r\n    </script>\r\n");

            
            #line 53 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}

            
            #line default
            #line hidden
            
            #line 54 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
 if (Model.ruleaction.FirstOrDefault().actionarguments.FirstOrDefault(p => p.ParameterName == "NotifyTo") != null)
{

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n       function fillcmbNotifyTo() {\r\n            var roles = \"");

            
            #line 58 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                    Write(Model.ruleaction.First().actionarguments.First(p => p.ParameterName == "NotifyTo").ParameterValue);

            
            #line default
            #line hidden
WriteLiteral(@""".split("","");
            var eleRoles = document.getElementById(""cmbNotifyTo"");
            for (i = 0; i < roles.length; i++) {
                for (var o = 0; o < eleRoles.options.length; o++) {
                    if (eleRoles.options[o].value == roles[i])
                        eleRoles.options[o].selected = true;
                }
            }
        }
    </script>
");

            
            #line 68 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("     <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n       function fillcmbNotifyTo() {\r\n        }\r\n    </script>\r\n");

            
            #line 75 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}

            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
 if (Model.ruleaction.FirstOrDefault(p =>p.associatedactiontype!=null && p.associatedactiontype.DisplayValue.Contains("Mandatory")) != null)
{

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillPropertyRuleProps() {\r\n            var roles = \"");

            
            #line 80 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                    Write(String.Join(",", Model.ruleaction.FirstOrDefault(p => p.associatedactiontype.DisplayValue.Contains("Mandatory") || p.associatedactiontype.DisplayValue.Contains("Readonly")).actionarguments.Select(q => q.ParameterName)));

            
            #line default
            #line hidden
WriteLiteral(@""".split("","");
            var eleRoles = document.getElementById(""PropertyList1"");
            for (i = 0; i < roles.length; i++) {
                for (var o = 0; o < eleRoles.options.length; o++) {
                    if (eleRoles.options[o].value == roles[i])
                        eleRoles.options[o].selected = true;
                }
            }
        }
    </script>
");

            
            #line 90 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}
else
{

            
            #line default
            #line hidden
WriteLiteral("     <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n        function fillPropertyRuleProps() {\r\n        }\r\n    </script>\r\n");

            
            #line 97 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" language=\"javascript\"");

WriteLiteral(">\r\n    function fillRoles() {\r\n        var roles = \"");

            
            #line 100 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                Write(Roles);

            
            #line default
            #line hidden
WriteLiteral(@""".split("","");
        var eleRoles = document.getElementById(""RoleList"");
        for (i = 0; i < roles.length; i++) {
            for (var o = 0; o < eleRoles.options.length; o++) {
                if (eleRoles.options[o].value == roles[i])
                    eleRoles.options[o].selected = true;
            }
        }
    }
    function toggleCriteria(obj) {
        $('#rulecondition').toggle();
        if ($(obj).html() == ""Add Criteria"")
            $(obj).html(""Remove Criteria"");
        else
            $(obj).html(""Add Criteria"");
    }
    function showProperties(val) {
        var SelectedText = $('#EntityList :selected').val();
        $('#EntityName').val(SelectedText);
        $.ajax({
            url: '");

            
            #line 120 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
             Write(Url.Action("GetAllAssociationsofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedText,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = """";
                for (i = 0; i < result.length; i++) {
                    optionDOM += '<option value=""' + result[i].Key + '"">' + result[i].Value + '</option>';
                }
                $(""#"" + ""cmbNotifyTo"").html(optionDOM);
                if(val==1)
                    fillcmbNotifyTo();
                $(""#"" + ""cmbNotifyTo"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
        $.ajax({
            url: '");

            
            #line 138 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
             Write(Url.Action("GetPropertiesofEntity", "BusinessRule"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?Entity=' + SelectedText,
            type: ""GET"",
            cache: false,
            success: function (result) {
                var optionDOM = """";
                for (i = 0; i < result.length; i++) {
                    optionDOM += '<option value=""' + result[i].Name + '"">' + result[i].DisplayName + '</option>';
                }
                $(""#"" + ""PropertyList"").html(optionDOM);
                $(""#"" + ""PropertyList1"").html(optionDOM);
                if (val == 1)
                { fillcondition(); fillPropertyRuleProps(); }
                $(""#"" + ""PropertyList1"").multiselect('rebuild');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(""error"");
            }
        })
    }
    function showhidepanels() {
        var SelectedText = $('#AssociatedBusinessRuleTypeID :selected').val();
        $('div[name=ruletype]').each(function (e) {
            $(this).hide();
        });
        if (SelectedText.length == 1 && SelectedText != 3)
            $('#rulecondition').show();
        try {
            $('#ruletype' + SelectedText).show();
        } catch (ex) { }
    }
    $(document).ready(function () {
        showhidepanels(); showProperties(1);
        if ('");

            
            #line 170 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
        Write(RuleType);

            
            #line default
            #line hidden
WriteLiteral("\' == \'3\' && \'");

            
            #line 170 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                              Write(ViewBag.IsContainsCondition);

            
            #line default
            #line hidden
WriteLiteral(@"'=='True') {
            $(""#btnCriteria"").click();
        }
        fillRoles(); fillNotifyOn()
        $('#EntityName').val($('#EntityList :selected').val());
        $('#ConditionOperator').val($('#OperatorList :selected').val());
        $('#OperatorList').change(function () {
            var SelectedText = $('#OperatorList :selected').val();
            $('#ConditionOperator').val(SelectedText);
        });
        $('#AssociatedBusinessRuleTypeID').change(function () {
            showhidepanels();
        });
        $('#EntityList').change(function () {
            showProperties(0);
        });
    });
</script>
<link");

WriteAttribute("href", Tuple.Create(" href=\"", 7602), Tuple.Create("\"", 7651)
, Tuple.Create(Tuple.Create("", 7609), Tuple.Create<System.Object, System.Int32>(Href("~/Content/bootstrap-datetimepicker.min.css")
, 7609), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n");

            
            #line 189 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
 using (Html.BeginForm("CreateBusinessRule", "BusinessRule", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    
            
            #line default
            #line hidden
            
            #line 191 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 191 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                            ;
    Html.ValidationSummary(true);
    Html.EnableClientValidation();

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                <label>");

            
            #line 201 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                  Write(Html.LabelFor(model => model.RuleName));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                ");

            
            #line 202 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.TextBoxFor(model => model.RuleName, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 203 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n           " +
"             <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"cmbEntity\"");

WriteLiteral(" style=\"height:70px;\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                <label>Select Entity <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                ");

            
            #line 209 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.DropDownList("EntityList", null, "-- Select --", new { @required = "required", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 210 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.ValidationMessageFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 211 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.TextBoxFor(model => model.EntityName, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n           " +
"             <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                <label>Select Type of Rule <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 218 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                               Write(Html.DropDownList("AssociatedBusinessRuleTypeID", null, "-- Select --", new { @required = "required", @class = "chosen-select form-control", @HostingName = "BusinessRuletype", @dataurl = Url.Action("GetAllValue", "BusinessRuletype", null) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 219 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                               Write(Html.ValidationMessageFor(model => model.AssociatedBusinessRuleTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n   " +
"                     </div>\r\n                        <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                <label>");

            
            #line 225 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                  Write(Html.LabelFor(model => model.Roles));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                <br />\r\n");

WriteLiteral("                                ");

            
            #line 227 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.DropDownList("RoleList", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 228 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.TextBox("RoleListValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 229 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                           Write(Html.ValidationMessageFor(model => model.Roles));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n           " +
"             <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" id=\"rulecondition\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fam-lightbulb\"");

WriteLiteral("></i>\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Define condition for Rule </h3>\r\n                                </div>\r\n       " +
"                         <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                    <div>\r\n                                   " +
"     <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                    <label>Select Property <sp" +
"an");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                                    ");

            
            #line 244 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                               Write(Html.DropDownList("PropertyList", null, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </div>\r\n                       " +
"                     </div>\r\n                                            <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                    <label>Select Operator <sp" +
"an");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                    <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"OperatorList\"");

WriteLiteral(">\r\n                                                        <option ");

            
            #line 251 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == "="?"selected=selected":"");

            
            #line default
            #line hidden
WriteLiteral("  value=\"=\">Equals to</option>\r\n                                                 " +
"       <option ");

            
            #line 252 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == ">" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\">\">Greater than</option>\r\n                                               " +
"         <option ");

            
            #line 253 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == "<" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"<\">Less than</option>\r\n                                                  " +
"      <option ");

            
            #line 254 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == "<=" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"<=\">Less than Or Equals to</option>\r\n                                    " +
"                    <option ");

            
            #line 255 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == ">=" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\">=\">Greater than Or Equals to</option>\r\n                                 " +
"                       <option ");

            
            #line 256 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == "Contains" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"Contains\">Contains</option>\r\n                                            " +
"            <option ");

            
            #line 257 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                            Write(Model.ruleconditions.FirstOrDefault() != null && Model.ruleconditions.FirstOrDefault().Operator == "!=" ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"!=\">Not Equals to</option>\r\n                                             " +
"       </select>\r\n");

WriteLiteral("                                                    ");

            
            #line 259 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                               Write(Html.TextBox("ConditionOperator", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </div>\r\n                       " +
"                     </div>\r\n                                            <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                    <label>Property Value <spa" +
"n");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                                    ");

            
            #line 265 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                               Write(Html.TextBox("ConditionValue", Model.ruleconditions.FirstOrDefault() != null ? Model.ruleconditions.FirstOrDefault().Value:null, new { @class = "form-control", @required = "required" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" id=\"ruletype2\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fam-book-edit\"");

WriteLiteral("></i>\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Make properties readonly/mandatory based on condition</h3>\r\n                    " +
"            </div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                <label>Select Rule</label>\r\n  " +
"                                              <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" id=\"PropertyRule\"");

WriteLiteral(">\r\n                                                    <option ");

            
            #line 285 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                        Write(Model.ruleaction.FirstOrDefault(p =>p.associatedactiontype!=null && p.associatedactiontype.DisplayValue.Contains("Readonly")) != null ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"4\">Readonly</option>\r\n                                                   " +
" <option ");

            
            #line 286 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                                        Write(Model.ruleaction.FirstOrDefault(p =>p.associatedactiontype != null && p.associatedactiontype.DisplayValue.Contains("Mandatory")) != null ? "selected=selected" : "");

            
            #line default
            #line hidden
WriteLiteral(" value=\"2\">Mandatory</option>\r\n                                                </" +
"select>\r\n");

WriteLiteral("                                                ");

            
            #line 288 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                           Write(Html.TextBox("PropertyRuleValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                        <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                <label>Select Property<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                <br />\r\n");

WriteLiteral("                                                ");

            
            #line 295 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                           Write(Html.DropDownList("PropertyList1", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 296 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                           Write(Html.TextBox("PropertyList1Value", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" id=\"ruletype3\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fam-clock-add\"");

WriteLiteral("></i>\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Time-based notification alert</h3>\r\n                                </div>\r\n    " +
"                            <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label>Notify within days <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n");

WriteLiteral("                                            ");

            
            #line 313 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.TextBox("TimeValue", (string)ViewBag.TimeValue, new { @placeholder = "Days within to notify, 0 for immediate", @required = "required", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" name=\"dvNotifyTo\"");

WriteLiteral(" id=\"dvNotify\"");

WriteLiteral(">\r\n                                            <label>Notify to <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                            <br />\r\n");

WriteLiteral("                                            ");

            
            #line 320 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.TextBox("NotifyTo", null, new { style = "border:none !important;Width:0px !important;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                            ");

            
            #line 321 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.DropDownList("cmbNotifyTo", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                    <div");

WriteLiteral(" style=\"clear:both;\"");

WriteLiteral("></div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label>Specify extra email-ids </l" +
"abel>\r\n");

WriteLiteral("                                            ");

            
            #line 328 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.TextArea("NotifyToExtra", (string)ViewBag.NotifyToExtra, new { @placeholder = "Notify some these people also", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label>Notification Message</label" +
">\r\n");

WriteLiteral("                                            ");

            
            #line 334 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.TextArea("AlertMessage", (string)ViewBag.AlertMessage, new { @placeholder = "Alert Message for notification", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label>Notify on</label>\r\n");

WriteLiteral("                                            ");

            
            #line 340 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.DropDownList("TimeRuleApplyOn", null, new { @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                            ");

            
            #line 341 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                                       Write(Html.TextBox("TimeRuleApplyOnValue", null, new { @class = "form-control hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"     </div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnCriteria\"");

WriteLiteral(" onclick=\"toggleCriteria(this);\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(">Add Criteria</button>\r\n                                        </div>\r\n         " +
"                           </div>\r\n                                </div>\r\n     " +
"                       </div>\r\n                        </div>\r\n                 " +
"       <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" id=\"ruletype4\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"ruletype\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fam-email-add\"");

WriteLiteral("></i>\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Email to pre-defined people on create/edit</h3>\r\n                               " +
" </div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 359 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
                               Write(Html.TextArea("Emailids", null, new { @plcaceholder = "Provide comma separated email-ids", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n   " +
"                     </div>\r\n                    </div>\r\n                </div>\r" +
"\n            </div>\r\n        </div>\r\n    </div>\r\n");

WriteLiteral("    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Cancel</button>\r\n");

WriteLiteral("    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Update\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

            
            #line 370 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
}

            
            #line default
            #line hidden
            
            #line 371 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
Write(Scripts.Render("~/bundles/jqueryval"));

            
            #line default
            #line hidden
WriteLiteral("\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 22322), Tuple.Create("\"", 22362)
, Tuple.Create(Tuple.Create("", 22328), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/Common3/chosen.jquery.js")
, 22328), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    $(document).ready(function () {
        $('select[name=RoleList]').multiselect({
            buttonWidth: '100%'
        });
        $('select[name=cmbNotifyTo]').multiselect({
            buttonWidth: '100%'
        });
        $('select[name=PropertyList1]').multiselect({
            buttonWidth: '100%'
        });
        $('select[name=TimeRuleApplyOn]').multiselect({
            buttonWidth: '100%'
        });
    });
</script>
<script");

WriteAttribute("src", Tuple.Create(" src=\"", 22894), Tuple.Create("\"", 22958)
            
            #line 389 "..\..\Views\BusinessRule\EditBusinessRule.cshtml"
, Tuple.Create(Tuple.Create("", 22900), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")
            
            #line default
            #line hidden
, 22900), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@"></script>
<script>
    $(""form"").submit(function () {
        try {
            $('#PropertyList1Value').val(($('#PropertyList1').val()));
            $('#RoleListValue').val(($('#RoleList').val()));
            $('#PropertyRuleValue').val($('#PropertyRule :selected').val());
            $('#TimeRuleApplyOnValue').val($('#TimeRuleApplyOn').val());
        } catch (ex) { }
        $('div[name=dvNotifyTo]').each(function (e) {
            catname = $(this).attr('id');
            var firstInput = $(""#"" + catname).find('input[type=text],input[type=password],input[type=radio],input[type=checkbox],textarea,select').filter(':visible:first');
            var firstButton = $(""#"" + catname).find('button').filter(':first');
            var txtid = firstInput.attr('id');
            var btntitle = firstButton.attr('title');
            var value = $('#cmbNotifyTo').val();
            if (firstButton != null) {
                if (btntitle != 'None selected')
                    $(""#"" + txtid).val(value);
                else
                    $(""#"" + txtid).val('');
            }
        });
        //if ($(this).find('.input-validation-error').length == 0) {
        //    $(this).find(':submit').attr('disabled', 'disabled');
        //}
    });
</script>

");

        }
    }
}
#pragma warning restore 1591
