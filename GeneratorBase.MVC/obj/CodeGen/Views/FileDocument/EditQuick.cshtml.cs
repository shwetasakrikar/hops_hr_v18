#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.FileDocument
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\FileDocument\EditQuick.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/FileDocument/EditQuick.cshtml")]
    public partial class EditQuick : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.FileDocument>
    {
        
        #line 10 "..\..\Views\FileDocument\EditQuick.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("FileDocument", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public EditQuick()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\FileDocument\EditQuick.cshtml"
  
    ViewBag.Title = "Edit Document";
	var EditPermission = User.CanEditItem("FileDocument", Model, User);
	var DeletePermission = User.CanDeleteItem("FileDocument", Model, User);
	Layout = null;
	

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral(@"<script>
    $(document).ready(function () {
        try {
		 if ($('#EntityFileDocumentDisplayValue').has('option').length > 0) {
			var RecId = $(""#Id"").val()
            $(""#FileDocumentDD"").append($(""#EntityFileDocumentDisplayValue"").html());
            $(""#FileDocumentDD"").val(RecId);

			var text = $(""option:selected"", $(""#FileDocumentDD"")).text();
            $(""#FileDocumentDD"").attr('data-toggle', 'tooltip')
            $(""#FileDocumentDD"").attr('title', text);

            var lastOptionVal = $('#FileDocumentDD option:last-child').val();
            var fristOptionVal = $('#FileDocumentDD option:first-child').val();
            if (lastOptionVal == RecId)
			{
                $('#next').hide();
				$('#SaveAndContinue').hide();
				}

            if (fristOptionVal == RecId)
                $('#prev').hide();
			} else {  $('#dvsavenext').hide(); $('#SaveAndContinue').hide(); }
            var hostingEntityName = """";
            if ('");

            
            #line 43 "..\..\Views\FileDocument\EditQuick.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 44 "..\..\Views\FileDocument\EditQuick.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n\t\t\t\tif( \'");

            
            #line 45 "..\..\Views\FileDocument\EditQuick.cshtml"
                Write(Convert.ToBoolean(ViewData["IsFilter"]));

            
            #line default
            #line hidden
WriteLiteral(@"'!=""False"")
				$('#' + hostingEntityName + 'ID').attr(""lock"",""true"");
				$('#' + hostingEntityName + 'ID').trigger(""change"");
				 $(""input[type='radio'][name='"" + hostingEntityName + ""ID']"").each(function () {
                    if (!this.checked)
                        this.closest(""li"").style.display = ""none"";
                });		
						
            }
        }
        catch (ex) { }
    });
</script>
<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: ""95%"" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>

");

            
            #line 71 "..\..\Views\FileDocument\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.FileDocumentIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 74 "..\..\Views\FileDocument\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.FileDocumentIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 74 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                   ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 77 "..\..\Views\FileDocument\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.FileDocumentIsGroupsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\FileDocument\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.FileDocumentIsGroupsHiddenRule));

            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                         ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 83 "..\..\Views\FileDocument\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.FileDocumentIsSetValueUIRule))
    {
        
            
            #line default
            #line hidden
            
            #line 86 "..\..\Views\FileDocument\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.FileDocumentIsSetValueUIRule));

            
            #line default
            #line hidden
            
            #line 86 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                       ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 3062), Tuple.Create("\"", 3111)
, Tuple.Create(Tuple.Create("", 3069), Tuple.Create<System.Object, System.Int32>(Href("~/Content/bootstrap-datetimepicker.min.css")
, 3069), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        ");

WriteLiteral("\r\n\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" />\r\n\t\t<div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n            <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n        </div>\r\n     <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" style=\"margin-top: -12px;\"");

WriteLiteral(">\r\n            <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n                <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(">");

            
            #line 100 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            </h2>\r\n        </div>\r\n");

            
            #line 103 "..\..\Views\FileDocument\EditQuick.cshtml"
        
            
            #line default
            #line hidden
            
            #line 103 "..\..\Views\FileDocument\EditQuick.cshtml"
         if (EditPermission)
            {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" id=\"dvsavenext\"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"next\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 3962), Tuple.Create("\"", 4008)
            
            #line 106 "..\..\Views\FileDocument\EditQuick.cshtml"
     , Tuple.Create(Tuple.Create("", 3972), Tuple.Create<System.Object, System.Int32>(Html.Raw("nextFun('FileDocument')")
            
            #line default
            #line hidden
, 3972), false)
);

WriteLiteral(">Next >></button>\r\n");

WriteLiteral("                ");

            
            #line 107 "..\..\Views\FileDocument\EditQuick.cshtml"
           Write(Html.DropDownList("FileDocumentDD", null, null, new { @onchange = "FillDisplayValueQEdit('FileDocument')", @required = "required", @class = "pull-right", @Style = "height: 22px;width: 170px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                <button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"prev\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 4316), Tuple.Create("\"", 4362)
            
            #line 108 "..\..\Views\FileDocument\EditQuick.cshtml"
     , Tuple.Create(Tuple.Create("", 4326), Tuple.Create<System.Object, System.Int32>(Html.Raw("prevFun('FileDocument')")
            
            #line default
            #line hidden
, 4326), false)
);

WriteLiteral("><< Prev</button>\r\n            </div>\r\n");

            
            #line 110 "..\..\Views\FileDocument\EditQuick.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n    <!-- /.col-lg-12 -->\r\n\t<div");

WriteLiteral(" id=\"divDisplayBRmsgBeforeSaveProp\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRmsgMandatory\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayLockRecord\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRReadOnly\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<br/>\r\n</div>\r\n\t\r\n");

            
            #line 124 "..\..\Views\FileDocument\EditQuick.cshtml"
 using (Html.BeginForm("EditQuick","FileDocument",new {UrlReferrer =Convert.ToString(ViewData["FileDocumentParentUrl"])}, FormMethod.Post, new { enctype = "multipart/form-data", @id = "frmQEditFileDocument" }))
{
     Html.ValidationSummary(true);
                Html.EnableClientValidation();
    
            
            #line default
            #line hidden
            
            #line 128 "..\..\Views\FileDocument\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 128 "..\..\Views\FileDocument\EditQuick.cshtml"
                                      
	
            
            #line default
            #line hidden
            
            #line 129 "..\..\Views\FileDocument\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 129 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("\t <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n\t\t\t\t\t\t<div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t    ");

            
            #line 134 "..\..\Views\FileDocument\EditQuick.cshtml"
                       Write(Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"])));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

            
            #line 136 "..\..\Views\FileDocument\EditQuick.cshtml"
				
            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\FileDocument\EditQuick.cshtml"
                 if(User.CanView("FileDocument","DocumentName"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDocumentName\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 142 "..\..\Views\FileDocument\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.DocumentName));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 145 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.DocumentName,  getHtmlAttributes("DocumentName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 146 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.DocumentName));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 151 "..\..\Views\FileDocument\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 156 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.DocumentName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 156 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                      }

            
            #line default
            #line hidden
            
            #line 157 "..\..\Views\FileDocument\EditQuick.cshtml"
 if(User.CanView("FileDocument","Description"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDescription\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 163 "..\..\Views\FileDocument\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 166 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.Description,  getHtmlAttributes("Description")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 167 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 172 "..\..\Views\FileDocument\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 177 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.Description, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 177 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                     }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t");

            
            #line 178 "..\..\Views\FileDocument\EditQuick.cshtml"
                 if(User.CanView("FileDocument","AttachDocument") && User.CanView("Document"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAttachDocument\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t");

            
            #line 183 "..\..\Views\FileDocument\EditQuick.cshtml"
                       Write(Html.TextBoxFor(model => model.AttachDocument, new { @class = "hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                   <label  >");

            
            #line 184 "..\..\Views\FileDocument\EditQuick.cshtml"
                                       Write(Html.LabelFor(model => model.AttachDocument));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                     \r\n\t\t\t\t\t\t\t\t\t <div");

WriteLiteral(" style=\"position:relative;\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t <a");

WriteLiteral(" class=\'btn btn-primary btnupload\'");

WriteLiteral(" href=\'javascript:;\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t Upload File\r\n\t\t\t\t\t\t\t\t\t\t <input");

WriteLiteral(" id=\"File_AttachDocument\"");

WriteLiteral("  type=\"file\"");

WriteLiteral(" style=\'position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-fil" +
"ter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";opacity:0;background-co" +
"lor:transparent;color:transparent;width:105px;\'");

WriteLiteral(" name=\"File_AttachDocument\"");

WriteLiteral(" onchange=\'uploadedFileName(\"upload-file-infoFile_AttachDocument\",$(this).val());" +
"\'");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\'label uploadlblFix\'");

WriteLiteral(" id=\"upload-file-infoFile_AttachDocument\"");

WriteLiteral("></span>\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t <p>\r\n");

            
            #line 195 "..\..\Views\FileDocument\EditQuick.cshtml"
										                                                 
            
            #line default
            #line hidden
            
            #line 195 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                          if (!string.IsNullOrEmpty(Model.AttachDocument))
												{
																									
            
            #line default
            #line hidden
            
            #line 197 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                               Write(Html.ActionLink(Model.AttachDocument, "Download", new { filename = Model.AttachDocument }, new { @Class = "small pull-left", @Style = "vertical-align:middle;font-size: 11px;"}));

            
            #line default
            #line hidden
            
            #line 197 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                      
												 
                                                                        
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <span");

WriteLiteral(" class=\'label uploadlblFix pull-left\'");

WriteLiteral(" style=\"color: brown; vertical-align: middle; font-size: 10px;\"");

WriteLiteral(" id=\"upload-file-infoFile_AttachDocument\"");

WriteLiteral("></span>  \r\n                                                                     " +
"                 </p>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t\r\n         " +
"                   </div>\r\n                   </div>\r\n");

            
            #line 207 "..\..\Views\FileDocument\EditQuick.cshtml"
				


				 
} else { 
            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.AttachDocument, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                        }

            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\FileDocument\EditQuick.cshtml"
 if(User.CanView("FileDocument","DateCreated"))
{
                      

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t  \t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDateCreated\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n                                <label  >");

            
            #line 217 "..\..\Views\FileDocument\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.DateCreated));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\t\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerDateCreated\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 220 "..\..\Views\FileDocument\EditQuick.cshtml"
Write(Html.TextBoxFor(model => model.DateCreated, "{0:MM/dd/yyyy hh:mm tt}", User.CanEdit("FileDocument", "DateCreated") ? (object)new {@class = "form-control" , @readonly="readonly",@format = "MM/DD/YYYY hh:mm"} : (object)new { @class = "form-control", @readonly="readonly",@format = "MM/DD/YYYY hh:mm"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                        <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 226 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.DateCreated));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\r\n                                </div>\r\n                            <" +
"/div>\r\n");

            
            #line 230 "..\..\Views\FileDocument\EditQuick.cshtml"
											  
					        
} else { 
            
            #line default
            #line hidden
            
            #line 232 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.DateCreated, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 232 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                     }

            
            #line default
            #line hidden
            
            #line 233 "..\..\Views\FileDocument\EditQuick.cshtml"
 if(User.CanView("FileDocument","DateLastUpdated"))
{
                      

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t  \t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvDateLastUpdated\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n                                <label  >");

            
            #line 238 "..\..\Views\FileDocument\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.DateLastUpdated));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\t\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerDateLastUpdated\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 241 "..\..\Views\FileDocument\EditQuick.cshtml"
Write(Html.TextBox("DateLastUpdated",DateTime.Now, "{0:MM/dd/yyyy hh:mm tt}", User.CanEdit("FileDocument", "DateLastUpdated") ? (object)new {@class = "form-control",@readonly="readonly" ,@format = "MM/DD/YYYY hh:mm"} : (object)new { @class = "form-control", @readonly="readonly",@format = "MM/DD/YYYY hh:mm"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                        <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 247 "..\..\Views\FileDocument\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.DateLastUpdated));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\r\n                                </div>\r\n                            <" +
"/div>\r\n");

            
            #line 251 "..\..\Views\FileDocument\EditQuick.cshtml"
											  
					        
} else { 
            
            #line default
            #line hidden
            
            #line 253 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.DateLastUpdated, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 253 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("       </div>\r\n\r\n");

WriteLiteral("\t\t\t");

            
            #line 256 "..\..\Views\FileDocument\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_EmployeeDocumentsID, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t            </div>\r\n        </div>\r\n\t</div>\r\n</div>\r\n");

            
            #line 262 "..\..\Views\FileDocument\EditQuick.cshtml"
		 
            
            #line default
            #line hidden
            
            #line 262 "..\..\Views\FileDocument\EditQuick.cshtml"
    Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 262 "..\..\Views\FileDocument\EditQuick.cshtml"
                                 ;
		 var businessrule1 = User.businessrules.Where(p => p.EntityName == "FileDocument").ToList();
		 var lstinlineentityname = "";
		 var lstinlineassocdispname ="";
		 var lstinlineassocname = "";

            
            #line default
            #line hidden
WriteLiteral("\t\t <button");

WriteLiteral(" id=\"CancelQuickAdd\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Cancel</button>\r\n");

            
            #line 268 "..\..\Views\FileDocument\EditQuick.cshtml"
		 if (EditPermission)
         {

            
            #line default
            #line hidden
WriteLiteral("\t\t\t    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"command\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Close\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 12136), Tuple.Create("\"", 12360)
, Tuple.Create(Tuple.Create("", 12146), Tuple.Create("QuickEditFromGrid(event,true,\'FileDocument\',\'", 12146), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                          , Tuple.Create(Tuple.Create("", 12191), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 12191), false)
, Tuple.Create(Tuple.Create("", 12218), Tuple.Create("\',false,\'", 12218), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                              , Tuple.Create(Tuple.Create("", 12227), Tuple.Create<System.Object, System.Int32>(businessrule1
            
            #line default
            #line hidden
, 12227), false)
, Tuple.Create(Tuple.Create("", 12241), Tuple.Create("\',", 12241), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                              , Tuple.Create(Tuple.Create("", 12243), Tuple.Create<System.Object, System.Int32>(businessrule1.Count
            
            #line default
            #line hidden
, 12243), false)
, Tuple.Create(Tuple.Create("", 12263), Tuple.Create(",\'OnEdit\',\'ErrMsg\',false,\'", 12263), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                            , Tuple.Create(Tuple.Create("", 12289), Tuple.Create<System.Object, System.Int32>(lstinlineassocname
            
            #line default
            #line hidden
, 12289), false)
, Tuple.Create(Tuple.Create("", 12308), Tuple.Create("\',\'", 12308), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                                  , Tuple.Create(Tuple.Create("", 12311), Tuple.Create<System.Object, System.Int32>(lstinlineassocdispname
            
            #line default
            #line hidden
, 12311), false)
, Tuple.Create(Tuple.Create("", 12334), Tuple.Create("\',\'", 12334), true)
            
            #line 270 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                                                            , Tuple.Create(Tuple.Create("", 12337), Tuple.Create<System.Object, System.Int32>(lstinlineentityname
            
            #line default
            #line hidden
, 12337), false)
, Tuple.Create(Tuple.Create("", 12357), Tuple.Create("\');", 12357), true)
);

WriteLiteral(" />\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"sevranBtn\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 12486), Tuple.Create("\"", 12717)
, Tuple.Create(Tuple.Create("", 12496), Tuple.Create("QuickEditFromGrid(event,true,\'FileDocument\',\'", 12496), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                          , Tuple.Create(Tuple.Create("", 12541), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 12541), false)
, Tuple.Create(Tuple.Create("", 12568), Tuple.Create("\',false,\'", 12568), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                              , Tuple.Create(Tuple.Create("", 12577), Tuple.Create<System.Object, System.Int32>(businessrule1
            
            #line default
            #line hidden
, 12577), false)
, Tuple.Create(Tuple.Create("", 12591), Tuple.Create("\',", 12591), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                              , Tuple.Create(Tuple.Create("", 12593), Tuple.Create<System.Object, System.Int32>(businessrule1.Count
            
            #line default
            #line hidden
, 12593), false)
, Tuple.Create(Tuple.Create("", 12613), Tuple.Create(",\'OnEdit\',\'ErrMsg\',false,\'", 12613), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                            , Tuple.Create(Tuple.Create("", 12639), Tuple.Create<System.Object, System.Int32>(lstinlineassocname
            
            #line default
            #line hidden
, 12639), false)
, Tuple.Create(Tuple.Create("", 12658), Tuple.Create("\',\'", 12658), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                                                  , Tuple.Create(Tuple.Create("", 12661), Tuple.Create<System.Object, System.Int32>(lstinlineassocdispname
            
            #line default
            #line hidden
, 12661), false)
, Tuple.Create(Tuple.Create("", 12684), Tuple.Create("\',\'", 12684), true)
            
            #line 271 "..\..\Views\FileDocument\EditQuick.cshtml"
                                                                                                                                                                                                                                                            , Tuple.Create(Tuple.Create("", 12687), Tuple.Create<System.Object, System.Int32>(lstinlineentityname
            
            #line default
            #line hidden
, 12687), false)
, Tuple.Create(Tuple.Create("", 12707), Tuple.Create("\',\'True\');", 12707), true)
);

WriteLiteral(" />\r\n");

WriteLiteral("                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"SaveAndContinue\"");

WriteLiteral(" name=\"SaveAndContinue\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 12835), Tuple.Create("\"", 12899)
            
            #line 272 "..\..\Views\FileDocument\EditQuick.cshtml"
                                         , Tuple.Create(Tuple.Create("", 12845), Tuple.Create<System.Object, System.Int32>(Html.Raw("SaveAndContinueEdit('FileDocument',event)")
            
            #line default
            #line hidden
, 12845), false)
);

WriteLiteral(">Save & Next</button>\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 274 "..\..\Views\FileDocument\EditQuick.cshtml"
  		 }	
}

            
            #line default
            #line hidden
WriteLiteral("<script");

WriteAttribute("src", Tuple.Create(" src=\"", 12998), Tuple.Create("\"", 13039)
            
            #line 276 "..\..\Views\FileDocument\EditQuick.cshtml"
, Tuple.Create(Tuple.Create("", 13004), Tuple.Create<System.Object, System.Int32>(Url.Content("~/bundles/jqueryval")
            
            #line default
            #line hidden
, 13004), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 13082), Tuple.Create("\"", 13121)
            
            #line 277 "..\..\Views\FileDocument\EditQuick.cshtml"
, Tuple.Create(Tuple.Create("", 13088), Tuple.Create<System.Object, System.Int32>(Url.Content("~/bundles/common3")
            
            #line default
            #line hidden
, 13088), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n<script>\r\n    $(\"input[type=\'submit\']\").click(function (event) {\r\n\t" +
"if (!$(\"#frmQEditFileDocument\").valid()) return;\r\n\t\r\n        var $this = $(this)" +
";\r\n        $(\'input:hidden[name=\"hdncommand\"]\').val($this.val());\r\n    });\r\n</sc" +
"ript>\r\n");

            
            #line 287 "..\..\Views\FileDocument\EditQuick.cshtml"
  
var businessrule = User.businessrules.Where(p => p.EntityName == "FileDocument").ToList();


	


if ((businessrule != null && businessrule.Count > 0) )
{
var ruleids = businessrule.Select(q => q.Id).ToList();
var typelist  = string.Join(",", (new GeneratorBase.MVC.Models.RuleActionContext()).RuleActions.Where(p => ruleids.Contains(p.RuleActionID.Value) && p.associatedactiontype.TypeNo.HasValue).Select(p => p.associatedactiontype.TypeNo.Value).Distinct().ToList());


            
            #line default
            #line hidden
WriteLiteral(@"    <script>
    $(document).ready(function () {
	document.getElementById(""ErrMsg"").innerHTML = """";
		 var flag = true;
                var dataurl = """";
                var form = """";
                var inlinecount = ""0"";

				 form = $(""#frmQEditFileDocument"").serialize();
					 dataurl = """);

            
            #line 308 "..\..\Views\FileDocument\EditQuick.cshtml"
                           Write(Url.Action("businessruletype", "FileDocument", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral("\";\r\n            ApplyBusinessRuleOnPageLoad(\"");

            
            #line 309 "..\..\Views\FileDocument\EditQuick.cshtml"
                                    Write(typelist);

            
            #line default
            #line hidden
WriteLiteral("\",dataurl, \"FileDocument\", false, \"ErrMsg\", form);\r\n\t\t\t//business rules on inline" +
" associations\r\n    });\r\n</script>\r\n");

WriteLiteral(@"<script>
    $(""form"").submit(function (event) {
	if (!$(""#frmQEditFileDocument"").valid()) return;
	document.getElementById(""ErrMsg"").innerHTML = """";
            var flag = true;
		var form = $(""#frmQEditFileDocument"").serialize();
					});
</script>
");

            
            #line 321 "..\..\Views\FileDocument\EditQuick.cshtml"
}
 

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(@">
    $(document).ready(function () {
        try {
            document.getElementsByTagName(""body"")[0].focus();
            $(""#addPopup"").removeAttr(""tabindex"");
            var cltcoll = $(""#dvPopup"").find('input[type=text]:not([class=hidden]):not([readonly]),textarea:not([readonly])')
            var cltid = """";
            $(cltcoll).each(function () {
			  if ($(this).attr(""id"") == undefined)
                    return
                var dvhidden = $(""#dv"" + $(this).attr(""id""));
				var dvDate = $(""#datetimepicker"" + $(this).attr(""id"")).attr(""id"");
                if (!(dvhidden.css('display') == 'none') && dvDate == undefined) {
                    cltid = $(this);
                    return false;
                }
            });
            if (cltid != """" && cltid != undefined)
                setTimeout(function () { $(cltid).focus(); }, 500)
        }
        catch (ex) { }
    });
</script>

");

        }
    }
}
#pragma warning restore 1591
