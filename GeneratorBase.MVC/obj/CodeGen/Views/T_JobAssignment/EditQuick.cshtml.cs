#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.T_JobAssignment
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/T_JobAssignment/EditQuick.cshtml")]
    public partial class EditQuick : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.T_JobAssignment>
    {
        
        #line 10 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
            
    object getHtmlAttributes(string Property)
    {
		if(Property=="T_PositionLevel")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_RoleCode")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_ClassCode")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_WorkersCompCode")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_SOCCode")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_OvertimeEligibility")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_CostCenter")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_Program")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_DepartmentArea")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_Department")
		 return new { @class = "form-control", @readonly = "readonly" };
		if(Property=="T_SupervisorEmail")
		 return new { @class = "form-control", @readonly = "readonly" };
        if (User.CanEdit("T_JobAssignment", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public EditQuick()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  
    ViewBag.Title = "Edit Job Assignment";
	var EditPermission = User.CanEditItem("T_JobAssignment", Model, User);
	var DeletePermission = User.CanDeleteItem("T_JobAssignment", Model, User);
	Layout = null;
	

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral(@"<script>
    $(document).ready(function () {
        try {
		 if ($('#EntityT_JobAssignmentDisplayValue').has('option').length > 0) {
			var RecId = $(""#Id"").val()
            $(""#T_JobAssignmentDD"").append($(""#EntityT_JobAssignmentDisplayValue"").html());
            $(""#T_JobAssignmentDD"").val(RecId);

			var text = $(""option:selected"", $(""#T_JobAssignmentDD"")).text();
            $(""#T_JobAssignmentDD"").attr('data-toggle', 'tooltip')
            $(""#T_JobAssignmentDD"").attr('title', text);

            var lastOptionVal = $('#T_JobAssignmentDD option:last-child').val();
            var fristOptionVal = $('#T_JobAssignmentDD option:first-child').val();
            if (lastOptionVal == RecId)
			{
                $('#next').hide();
				$('#SaveAndContinue').hide();
				}

            if (fristOptionVal == RecId)
                $('#prev').hide();
			} else {  $('#dvsavenext').hide(); $('#SaveAndContinue').hide(); }
            var hostingEntityName = """";
            if ('");

            
            #line 65 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 66 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n\t\t\t\tif( \'");

            
            #line 67 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                Write(Convert.ToBoolean(ViewData["IsFilter"]));

            
            #line default
            #line hidden
WriteLiteral(@"'!=""False"")
				$('#' + hostingEntityName + 'ID').attr(""lock"",""true"");
				$('#' + hostingEntityName + 'ID').trigger(""change"");
				 $(""input[type='radio'][name='"" + hostingEntityName + ""ID']"").each(function () {
                    if (!this.checked)
                        this.closest(""li"").style.display = ""none"";
                });		
						
            }
        }
        catch (ex) { }
    });
</script>
<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: ""95%"" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>

");

            
            #line 93 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_JobAssignmentIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.T_JobAssignmentIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                      ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 99 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_JobAssignmentIsGroupsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.T_JobAssignmentIsGroupsHiddenRule));

            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                            ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 105 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_JobAssignmentIsSetValueUIRule))
    {
        
            
            #line default
            #line hidden
            
            #line 108 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.T_JobAssignmentIsSetValueUIRule));

            
            #line default
            #line hidden
            
            #line 108 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                          ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 4242), Tuple.Create("\"", 4291)
, Tuple.Create(Tuple.Create("", 4249), Tuple.Create<System.Object, System.Int32>(Href("~/Content/bootstrap-datetimepicker.min.css")
, 4249), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        ");

WriteLiteral("\r\n\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" />\r\n\t\t<div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n            <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n        </div>\r\n     <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" style=\"margin-top: -12px;\"");

WriteLiteral(">\r\n            <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n                <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(">");

            
            #line 122 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            </h2>\r\n        </div>\r\n");

            
            #line 125 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
        
            
            #line default
            #line hidden
            
            #line 125 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
         if (EditPermission)
            {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" id=\"dvsavenext\"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"next\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 5142), Tuple.Create("\"", 5191)
            
            #line 128 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
     , Tuple.Create(Tuple.Create("", 5152), Tuple.Create<System.Object, System.Int32>(Html.Raw("nextFun('T_JobAssignment')")
            
            #line default
            #line hidden
, 5152), false)
);

WriteLiteral(">Next >></button>\r\n");

WriteLiteral("                ");

            
            #line 129 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
           Write(Html.DropDownList("T_JobAssignmentDD", null, null, new { @onchange = "FillDisplayValueQEdit('T_JobAssignment')", @required = "required", @class = "pull-right", @Style = "height: 22px;width: 170px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                <button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"prev\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 5505), Tuple.Create("\"", 5554)
            
            #line 130 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
     , Tuple.Create(Tuple.Create("", 5515), Tuple.Create<System.Object, System.Int32>(Html.Raw("prevFun('T_JobAssignment')")
            
            #line default
            #line hidden
, 5515), false)
);

WriteLiteral("><< Prev</button>\r\n            </div>\r\n");

            
            #line 132 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n    <!-- /.col-lg-12 -->\r\n\t<div");

WriteLiteral(" id=\"divDisplayBRmsgBeforeSaveProp\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRmsgMandatory\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayLockRecord\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRReadOnly\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<br/>\r\n</div>\r\n\t\r\n");

            
            #line 146 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 using (Html.BeginForm("EditQuick","T_JobAssignment",new {UrlReferrer =Convert.ToString(ViewData["T_JobAssignmentParentUrl"])}, FormMethod.Post, new { enctype = "multipart/form-data", @id = "frmQEditT_JobAssignment" }))
{
     Html.ValidationSummary(true);
                Html.EnableClientValidation();
    
            
            #line default
            #line hidden
            
            #line 150 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 150 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                      
	
            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("\t <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n\t\t\t\t\t\t<div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t    ");

            
            #line 156 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                       Write(Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"])));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48911\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#employee assignedbody\"");

WriteLiteral(" alt=\"Employee Assigned\"");

WriteLiteral(" title=\"Employee Assigned\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Employee Assigned</a></h3>\r\n                               </div>\r\n\t\t\t\t\t" +
"\t\t  <div");

WriteLiteral(" class=\"panel-body panel-collapse in\"");

WriteLiteral(" id=\"employee assignedbody\"");

WriteLiteral(">\t\t\t\t\t\r\n");

            
            #line 165 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
				
            
            #line default
            #line hidden
            
            #line 165 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_EmployeeJobAssignmentID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EmployeeJobAssignmentID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 170 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_EmployeeJobAssignmentID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 173 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 173 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_EmployeeJobAssignmentID"))
		{
			
            
            #line default
            #line hidden
            
            #line 175 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_EmployeeJobAssignmentID", null, "-- Select --", new {@lock="true" ,    @required ="required",     @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeJobAssignmentID" }) }));

            
            #line default
            #line hidden
            
            #line 175 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                          
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 179 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_EmployeeJobAssignmentID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 179 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                      
			
            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_EmployeeJobAssignmentID", null, "-- Select --", new {  @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeJobAssignmentID" }) }));

            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 182 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_EmployeeJobAssignmentID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 188 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 189 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_EmployeeJobAssignmentID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 189 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                       }

            
            #line default
            #line hidden
            
            #line 190 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_EmployeePercent"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EmployeePercent\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Employee  Percent (%)\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 196 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_EmployeePercent));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 199 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_EmployeePercent,  getHtmlAttributes("T_EmployeePercent")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 200 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_EmployeePercent));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 205 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 210 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_EmployeePercent, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 210 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                           }

            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_StartDate"))
{
                      

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t  \t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_StartDate\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start  Date\"");

WriteLiteral(">\r\n                                <label  >");

            
            #line 216 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_StartDate));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\t\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_StartDate\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 219 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
Write(Html.TextBoxFor(model => model.T_StartDate, "{0:MM/dd/yyyy}", User.CanEdit("T_JobAssignment", "T_StartDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                        <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 225 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_StartDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\t\r\n");

            
            #line 229 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
								
            
            #line default
            #line hidden
            
            #line 229 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                 if(User.CanEdit("T_JobAssignment", "T_StartDate"))
								{

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
										$('#T_StartDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_StartDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
");

            
            #line 237 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 239 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
											  
					        
} else { 
            
            #line default
            #line hidden
            
            #line 241 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_StartDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 241 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                     }

            
            #line default
            #line hidden
            
            #line 242 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_EndDate"))
{
                      

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t  \t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EndDate\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"End  Date\"");

WriteLiteral(">\r\n                                <label  >");

            
            #line 247 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\t\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_EndDate\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 250 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
Write(Html.TextBoxFor(model => model.T_EndDate, "{0:MM/dd/yyyy}", User.CanEdit("T_JobAssignment", "T_EndDate") ? (object)new {@class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                        <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 256 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\t\r\n");

            
            #line 260 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
								
            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                 if(User.CanEdit("T_JobAssignment", "T_EndDate"))
								{

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
										$('#T_EndDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_EndDate').datetimepicker({ pickTime:false });
                                    });
                                </script>
");

            
            #line 268 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 270 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
											  
					        
} else { 
            
            #line default
            #line hidden
            
            #line 272 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_EndDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 272 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                   }

            
            #line default
            #line hidden
            
            #line 273 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_Primary"))
{

					


            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Primary\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Primary\"");

WriteLiteral(">\r\n                                <label  >\r\n");

WriteLiteral("                                    ");

            
            #line 281 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.LabelFor(model => model.T_Primary));

            
            #line default
            #line hidden
WriteLiteral(" \r\n                                </label>\r\n\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 284 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.CheckBox("T_Primary", Model.T_Primary.HasValue ? Model.T_Primary : false));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 285 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Primary));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                \r\n\t\t\t\t\t\t\t\t</div>\r\n                            <" +
"/div>\r\n");

            
            #line 289 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
				} else { 
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                    Write(Html.HiddenFor(model => model.T_Primary, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                   }

            
            #line default
            #line hidden
            
            #line 290 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_Active"))
{

					


            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Active\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Active\"");

WriteLiteral(">\r\n                                <label  >\r\n");

WriteLiteral("                                    ");

            
            #line 298 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.LabelFor(model => model.T_Active));

            
            #line default
            #line hidden
WriteLiteral(" \r\n                                </label>\r\n\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 301 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.CheckBox("T_Active", Model.T_Active.HasValue ? Model.T_Active : false));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 302 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Active));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                \r\n\t\t\t\t\t\t\t\t</div>\r\n                            <" +
"/div>\r\n");

            
            #line 306 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
				} else { 
            
            #line default
            #line hidden
            
            #line 306 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                    Write(Html.HiddenFor(model => model.T_Active, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 306 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                  }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48913\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" alt=\"Position Details\"");

WriteLiteral(" title=\"Position Details\"");

WriteLiteral(">Position Details</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 320 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
				
            
            #line default
            #line hidden
            
            #line 320 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_PositionJobAssignmentID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_PositionJobAssignmentID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 325 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_PositionJobAssignmentID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 328 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 328 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_PositionJobAssignmentID"))
		{
			
            
            #line default
            #line hidden
            
            #line 330 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_PositionJobAssignmentID", null, "-- Select --", new { @derivedurl = Url.Action("GetDerivedDetails", "T_JobAssignment", new { IgnoreEditable = Convert.ToString(ViewData["AssociatedType"])}),  @required ="required",    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_Position", @dataurl = Url.Action("GetAllValue", "T_Position",new { caller = "T_PositionJobAssignmentID" }) }));

            
            #line default
            #line hidden
            
            #line 330 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 334 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_PositionJobAssignmentID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 334 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                      
			
            
            #line default
            #line hidden
            
            #line 335 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_PositionJobAssignmentID", null, "-- Select --", new {  @required ="required",    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Position", @dataurl = Url.Action("GetAllValue", "T_Position",new { caller = "T_PositionJobAssignmentID" }) }));

            
            #line default
            #line hidden
            
            #line 335 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                                                          
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 337 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_PositionJobAssignmentID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 343 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 344 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_PositionJobAssignmentID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 344 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                       }

            
            #line default
            #line hidden
            
            #line 345 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_PositionLevel"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_PositionLevel\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Position Level\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 351 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_PositionLevel));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 354 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_PositionLevel,  getHtmlAttributes("T_PositionLevel")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 355 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_PositionLevel));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 360 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 365 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_PositionLevel, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 365 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                         }

            
            #line default
            #line hidden
            
            #line 366 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_RoleCode"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_RoleCode\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Role Code\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 372 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_RoleCode));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 375 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_RoleCode,  getHtmlAttributes("T_RoleCode")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 376 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_RoleCode));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 381 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 386 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_RoleCode, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 386 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                    }

            
            #line default
            #line hidden
            
            #line 387 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_ClassCode"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_ClassCode\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Class Code\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 393 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_ClassCode));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 396 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_ClassCode,  getHtmlAttributes("T_ClassCode")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 397 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_ClassCode));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 402 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 407 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_ClassCode, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 407 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                     }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48910\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" alt=\"Assignment Details\"");

WriteLiteral(" title=\"Assignment Details\"");

WriteLiteral(">Assignment Details</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 421 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
				
            
            #line default
            #line hidden
            
            #line 421 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_JobAssignmentReasonID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_JobAssignmentReasonID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 426 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_JobAssignmentReasonID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 429 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 429 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_JobAssignmentReasonID"))
		{
			
            
            #line default
            #line hidden
            
            #line 431 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentReasonID", null, "-- Select --", new {   @required ="required",     @class = "chosen-select form-control", @HostingName = "T_ReasonforHire", @dataurl = Url.Action("GetAllValue", "T_ReasonforHire",new { caller = "T_JobAssignmentReasonID" }) }));

            
            #line default
            #line hidden
            
            #line 431 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                 
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 435 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_JobAssignmentReasonID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 435 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                    
			
            
            #line default
            #line hidden
            
            #line 436 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentReasonID", null, "-- Select --", new {  @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_ReasonforHire", @dataurl = Url.Action("GetAllValue", "T_ReasonforHire",new { caller = "T_JobAssignmentReasonID" }) }));

            
            #line default
            #line hidden
            
            #line 436 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                      
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 438 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_JobAssignmentReasonID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 444 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 445 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_JobAssignmentReasonID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 445 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                     }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t");

            
            #line 446 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_JobAssignmentUnitXID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_JobAssignmentUnitXID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 451 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_JobAssignmentUnitXID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 454 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 454 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_JobAssignmentUnitXID"))
		{
			
            
            #line default
            #line hidden
            
            #line 456 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentUnitXID", null, "-- Select --", new { @derivedurl = Url.Action("GetDerivedDetails", "T_JobAssignment", new { IgnoreEditable = Convert.ToString(ViewData["AssociatedType"])}),  @required ="required",    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_UnitX", @dataurl = Url.Action("GetAllValue", "T_UnitX",new { caller = "T_JobAssignmentUnitXID" }) }));

            
            #line default
            #line hidden
            
            #line 456 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 460 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_JobAssignmentUnitXID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 460 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                   
			
            
            #line default
            #line hidden
            
            #line 461 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentUnitXID", null, "-- Select --", new {  @required ="required",    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_UnitX", @dataurl = Url.Action("GetAllValue", "T_UnitX",new { caller = "T_JobAssignmentUnitXID" }) }));

            
            #line default
            #line hidden
            
            #line 461 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                                              
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 463 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_JobAssignmentUnitXID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 469 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 470 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_JobAssignmentUnitXID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 470 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                    }

            
            #line default
            #line hidden
            
            #line 471 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_CostCenter"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_CostCenter\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Cost  Center\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 477 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_CostCenter));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 480 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_CostCenter,  getHtmlAttributes("T_CostCenter")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 481 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_CostCenter));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 486 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 491 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_CostCenter, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 491 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                      }

            
            #line default
            #line hidden
            
            #line 492 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
 if(User.CanView("T_JobAssignment","T_Program"))
{



            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Program\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Program\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label  >");

            
            #line 498 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(Html.LabelFor(model => model.T_Program));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                \r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 501 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_Program,  getHtmlAttributes("T_Program")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 502 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Program));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 507 "..\..\Views\T_JobAssignment\EditQuick.cshtml"

				
					


} else { 
            
            #line default
            #line hidden
            
            #line 512 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.HiddenFor(model => model.T_Program, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 512 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                   }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t");

            
            #line 513 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_JobAssignmentManagerEmployeeID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_JobAssignmentManagerEmployeeID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 518 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_JobAssignmentManagerEmployeeID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 521 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 521 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_JobAssignmentManagerEmployeeID"))
		{
			
            
            #line default
            #line hidden
            
            #line 523 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentManagerEmployeeID", null, "-- Select --", new {      @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_JobAssignmentManagerEmployeeID" }) }));

            
            #line default
            #line hidden
            
            #line 523 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                 
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 527 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_JobAssignmentManagerEmployeeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 527 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                             
			
            
            #line default
            #line hidden
            
            #line 528 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_JobAssignmentManagerEmployeeID", null, "-- Select --", new {     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_JobAssignmentManagerEmployeeID" }) }));

            
            #line default
            #line hidden
            
            #line 528 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                      
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 530 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_JobAssignmentManagerEmployeeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 536 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 537 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_JobAssignmentManagerEmployeeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 537 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                              }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t");

            
            #line 538 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 if(User.CanView("T_JobAssignment","T_EmployeeSupervisorID"))
				{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t   <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EmployeeSupervisorID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label  >");

            
            #line 543 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                Write(Html.LabelFor(model => model.T_EmployeeSupervisorID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 546 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
									
            
            #line default
            #line hidden
            
            #line 546 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                     if (User.CanEdit("T_JobAssignment", "T_EmployeeSupervisorID"))
		{
			
            
            #line default
            #line hidden
            
            #line 548 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_EmployeeSupervisorID", null, "-- Select --", new { @derivedurl = Url.Action("GetDerivedDetails", "T_JobAssignment", new { IgnoreEditable = Convert.ToString(ViewData["AssociatedType"])}),    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeSupervisorID" }) }));

            
            #line default
            #line hidden
            
            #line 548 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                              
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 552 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_EmployeeSupervisorID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 552 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                   
			
            
            #line default
            #line hidden
            
            #line 553 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.DropDownList("T_EmployeeSupervisorID", null, "-- Select --", new {    @onchange = Html.Raw("FillDerivedDetails(this,event);") ,  @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_EmployeeSupervisorID" }) }));

            
            #line default
            #line hidden
            
            #line 553 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                                                                                                            
		}

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 555 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_EmployeeSupervisorID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n                        </div>\r\n            " +
"        </div>\r\n");

            
            #line 561 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                 
					} else { 
            
            #line default
            #line hidden
            
            #line 562 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                        Write(Html.HiddenFor(model => model.T_EmployeeSupervisorID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 562 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                    }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n\r\n");

WriteLiteral("\t\t\t");

            
            #line 568 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_WorkersCompCode, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 569 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_SOCCode, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 570 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_OvertimeEligibility, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 571 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_DepartmentArea, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 572 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_Department, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 573 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_SupervisorEmail, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t");

            
            #line 574 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
       Write(Html.HiddenFor(model => model.T_Notes, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t            </div>\r\n        </div>\r\n\t</div>\r\n</div>\r\n");

            
            #line 580 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
		 
            
            #line default
            #line hidden
            
            #line 580 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
    Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 580 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                 ;
		 var businessrule1 = User.businessrules.Where(p => p.EntityName == "T_JobAssignment").ToList();
		 var lstinlineentityname = "";
		 var lstinlineassocdispname ="";
		 var lstinlineassocname = "";

            
            #line default
            #line hidden
WriteLiteral("\t\t <button");

WriteLiteral(" id=\"CancelQuickAdd\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Cancel</button>\r\n");

            
            #line 586 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
		 if (EditPermission)
         {

            
            #line default
            #line hidden
WriteLiteral("\t\t\t    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"command\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Close\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 28188), Tuple.Create("\"", 28415)
, Tuple.Create(Tuple.Create("", 28198), Tuple.Create("QuickEditFromGrid(event,true,\'T_JobAssignment\',\'", 28198), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                             , Tuple.Create(Tuple.Create("", 28246), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 28246), false)
, Tuple.Create(Tuple.Create("", 28273), Tuple.Create("\',false,\'", 28273), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                 , Tuple.Create(Tuple.Create("", 28282), Tuple.Create<System.Object, System.Int32>(businessrule1
            
            #line default
            #line hidden
, 28282), false)
, Tuple.Create(Tuple.Create("", 28296), Tuple.Create("\',", 28296), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                 , Tuple.Create(Tuple.Create("", 28298), Tuple.Create<System.Object, System.Int32>(businessrule1.Count
            
            #line default
            #line hidden
, 28298), false)
, Tuple.Create(Tuple.Create("", 28318), Tuple.Create(",\'OnEdit\',\'ErrMsg\',false,\'", 28318), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                               , Tuple.Create(Tuple.Create("", 28344), Tuple.Create<System.Object, System.Int32>(lstinlineassocname
            
            #line default
            #line hidden
, 28344), false)
, Tuple.Create(Tuple.Create("", 28363), Tuple.Create("\',\'", 28363), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                     , Tuple.Create(Tuple.Create("", 28366), Tuple.Create<System.Object, System.Int32>(lstinlineassocdispname
            
            #line default
            #line hidden
, 28366), false)
, Tuple.Create(Tuple.Create("", 28389), Tuple.Create("\',\'", 28389), true)
            
            #line 588 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                               , Tuple.Create(Tuple.Create("", 28392), Tuple.Create<System.Object, System.Int32>(lstinlineentityname
            
            #line default
            #line hidden
, 28392), false)
, Tuple.Create(Tuple.Create("", 28412), Tuple.Create("\');", 28412), true)
);

WriteLiteral(" />\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"sevranBtn\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 28541), Tuple.Create("\"", 28775)
, Tuple.Create(Tuple.Create("", 28551), Tuple.Create("QuickEditFromGrid(event,true,\'T_JobAssignment\',\'", 28551), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                             , Tuple.Create(Tuple.Create("", 28599), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 28599), false)
, Tuple.Create(Tuple.Create("", 28626), Tuple.Create("\',false,\'", 28626), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                 , Tuple.Create(Tuple.Create("", 28635), Tuple.Create<System.Object, System.Int32>(businessrule1
            
            #line default
            #line hidden
, 28635), false)
, Tuple.Create(Tuple.Create("", 28649), Tuple.Create("\',", 28649), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                 , Tuple.Create(Tuple.Create("", 28651), Tuple.Create<System.Object, System.Int32>(businessrule1.Count
            
            #line default
            #line hidden
, 28651), false)
, Tuple.Create(Tuple.Create("", 28671), Tuple.Create(",\'OnEdit\',\'ErrMsg\',false,\'", 28671), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                               , Tuple.Create(Tuple.Create("", 28697), Tuple.Create<System.Object, System.Int32>(lstinlineassocname
            
            #line default
            #line hidden
, 28697), false)
, Tuple.Create(Tuple.Create("", 28716), Tuple.Create("\',\'", 28716), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                     , Tuple.Create(Tuple.Create("", 28719), Tuple.Create<System.Object, System.Int32>(lstinlineassocdispname
            
            #line default
            #line hidden
, 28719), false)
, Tuple.Create(Tuple.Create("", 28742), Tuple.Create("\',\'", 28742), true)
            
            #line 589 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                                                                                                                                                                                                                                               , Tuple.Create(Tuple.Create("", 28745), Tuple.Create<System.Object, System.Int32>(lstinlineentityname
            
            #line default
            #line hidden
, 28745), false)
, Tuple.Create(Tuple.Create("", 28765), Tuple.Create("\',\'True\');", 28765), true)
);

WriteLiteral(" />\r\n");

WriteLiteral("                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"SaveAndContinue\"");

WriteLiteral(" name=\"SaveAndContinue\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 28893), Tuple.Create("\"", 28960)
            
            #line 590 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                         , Tuple.Create(Tuple.Create("", 28903), Tuple.Create<System.Object, System.Int32>(Html.Raw("SaveAndContinueEdit('T_JobAssignment',event)")
            
            #line default
            #line hidden
, 28903), false)
);

WriteLiteral(">Save & Next</button>\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 592 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  		 }	
}

            
            #line default
            #line hidden
WriteLiteral("<script");

WriteAttribute("src", Tuple.Create(" src=\"", 29059), Tuple.Create("\"", 29100)
            
            #line 594 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
, Tuple.Create(Tuple.Create("", 29065), Tuple.Create<System.Object, System.Int32>(Url.Content("~/bundles/jqueryval")
            
            #line default
            #line hidden
, 29065), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 29143), Tuple.Create("\"", 29182)
            
            #line 595 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
, Tuple.Create(Tuple.Create("", 29149), Tuple.Create<System.Object, System.Int32>(Url.Content("~/bundles/common3")
            
            #line default
            #line hidden
, 29149), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n<script>\r\n    $(\"input[type=\'submit\']\").click(function (event) {\r\n\t" +
"if (!$(\"#frmQEditT_JobAssignment\").valid()) return;\r\n\t\r\n        var $this = $(th" +
"is);\r\n        $(\'input:hidden[name=\"hdncommand\"]\').val($this.val());\r\n    });\r\n<" +
"/script>\r\n");

            
            #line 605 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
  
var businessrule = User.businessrules.Where(p => p.EntityName == "T_JobAssignment").ToList();


	


if ((businessrule != null && businessrule.Count > 0) )
{
var ruleids = businessrule.Select(q => q.Id).ToList();
var typelist  = string.Join(",", (new GeneratorBase.MVC.Models.RuleActionContext()).RuleActions.Where(p => ruleids.Contains(p.RuleActionID.Value) && p.associatedactiontype.TypeNo.HasValue).Select(p => p.associatedactiontype.TypeNo.Value).Distinct().ToList());


            
            #line default
            #line hidden
WriteLiteral(@"    <script>
    $(document).ready(function () {
	document.getElementById(""ErrMsg"").innerHTML = """";
		 var flag = true;
                var dataurl = """";
                var form = """";
                var inlinecount = ""0"";

				 form = $(""#frmQEditT_JobAssignment"").serialize();
					 dataurl = """);

            
            #line 626 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                           Write(Url.Action("businessruletype", "T_JobAssignment", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral("\";\r\n            ApplyBusinessRuleOnPageLoad(\"");

            
            #line 627 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
                                    Write(typelist);

            
            #line default
            #line hidden
WriteLiteral("\",dataurl, \"T_JobAssignment\", false, \"ErrMsg\", form);\r\n\t\t\t//business rules on inl" +
"ine associations\r\n    });\r\n</script>\r\n");

WriteLiteral(@"<script>
    $(""form"").submit(function (event) {
	if (!$(""#frmQEditT_JobAssignment"").valid()) return;
	document.getElementById(""ErrMsg"").innerHTML = """";
            var flag = true;
		var form = $(""#frmQEditT_JobAssignment"").serialize();
					});
</script>
");

            
            #line 639 "..\..\Views\T_JobAssignment\EditQuick.cshtml"
}
 

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(@">
    $(document).ready(function () {
        try {
            document.getElementsByTagName(""body"")[0].focus();
            $(""#addPopup"").removeAttr(""tabindex"");
            var cltcoll = $(""#dvPopup"").find('input[type=text]:not([class=hidden]):not([readonly]),textarea:not([readonly])')
            var cltid = """";
            $(cltcoll).each(function () {
			  if ($(this).attr(""id"") == undefined)
                    return
                var dvhidden = $(""#dv"" + $(this).attr(""id""));
				var dvDate = $(""#datetimepicker"" + $(this).attr(""id"")).attr(""id"");
                if (!(dvhidden.css('display') == 'none') && dvDate == undefined) {
                    cltid = $(this);
                    return false;
                }
            });
            if (cltid != """" && cltid != undefined)
                setTimeout(function () { $(cltid).focus(); }, 500)
        }
        catch (ex) { }
    });
</script>

");

        }
    }
}
#pragma warning restore 1591
