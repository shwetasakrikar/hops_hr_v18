#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.Document
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\Document\IndexPartial.cshtml"
    using PagedList.Mvc;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Document/IndexPartial.cshtml")]
    public partial class IndexPartial : GeneratorBase.MVC.CustomWebViewPage<PagedList.IPagedList<GeneratorBase.MVC.Models.Document>>
    {
        
        #line 64 "..\..\Views\Document\IndexPartial.cshtml"
                
        object getSortHtmlAttributes(string sortby, bool IsPaging, int? page, bool? IsExport)
        {
            if (IsPaging)
            {
                return new
                {
                    page,
                    sortBy = ViewBag.CurrentSort,
                    isAsc = ViewBag.IsAsc,
                    currentFilter = ViewBag.CurrentFilter,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    HostingEntityID = ViewData["HostingEntityID"],
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    IsFilter = @Convert.ToBoolean(ViewData["IsFilter"]),

                    t_facilitydocumentassociation = Request.QueryString["t_facilitydocumentassociation"],
                    DateCreatedFrom = Request.QueryString["DateCreatedFrom"],
                    DateCreatedFromhdn = Request.QueryString["DateCreatedFromhdn"],
                    DateCreatedTo = Request.QueryString["DateCreatedTo"],
                    DateCreatedTohdn = Request.QueryString["DateCreatedTohdn"],
                    DateLastUpdatedFrom = Request.QueryString["DateLastUpdatedFrom"],
                    DateLastUpdatedFromhdn = Request.QueryString["DateLastUpdatedFromhdn"],
                    DateLastUpdatedTo = Request.QueryString["DateLastUpdatedTo"],
                    DateLastUpdatedTohdn = Request.QueryString["DateLastUpdatedTohdn"],
                    search = Request.QueryString["search"],
                    SortOrder = Request.QueryString["SortOrder"],
                    viewtype = ViewBag.TemplatesName,
                    HideColumns = ViewData["HideColumns"],
                    GroupByColumn = ViewBag.GroupByColumn,
                    FilterCondition = ViewBag.FilterCondition,
                    inbuiltSearchCriteria = ViewBag.inbuiltSearchCriteria
                };
            }
            else
            {
                return new
                {
                    sortBy = sortby,
                    currentFilter = Request.QueryString["currentFilter"],
                    searchString = Request.QueryString["searchString"],
                    isAsc = (ViewBag.IsAsc == "ASC" ? "DESC" : ""),
                    page = ViewBag.Pages,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),
                    HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    IsFilter = @Convert.ToBoolean(ViewData["IsFilter"]),
                    t_facilitydocumentassociation = Request.QueryString["t_facilitydocumentassociation"],
                    DateCreatedFrom = Request.QueryString["DateCreatedFrom"],
                    DateCreatedFromhdn = Request.QueryString["DateCreatedFromhdn"],
                    DateCreatedTo = Request.QueryString["DateCreatedTo"],
                    DateCreatedTohdn = Request.QueryString["DateCreatedTohdn"],
                    DateLastUpdatedFrom = Request.QueryString["DateLastUpdatedFrom"],
                    DateLastUpdatedFromhdn = Request.QueryString["DateLastUpdatedFromhdn"],
                    DateLastUpdatedTo = Request.QueryString["DateLastUpdatedTo"],
                    DateLastUpdatedTohdn = Request.QueryString["DateLastUpdatedTohdn"],
                    search = Request.QueryString["search"],
                    SortOrder = Request.QueryString["SortOrder"],
                    viewtype = ViewBag.TemplatesName,
                    HideColumns = ViewData["HideColumns"],
                    GroupByColumn = ViewBag.GroupByColumn,
                    FilterCondition = ViewBag.FilterCondition,
                    inbuiltSearchCriteria = ViewBag.inbuiltSearchCriteria
                };
            }
        }
    
        #line default
        #line hidden
        
        public IndexPartial()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Document\IndexPartial.cshtml"
  

    var ActionNameUrl = "Index";
    if (HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString().ToUpper() == "FSEARCH")
    {
        ActionNameUrl = "FSearch";
    }
    var BackUrl = Request.Url;
    if (ViewData["HostingEntity"] != null && (Request.QueryString["TabToken"] != null || Request.IsAjaxRequest()))
    {
        BackUrl = Request.UrlReferrer;
    }
    var EntityReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "Document");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Document\"");

WriteLiteral(@">

    <style>
        .table-responsive > .fixed-column {
            position: absolute;
            display: block;
            width: auto;
            border: 0px solid transparent;
            border-top: 1px solid #c3ddec;
        }

        .fixed-column th {
            background: #fff;
        }

        .fixed-column td {
            background: #fff;
        }
    </style>
    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(document).ready(function () {\r\n            $(\".pagination a\").click(" +
"function (e) {\r\n                //PaginationClick(e,\'Document\')\r\n               " +
" PaginationClick(e, \'Document\', \'");

            
            #line 40 "..\..\Views\Document\IndexPartial.cshtml"
                                           Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
WriteLiteral("\')\r\n            })\r\n            if (\"");

            
            #line 42 "..\..\Views\Document\IndexPartial.cshtml"
            Write(HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString().ToUpper());

            
            #line default
            #line hidden
WriteLiteral("\" == \"FSEARCH\") {\r\n                $(\"#fsearchDocument\").addClass(\'in\');\r\n       " +
"         if (\'");

            
            #line 44 "..\..\Views\Document\IndexPartial.cshtml"
                Write(ViewData["HostingEntity"]);

            
            #line default
            #line hidden
WriteLiteral("\'.length > 0) {\r\n                    $(\"#\" + \"");

            
            #line 45 "..\..\Views\Document\IndexPartial.cshtml"
                        Write(ViewData["HostingEntity"]);

            
            #line default
            #line hidden
WriteLiteral("\" + \"_Document\").hide();\r\n                }\r\n                FSearchColumnsShowHi" +
"de(\'");

            
            #line 47 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(ViewData["HideColumns"]);

            
            #line default
            #line hidden
WriteLiteral(@"', 'Document');
            }
            $(""#SearchStringDocument"").keypress(function (e) {
                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                    $(""#DocumentSearch"").bind(""click"", (function () {
                    }));
                    $('#DocumentSearch').trigger(""click"");
                    return false;
                }
            })
            $(""#btnShowHideDocument"").mouseup(function () {
                if (document.getElementById('ColumnShowHideDocument').className == 'collapse') {
                    $('#lblDocument').css('display', 'none');
                }
            })
        });
    </script>
");

            
            #line 64 "..\..\Views\Document\IndexPartial.cshtml"
    
            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-sx-12\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" style=\"display:block; padding:0px 0px 5px 0px;\"");

WriteLiteral(">\r\n\r\n\r\n");

            
            #line 140 "..\..\Views\Document\IndexPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 140 "..\..\Views\Document\IndexPartial.cshtml"
                 if (ViewData["IsdrivedTab"] == null)
                {



            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(" style=\"width:300px; padding-top:4px; \"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 146 "..\..\Views\Document\IndexPartial.cshtml"
                       Write(Html.TextBox("SearchStringDocument", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @value = ViewBag.Homeval, @placeholder = "Search" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                <a");

WriteLiteral(" id=\"DocumentSearch\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 7277), Tuple.Create("\"", 7816)
, Tuple.Create(Tuple.Create("", 7287), Tuple.Create("SearchClick(event,", 7287), true)
, Tuple.Create(Tuple.Create(" ", 7305), Tuple.Create("\'Document\',", 7306), true)
, Tuple.Create(Tuple.Create(" ", 7317), Tuple.Create("\'", 7318), true)
            
            #line 148 "..\..\Views\Document\IndexPartial.cshtml"
                , Tuple.Create(Tuple.Create("", 7319), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "Document", new { IsFilter = ViewData["IsFilter"], IsDeepSearch = false, searchString = "_SearchString", HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]),HideColumns = ViewData["HideColumns"], SearchTimeStamp = DateTime.Now.Ticks.ToString(),viewtype = Convert.ToString(ViewBag.TemplatesName) }))
            
            #line default
            #line hidden
, 7319), false)
, Tuple.Create(Tuple.Create("", 7783), Tuple.Create("\',\'", 7783), true)
            
            #line 148 "..\..\Views\Document\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   , Tuple.Create(Tuple.Create("", 7786), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 7786), false)
, Tuple.Create(Tuple.Create("", 7813), Tuple.Create("\');", 7813), true)
);

WriteLiteral(" data-original-title=\"Grid Search\"");

WriteLiteral(" class=\"btn tip-top\"");

WriteLiteral(" style=\"padding:3px 5px; border:1px solid #ccc\"");

WriteLiteral(" alt=\"Grid Search\"");

WriteLiteral(" title=\"Search\"");

WriteLiteral("><span");

WriteLiteral(" class=\"fa fa-search\"");

WriteLiteral("></span></a>\r\n                                <a");

WriteLiteral(" id=\"DocumentCancel\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn collapse-data-btn tip-top\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 8098), Tuple.Create("\"", 8578)
, Tuple.Create(Tuple.Create("", 8108), Tuple.Create("CancelSearch(\'Document\',\'", 8108), true)
            
            #line 149 "..\..\Views\Document\IndexPartial.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 8133), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "Document", new {IsFilter=ViewData["IsFilter"], HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]), HideColumns = ViewData["HideColumns"], ClearSearchTimeStamp = DateTime.Now.Ticks.ToString(),viewtype = Convert.ToString(ViewBag.TemplatesName) }))
            
            #line default
            #line hidden
, 8133), false)
, Tuple.Create(Tuple.Create("", 8546), Tuple.Create("\',\'", 8546), true)
            
            #line 149 "..\..\Views\Document\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             , Tuple.Create(Tuple.Create("", 8549), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 8549), false)
, Tuple.Create(Tuple.Create("", 8576), Tuple.Create("\')", 8576), true)
);

WriteLiteral(" data-original-title=\"Clear Search\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" style=\"padding:3px 5px; border:1px solid #ccc\"");

WriteLiteral(" alt=\"Clear Search\"");

WriteLiteral(" title=\"Clear Search\"");

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" class=\"fa fa-minus-circle\"");

WriteLiteral("></span>\r\n                                </a>\r\n                                <" +
"a");

WriteLiteral(" id=\"DocumentSearchCancel\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn collapse-data-btn tip-top\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 8953), Tuple.Create("\"", 9478)
, Tuple.Create(Tuple.Create("", 8963), Tuple.Create("CancelSearch(\'Document\',\'", 8963), true)
            
            #line 152 "..\..\Views\Document\IndexPartial.cshtml"
                                                                   , Tuple.Create(Tuple.Create("", 8988), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "Document", new {IsFilter=ViewData["IsFilter"], itemsPerPage=Convert.ToInt32(ViewBag.PageSize),HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]),HideColumns = ViewData["HideColumns"], ClearSearchTimeStamp = DateTime.Now.Ticks.ToString(),viewtype = Convert.ToString(ViewBag.TemplatesName)}))
            
            #line default
            #line hidden
, 8988), false)
, Tuple.Create(Tuple.Create("", 9446), Tuple.Create("\',\'", 9446), true)
            
            #line 152 "..\..\Views\Document\IndexPartial.cshtml"
uple.Create(Tuple.Create("", 9449), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 9449), false)
, Tuple.Create(Tuple.Create("", 9476), Tuple.Create("\')", 9476), true)
);

WriteLiteral(" data-original-title=\"Refresh Grid\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" style=\"padding:3px 5px; border:1px solid #ccc\"");

WriteLiteral(" alt=\"Refresh Grid\"");

WriteLiteral(" title=\"Refresh Grid\"");

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" class=\"fa fa-refresh\"");

WriteLiteral("></span>\r\n                                </a>\r\n                            </div" +
">\r\n                        </div>\r\n                    </div>\r\n");

            
            #line 158 "..\..\Views\Document\IndexPartial.cshtml"

                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></div>\r\n                <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto; margin-top:3px\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                        <thead>\r\n                            <tr>\r\n           " +
"                     <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(" class=\"col1\"");

WriteLiteral(" style=\"width:42px;\"");

WriteLiteral(" alt=\"Actions\"");

WriteLiteral(" title=\"Actions\"");

WriteLiteral(">Actions</th>\r\n");

            
            #line 166 "..\..\Views\Document\IndexPartial.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "DocumentName"))
                                {
                                    var SortPropertyName = EntityReflector.Properties.FirstOrDefault(q => q.Name == "DocumentName");

            
            #line default
            #line hidden
WriteLiteral("                                    <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(" class=\"col2\"");

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 170 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(Html.ActionLink(SortPropertyName.DisplayName, ActionNameUrl, "Document", getSortHtmlAttributes("DocumentName", false, null, false), new { @onclick = "SortLinkClick(event,'Document');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 171 "..\..\Views\Document\IndexPartial.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 171 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "DocumentName")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 172 "..\..\Views\Document\IndexPartial.cshtml"
                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 173 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "DocumentName")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 174 "..\..\Views\Document\IndexPartial.cshtml"
                                                                       }

            
            #line default
            #line hidden
WriteLiteral("                                    </th>\r\n");

            
            #line 176 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 177 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "Description"))
                                {
                                    var SortPropertyName = EntityReflector.Properties.FirstOrDefault(q => q.Name == "Description");

            
            #line default
            #line hidden
WriteLiteral("                                    <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(" class=\"col3\"");

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 181 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(Html.ActionLink(SortPropertyName.DisplayName, ActionNameUrl, "Document", getSortHtmlAttributes("Description", false, null, false), new { @onclick = "SortLinkClick(event,'Document');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 182 "..\..\Views\Document\IndexPartial.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 182 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "Description")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 183 "..\..\Views\Document\IndexPartial.cshtml"
                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 184 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "Description")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 185 "..\..\Views\Document\IndexPartial.cshtml"
                                                                       }

            
            #line default
            #line hidden
WriteLiteral("                                    </th>\r\n");

            
            #line 187 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 188 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "FileName") && User.CanView("Document"))
                                {
                                    var SortPropertyName = EntityReflector.Properties.FirstOrDefault(q => q.Name == "FileName");

            
            #line default
            #line hidden
WriteLiteral("                                    <th");

WriteLiteral(" scope=\"col\"");

WriteLiteral(" class=\"col4\"");

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 192 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(Html.ActionLink(SortPropertyName.DisplayName, ActionNameUrl, "Document", getSortHtmlAttributes("FileName", false, null, false), new { @onclick = "SortLinkClick(event,'Document');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 193 "..\..\Views\Document\IndexPartial.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 193 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "FileName")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 194 "..\..\Views\Document\IndexPartial.cshtml"
                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 195 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "FileName")
                                        {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 196 "..\..\Views\Document\IndexPartial.cshtml"
                                                                       }

            
            #line default
            #line hidden
WriteLiteral("                                    </th>\r\n");

            
            #line 198 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                <th>\r\n                                    Entity\r" +
"\n                                </th>\r\n                            </tr>\r\n     " +
"                   </thead>\r\n\r\n");

            
            #line 205 "..\..\Views\Document\IndexPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\Document\IndexPartial.cshtml"
                           bool isFirst = true; var oldKey = string.Empty; 
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 206 "..\..\Views\Document\IndexPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 206 "..\..\Views\Document\IndexPartial.cshtml"
                         foreach (var item in Model)
                        {
                            if (ViewBag.IsGroupBy != null && Convert.ToBoolean(ViewBag.IsGroupBy))
                            {

                            }

            
            #line default
            #line hidden
WriteLiteral("                            <tr");

WriteLiteral(" scope=\"row\"");

WriteAttribute("ondblclick", Tuple.Create(" ondblclick=\"", 13842), Tuple.Create("\"", 14178)
, Tuple.Create(Tuple.Create("", 13855), Tuple.Create("DoubleClickRow(", 13855), true)
            
            #line 212 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 13870), Tuple.Create<System.Object, System.Int32>(item.Id
            
            #line default
            #line hidden
, 13870), false)
, Tuple.Create(Tuple.Create("", 13878), Tuple.Create(",\'", 13878), true)
            
            #line 212 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 13880), Tuple.Create<System.Object, System.Int32>(Url.Action(User.CanEdit("Document") ? "Edit" : "Edit", "Document", new { id = item.Id, UrlReferrer = BackUrl, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)
            
            #line default
            #line hidden
, 13880), false)
, Tuple.Create(Tuple.Create("", 14175), Tuple.Create("\');", 14175), true)
);

WriteLiteral(">\r\n\r\n\r\n\r\n                                <td>\r\n                                  " +
"  <div");

WriteLiteral(" style=\"width:42px; margin-top:-2px;\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"btn-group\"");

WriteLiteral(" style=\"position:absolute;\"");

WriteLiteral(">\r\n\r\n");

            
            #line 220 "..\..\Views\Document\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\Document\IndexPartial.cshtml"
                                             if (User.CanEdit("Document"))
                                            {


            
            #line default
            #line hidden
WriteLiteral("                                                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 14575), Tuple.Create("\"", 14889)
            
            #line 223 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 14582), Tuple.Create<System.Object, System.Int32>(Url.Action("Edit","Document", new { id = item.Id,  UrlReferrer = BackUrl, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),viewtype = Convert.ToString(ViewBag.TemplatesName) },null)
            
            #line default
            #line hidden
, 14582), false)
);

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-primary2\"");

WriteLiteral(" alt=\"Edit\"");

WriteLiteral(" title=\"Edit\"");

WriteLiteral(">\r\n                                                    <i");

WriteLiteral(" class=\"fa fa-pencil\"");

WriteLiteral("></i>\r\n                                                </a>\r\n");

            
            #line 226 "..\..\Views\Document\IndexPartial.cshtml"

                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 228 "..\..\Views\Document\IndexPartial.cshtml"
                                             if (!User.CanEdit("Document"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 15324), Tuple.Create("\"", 15645)
            
            #line 230 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 15331), Tuple.Create<System.Object, System.Int32>(Url.Action("Details", "Document", new { id = item.Id, UrlReferrer = BackUrl, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), viewtype = Convert.ToString(ViewBag.TemplatesName) }, null)
            
            #line default
            #line hidden
, 15331), false)
);

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-primary2\"");

WriteLiteral(">\r\n                                                    <i");

WriteLiteral(" class=\"glyphicon glyphicon-eye-open\"");

WriteLiteral("></i>\r\n                                                </a>\r\n");

            
            #line 233 "..\..\Views\Document\IndexPartial.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            <a");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-default\"");

WriteLiteral(" style=\"padding-left:6px; padding-right:6px\"");

WriteLiteral(" alt=\"More Options\"");

WriteLiteral(" title=\"More Options\"");

WriteLiteral(">\r\n                                                <i");

WriteLiteral(" class=\"fa fa-caret-down\"");

WriteLiteral("></i>\r\n                                            </a>\r\n                        " +
"                    <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n");

            
            #line 239 "..\..\Views\Document\IndexPartial.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 239 "..\..\Views\Document\IndexPartial.cshtml"
                                                 if (User.CanEdit("Document"))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li>\r\n                       " +
"                                 <a");

WriteAttribute("href", Tuple.Create(" href=\"", 16562), Tuple.Create("\"", 16876)
            
            #line 242 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 16569), Tuple.Create<System.Object, System.Int32>(Url.Action("Edit","Document", new { id = item.Id,  UrlReferrer = BackUrl, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),viewtype = Convert.ToString(ViewBag.TemplatesName) },null)
            
            #line default
            #line hidden
, 16569), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-edit\"");

WriteLiteral("></i>  Edit</a>\r\n\r\n                                                    </li>\r\n");

            
            #line 245 "..\..\Views\Document\IndexPartial.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                ");

            
            #line 246 "..\..\Views\Document\IndexPartial.cshtml"
                                                 if (User.CanDelete("Document"))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n");

WriteLiteral("                                                    <li>\r\n                       " +
"                                 <a");

WriteAttribute("href", Tuple.Create(" href=\"", 17389), Tuple.Create("\"", 17706)
            
            #line 250 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 17396), Tuple.Create<System.Object, System.Int32>(Url.Action("Delete", "Document", new { id = item.Id, UrlReferrer = BackUrl, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),viewtype = Convert.ToString(ViewBag.TemplatesName) }, null)
            
            #line default
            #line hidden
, 17396), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral(" style=\"color: #E7574B;\"");

WriteLiteral("></i> Delete</a>\r\n                                                    </li>\r\n");

            
            #line 252 "..\..\Views\Document\IndexPartial.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n\r\n                                            </ul>\r\n                    " +
"                    </div>\r\n                                    </div>\r\n        " +
"                        </td>\r\n");

            
            #line 259 "..\..\Views\Document\IndexPartial.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "DocumentName"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <td");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 18334), Tuple.Create("\"", 18387)
, Tuple.Create(Tuple.Create("", 18344), Tuple.Create("OpenQuickEdit(\'Document\',\'", 18344), true)
            
            #line 261 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 18370), Tuple.Create<System.Object, System.Int32>(item.Id
            
            #line default
            #line hidden
, 18370), false)
, Tuple.Create(Tuple.Create("", 18378), Tuple.Create("\',event);", 18378), true)
);

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 262 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.DocumentName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </td>\r\n");

            
            #line 264 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 265 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "Description"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <td");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 18712), Tuple.Create("\"", 18765)
, Tuple.Create(Tuple.Create("", 18722), Tuple.Create("OpenQuickEdit(\'Document\',\'", 18722), true)
            
            #line 267 "..\..\Views\Document\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 18748), Tuple.Create<System.Object, System.Int32>(item.Id
            
            #line default
            #line hidden
, 18748), false)
, Tuple.Create(Tuple.Create("", 18756), Tuple.Create("\',event);", 18756), true)
);

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 268 "..\..\Views\Document\IndexPartial.cshtml"
                                   Write(Html.DisplayFor(modelItem => item.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </td>\r\n");

            
            #line 270 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 271 "..\..\Views\Document\IndexPartial.cshtml"
                                 if (User.CanView("Document", "FileName") && User.CanView("Document"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <td>\r\n");

            
            #line 274 "..\..\Views\Document\IndexPartial.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 274 "..\..\Views\Document\IndexPartial.cshtml"
                                         if (!string.IsNullOrEmpty(Html.DisplayFor(modelItem => item.FileName).ToString()))
                                        {
                                            
            
            #line default
            #line hidden
            
            #line 276 "..\..\Views\Document\IndexPartial.cshtml"
                                       Write(Html.ActionLink(item.FileName, "Download", new { id = item.Id }));

            
            #line default
            #line hidden
            
            #line 276 "..\..\Views\Document\IndexPartial.cshtml"
                                                                                                             

                                        }
                                        else
                                        {
            
            #line default
            #line hidden
WriteLiteral(" <label>NA</label>");

            
            #line 280 "..\..\Views\Document\IndexPartial.cshtml"
                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                    </td>\r\n");

            
            #line 282 "..\..\Views\Document\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                <td>\r\n");

WriteLiteral("                                    ");

            
            #line 284 "..\..\Views\Document\IndexPartial.cshtml"
                               Write(Html.Raw(GeneratorBase.MVC.Models.DoAuditEntry.GetEntityNameForDocument(item.Id, User)));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n\r\n                            </tr>\r\n");

            
            #line 288 "..\..\Views\Document\IndexPartial.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </table>\r\n                </div>\r\n\r\n");

            
            #line 292 "..\..\Views\Document\IndexPartial.cshtml"
                
            
            #line default
            #line hidden
            
            #line 292 "..\..\Views\Document\IndexPartial.cshtml"
                 if (Model.Count > 0)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"pagination\"");

WriteLiteral(" class=\"MyPagination1\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 295 "..\..\Views\Document\IndexPartial.cshtml"
                   Write(Html.PagedListPager(Model, page => Url.Action(ActionNameUrl, "Document", getSortHtmlAttributes(null, true, page, false))));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div");

WriteLiteral(" class=\"fixPageSize\"");

WriteLiteral(">\r\n                            Page Size :\r\n");

WriteLiteral("                            ");

            
            #line 298 "..\..\Views\Document\IndexPartial.cshtml"
                       Write(Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "10", 10 }, { "20", 20 }, { "50", 50 }, { "100", 100 } }, "Key", "Value")
                            , new
                            {
                                @id = "pagesizelistDocument",
                                @onchange = @Html.Raw("pagesizelistChange(event,'Document','"
                                + @User.JavaScriptEncodedName + "')"),
                                @Url = Html.Raw(@Url.Action(ActionNameUrl, "Document",
                                getSortHtmlAttributes(ViewBag.CurrentSort, ViewBag.Pages == 1 ? false : true,
                                null, false), null))
                            }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <span");

WriteLiteral(" style=\"text-align:right;\"");

WriteLiteral("> Total Count: ");

            
            #line 308 "..\..\Views\Document\IndexPartial.cshtml"
                                                                      Write(Model.TotalItemCount);

            
            #line default
            #line hidden
WriteLiteral(@"</span>
                            <script>
                                $(document).ready(function () {
                                    $.validator.setDefaults({
                                        ignore: ""#pagesizelistDocument""
                                    })
                                });
                            </script>
                        </div>
                    </div>
");

            
            #line 318 "..\..\Views\Document\IndexPartial.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
