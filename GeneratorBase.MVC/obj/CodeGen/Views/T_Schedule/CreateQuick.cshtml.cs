#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.T_Schedule
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/T_Schedule/CreateQuick.cshtml")]
    public partial class CreateQuick : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.T_Schedule>
    {
        public CreateQuick()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\T_Schedule\CreateQuick.cshtml"
  
    ViewBag.Title = "Create Schedule";
    Layout = null;

            
            #line default
            #line hidden
WriteLiteral("\r\n<script>\r\n    $(document).ready(function () {\r\n        try {\r\n            var h" +
"ostingEntityName = \"\";\r\n            if (\'");

            
            #line 10 "..\..\Views\T_Schedule\CreateQuick.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 11 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral(@"';
                 $('#' + hostingEntityName + 'ID').attr(""lock"",""true"");
				  $('#' + hostingEntityName + 'ID').trigger(""change"");
            }
        }
        catch (ex) { }
		 if ($(""#CurrentDateTime"") != undefined)
            $(""#CurrentDateTime"").localTimeFromUTC('MM/dd/yyyy');
    });
</script>
<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(">\r\n    $(document).ready(function () {\r\n         $(\"span.input-group-addon.btn-de" +
"fault.calendar\").next(\"input\").each(function (i, obj) {\r\n\r\n            $(this).o" +
"n(\'keydown\', function (e) {\r\n\r\n                if (this.selectionStart || this.s" +
"electionStart == 0) {\r\n                    // selectionStart won\'t work in IE < " +
"9\r\n                    var key = e.which;\r\n                    var prevDefault =" +
" true;\r\n\r\n                    var thouSep = \",\";  // your seperator for thousand" +
"s\r\n                    var deciSep = \".\";  // your seperator for decimals\r\n     " +
"               var deciNumber = 2; // how many numbers after the comma\r\n\r\n      " +
"              var thouReg = new RegExp(thouSep, \"g\");\r\n                    var d" +
"eciReg = new RegExp(deciSep, \"g\");\r\n\r\n                    function spaceCaretPos" +
"(val, cPos) {\r\n                        /// get the right caret position without " +
"the spaces\r\n\r\n                        if (cPos > 0 && val.substring((cPos - 1), " +
"cPos) == thouSep)\r\n                            cPos = cPos - 1;\r\n\r\n             " +
"           if (val.substring(0, cPos).indexOf(thouSep) >= 0) {\r\n                " +
"            cPos = cPos - val.substring(0, cPos).match(thouReg).length;\r\n       " +
"                 }\r\n\r\n                        return cPos;\r\n                    " +
"}\r\n\r\n                    function spaceFormat(val, pos) {\r\n                     " +
"   /// add spaces for thousands\r\n\r\n                        if (val.indexOf(deciS" +
"ep) >= 0) {\r\n                            var comPos = val.indexOf(deciSep);\r\n   " +
"                         var int = val.substring(0, comPos);\r\n                  " +
"          var dec = val.substring(comPos);\r\n                        } else {\r\n  " +
"                          var int = val;\r\n                            var dec = " +
"\"\";\r\n                        }\r\n                        var ret = [val, pos];\r\n\r" +
"\n                        if (int.length > 3) {\r\n\r\n                            va" +
"r newInt = \"\";\r\n                            var spaceIndex = int.length;\r\n\r\n    " +
"                        while (spaceIndex > 3) {\r\n                              " +
"  spaceIndex = spaceIndex - 3;\r\n                                newInt = thouSep" +
" + int.substring(spaceIndex, spaceIndex + 3) + newInt;\r\n                        " +
"        if (pos > spaceIndex) pos++;\r\n                            }\r\n           " +
"                 ret = [int.substring(0, spaceIndex) + newInt + dec, pos];\r\n    " +
"                    }\r\n                        return ret;\r\n                    " +
"}\r\n\r\n                    $(this).on(\'keyup\', function (ev)\r\n                    " +
"{\r\n\r\n                        if (ev.which == 8) {\r\n                            /" +
"/ reformat the thousands after backspace keyup\r\n\r\n                            va" +
"r value = this.value;\r\n                            var caretPos = this.selection" +
"Start;\r\n\r\n                            caretPos = spaceCaretPos(value, caretPos);" +
"\r\n                            value = value.replace(thouReg, \'\');\r\n\r\n           " +
"                 var newValues = spaceFormat(value, caretPos);\r\n                " +
"            this.value = newValues[0];\r\n                            this.selecti" +
"onStart = newValues[1];\r\n                            this.selectionEnd = newValu" +
"es[1];\r\n                        }\r\n                    });\r\n\r\n                  " +
"  if ((e.ctrlKey && (key == 65 || key == 67 || key == 86 || key == 88 || key == " +
"89 || key == 90)) || (e.shiftKey && key == 9)) // You don\'t want to disable your" +
" shortcuts!\r\n                        prevDefault = false;\r\n\r\n                   " +
" if ((key < 37 || key > 40) && key != 8 && key != 9 && key != 13 && key != 46 &&" +
" prevDefault) {\r\n                        e.preventDefault();\r\n\r\n                " +
"        if (!e.altKey && !e.shiftKey && !e.ctrlKey) {\r\n\r\n                       " +
"     var value = this.value;\r\n                            if ((key > 95 && key <" +
" 106) || (key > 47 && key < 58) ||\r\n                              (deciNumber > " +
"0 && (key == 110 || key == 188 || key == 190))) {\r\n\r\n                           " +
"     var keys = { // reformat the keyCode\r\n                                    4" +
"8: 0, 49: 1, 50: 2, 51: 3, 52: 4, 53: 5, 54: 6, 55: 7, 56: 8, 57: 9,\r\n          " +
"                          96: 0, 97: 1, 98: 2, 99: 3, 100: 4, 101: 5, 102: 6, 10" +
"3: 7, 104: 8, 105: 9,\r\n                                    110: deciSep, 188: de" +
"ciSep, 190: deciSep\r\n                                };\r\n\r\n                     " +
"           var caretPos = this.selectionStart;\r\n                                " +
"var caretEnd = this.selectionEnd;\r\n\r\n                                if (caretPo" +
"s != caretEnd) // remove selected text\r\n                                    valu" +
"e = value.substring(0, caretPos) + value.substring(caretEnd);\r\n\r\n               " +
"                 caretPos = spaceCaretPos(value, caretPos);\r\n\r\n                 " +
"               value = value.replace(thouReg, \'\');\r\n\r\n                          " +
"      var before = value.substring(0, caretPos);\r\n                              " +
"  var after = value.substring(caretPos);\r\n                                var ne" +
"wPos = caretPos + 1;\r\n\r\n                                if (keys[key] == deciSep" +
" && value.indexOf(deciSep) >= 0) {\r\n                                    if (befo" +
"re.indexOf(deciSep) >= 0) { newPos--; }\r\n                                    bef" +
"ore = before.replace(deciReg, \'\');\r\n                                    after = " +
"after.replace(deciReg, \'\');\r\n                                }\r\n                " +
"                var newValue = before + keys[key] + after;\r\n\r\n                  " +
"              if (newValue.substring(0, 1) == deciSep) {\r\n                      " +
"              newValue = \"0\" + newValue;\r\n                                    ne" +
"wPos++;\r\n                                }\r\n\r\n                                wh" +
"ile (newValue.length > 1 &&\r\n                                  newValue.substrin" +
"g(0, 1) == \"0\" && newValue.substring(1, 2) != deciSep) {\r\n                      " +
"              newValue = newValue.substring(1);\r\n                               " +
"     newPos--;\r\n                                }\r\n\r\n                           " +
"     if (newValue.indexOf(deciSep) >= 0) {\r\n                                    " +
"var newLength = newValue.indexOf(deciSep) + deciNumber + 1;\r\n                   " +
"                 if (newValue.length > newLength) {\r\n                           " +
"             newValue = newValue.substring(0, newLength);\r\n                     " +
"               }\r\n                                }\r\n\r\n                         " +
"       newValues = spaceFormat(newValue, newPos);\r\n\r\n                           " +
"     this.value = newValues[0];\r\n                                this.selectionS" +
"tart = newValues[1];\r\n                                this.selectionEnd = newVal" +
"ues[1];\r\n                            }\r\n                        }\r\n             " +
"       }\r\n\r\n                    $(this).on(\'blur\', function (e) {\r\n\r\n           " +
"             if (deciNumber > 0) {\r\n                            var value = this" +
".value;\r\n\r\n                            var noDec = \"\";\r\n                        " +
"    for (var i = 0; i < deciNumber; i++)\r\n                                noDec " +
"+= \"0\";\r\n\r\n                            if (value == \"0\" + deciSep + noDec)\r\n    " +
"                            this.value = \"\"; //<-- put your default value here\r\n" +
"                            else\r\n                                if (value.leng" +
"th > 0) {\r\n                                    if (value.indexOf(deciSep) >= 0) " +
"{\r\n                                        var newLength = value.indexOf(deciSep" +
") + deciNumber + 1;\r\n                                        if (value.length < " +
"newLength) {\r\n                                            while (value.length < " +
"newLength) { value = value + \"0\"; }\r\n                                           " +
" this.value = value.substring(0, newLength);\r\n                                  " +
"      }\r\n                                    }\r\n                                " +
"    else this.value = value + deciSep + noDec;\r\n                                " +
"}\r\n                        }\r\n                    });\r\n                }\r\n      " +
"      });\r\n        });\r\n\r\n        $(\"span.input-group-addon.btn-default.calendar" +
"\").next(\"input\").each(function (i, obj) {\r\n            $(this).inputdigits();\r\n " +
"       });\r\n    });\r\n\r\n    function removecurrencycomma()\r\n    {\r\n        $(\"spa" +
"n.input-group-addon.btn-default.calendar\").next(\"input\").each(function (i, obj) " +
"{\r\n            $(this).inputremove();\r\n        });\r\n    }\r\n\r\n    $.fn.inputremov" +
"e = function () {\r\n        return this.each(function () {\r\n            $(this).v" +
"al($(this).val().replace(/[^-\\d\\.]/g, \'\'));\r\n        })\r\n    }\r\n    $.fn.inputdi" +
"gits = function () {\r\n        return this.each(function () {\r\n            var am" +
"ountSpn = $(this).val();\r\n            if (amountSpn != \'\') {\r\n                am" +
"ountSpn = (Math.round(amountSpn * 100) / 100).toFixed(2);\r\n            }\r\n      " +
"      $(this).val(amountSpn.toString().replace(/[,$]/g, \'\').replace(/(\\d)(?=(\\d\\" +
"d\\d)+(?!\\d))/g, \"$1,\").replace(/(\\.\\d{1})$/, \"$1\" + \"0\"));\r\n        })\r\n    }\r\n " +
"   $.fn.digits = function () {\r\n        return this.each(function () {\r\n        " +
"    var amountSpn = $(this).text();\r\n            if (amountSpn != \'\') {\r\n       " +
"         amountSpn = (Math.round(amountSpn * 100) / 100).toFixed(2);\r\n          " +
"  }\r\n            $(this).text(amountSpn.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\" +
"d))/g, \"$1,\").replace(/(\\.\\d{1})$/, \"$1\" + \"0\"));\r\n        })\r\n    }</script>\r\n");

            
            #line 228 "..\..\Views\T_Schedule\CreateQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_ScheduleIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\T_Schedule\CreateQuick.cshtml"
   Write(Html.Raw(ViewBag.T_ScheduleIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                                 ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 10302), Tuple.Create("\"", 10351)
, Tuple.Create(Tuple.Create("", 10309), Tuple.Create<System.Object, System.Int32>(Href("~/Content/bootstrap-datetimepicker.min.css")
, 10309), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 10379), Tuple.Create("\"", 10422)
            
            #line 235 "..\..\Views\T_Schedule\CreateQuick.cshtml"
, Tuple.Create(Tuple.Create("", 10386), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Content/chosen.css")
            
            #line default
            #line hidden
, 10386), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n");

            
            #line 236 "..\..\Views\T_Schedule\CreateQuick.cshtml"
 using (Html.BeginForm("CreateQuick", "T_Schedule",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    
            
            #line default
            #line hidden
            
            #line 238 "..\..\Views\T_Schedule\CreateQuick.cshtml"
Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 238 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                            ;
    Html.ValidationSummary(true);
    Html.EnableClientValidation();

            
            #line default
            #line hidden
WriteLiteral("\t<label");

WriteLiteral(" id=\"ErrMsgQuickAdd\"");

WriteLiteral(" class=\"text-primary small pull-right\"");

WriteLiteral(" style=\"color:red; vertical-align:middle; font-weight:100;\"");

WriteLiteral("></label>\r\n");

WriteLiteral("    <div");

WriteLiteral(" id=\"errorContainerQuickAdd\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" id=\"errorsMsgQuickAdd\"");

WriteLiteral("></div>\r\n        <div");

WriteLiteral(" id=\"errorsQuickAdd\"");

WriteLiteral("></div>\r\n    </div>\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

WriteLiteral("\t");

            
            #line 247 "..\..\Views\T_Schedule\CreateQuick.cshtml"
Write(Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"])));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n               <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">         \r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Basic Details</h3>\r\n                                        </div>\r\n            " +
"                            <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_Name\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Name\"");

WriteLiteral(">\r\n                                    <label>");

            
            #line 261 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_Name));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\t\t \r\n");

WriteLiteral("                                    ");

            
            #line 263 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_Name, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 264 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Name));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\t\t\t\t\t</div>\r\n     \r\n\t\t\t\t\r\n\t\t" +
"\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_Description\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Description\"");

WriteLiteral(">\r\n                                    <label>");

            
            #line 272 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_Description));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n");

WriteLiteral("                                    ");

            
            #line 273 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.TextAreaFor(model => model.T_Description, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 274 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_AssociatedScheduleTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t<label>");

            
            #line 278 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 280 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.RadioButtonListFor(model => model.T_AssociatedScheduleTypeID, (SelectList)ViewBag.T_AssociatedScheduleTypeID, new {  @required ="required",    @dataurl = Url.Action("GetAllValueForRB", "T_Scheduletype",new { caller = "T_AssociatedScheduleTypeID" })}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 281 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.ValidationMessageFor(model => model.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n     \r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t     \r\n                  " +
"          <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_StartDateTime\"");

WriteLiteral(">\r\n                                <label >");

            
            #line 290 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.LabelFor(model => model.T_StartDateTime));

            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start Date Time\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_StartDateTime\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t");

            
            #line 293 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                       Write(Html.TextBoxFor(model => model.T_StartDateTime, new {@id = "datetimepickerT_StartDateTimetxt" ,@class = "form-control",@Value = DateTime.Now.ToString("MM/dd/yyyy hh:ss tt") }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 298 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_StartDateTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n                                <script" +
"");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
                                        $('#datetimepickerT_StartDateTime').datetimepicker();
										$('#datetimepickerT_StartDateTimetxt').datetimepicker();
                                    });
                                </script>
                            </div>


							</div>
                         </div>
                      </div>
       </div>
               <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">         \r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Recurrence Detail</h3>\r\n                                        </div>\r\n        " +
"                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_AssociatedRecurringScheduleDetailsTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t<label>");

            
            #line 322 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 324 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.RadioButtonListFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID, (SelectList)ViewBag.T_AssociatedRecurringScheduleDetailsTypeID, new {    @dataurl = Url.Action("GetAllValueForRB", "T_RecurringScheduleDetailstype",new { caller = "T_AssociatedRecurringScheduleDetailsTypeID" })}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 325 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.ValidationMessageFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n     \r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral("  id=\"dvT_RecurringRepeatFrequencyID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label>");

            
            #line 333 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                              Write(Html.LabelFor(model => model.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width: 100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 335 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.DropDownList("T_RecurringRepeatFrequencyID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_RecurringFrequency", @dataurl = Url.Action("GetAllValue", "T_RecurringFrequency",new { caller = "T_RecurringRepeatFrequencyID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 336 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                           Write(Html.ValidationMessageFor(model => model.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n           " +
"         </div>\r\n     \r\n\t\t\t\t \r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_RepeatByID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t<label>");

            
            #line 343 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 345 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.RadioButtonListFor(model => model.T_RepeatByID, (SelectList)ViewBag.T_RepeatByID, new {    @dataurl = Url.Action("GetAllValueForRB", "T_MonthlyRepeatType",new { caller = "T_RepeatByID" })}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 346 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.ValidationMessageFor(model => model.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n     \r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_RecurringTaskEndTypeID\"");

WriteLiteral(" style=\"min-height:35px;\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t<label>");

            
            #line 353 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 355 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.RadioButtonListFor(model => model.T_RecurringTaskEndTypeID, (SelectList)ViewBag.T_RecurringTaskEndTypeID, new {    @dataurl = Url.Action("GetAllValueForRB", "T_RecurringEndType",new { caller = "T_RecurringTaskEndTypeID" })}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t\t");

            
            #line 356 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.ValidationMessageFor(model => model.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n     \r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t     \r\n                  " +
"          <div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_EndDate\"");

WriteLiteral(">\r\n                                <label >");

            
            #line 365 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                   Write(Html.LabelFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"End Date\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_EndDate\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t");

            
            #line 368 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                       Write(Html.TextBoxFor(model => model.T_EndDate, new {@id = "datetimepickerT_EndDatetxt" ,@class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 373 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n                                <script" +
"");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
                                        $('#datetimepickerT_EndDate').datetimepicker({ pickTime:false });
										$('#datetimepickerT_EndDatetxt').datetimepicker({ pickTime:false });
                                    });
                                </script>
                            </div>


							<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_OccurrenceLimitCount\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Occurrence Limit Count\"");

WriteLiteral(">\r\n                                    <label>");

            
            #line 386 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_OccurrenceLimitCount));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\t\t \r\n");

WriteLiteral("                                    ");

            
            #line 388 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.TextBoxFor(model => model.T_OccurrenceLimitCount, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 389 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_OccurrenceLimitCount));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t\r\n                                </div>\r\n\t\t\t\t\t</div>\r\n     \r\n\t\t\t\t\r\n\t\t" +
"\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6\'");

WriteLiteral(" id=\"dvT_Summary\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Summary\"");

WriteLiteral(">\r\n                                    <label>");

            
            #line 397 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      Write(Html.LabelFor(model => model.T_Summary));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n");

WriteLiteral("                                    ");

            
            #line 398 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.TextAreaFor(model => model.T_Summary, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 399 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Summary));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n         " +
"                </div>\r\n                      </div>\r\n       </div>\r\n           " +
"             </div>\r\n                    </div>\r\n                </div>\r\n       " +
" </div>\r\n");

WriteLiteral("\t\t<button");

WriteLiteral(" id=\"CancelQuickAdd\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Cancel</button>\r\n");

            
            #line 411 "..\..\Views\T_Schedule\CreateQuick.cshtml"
		var busineesrule = User.businessrules.Where(p => p.EntityName == "T_Schedule").ToList();
        if (ViewBag.IsAddPop != null)
		{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Create\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 20880), Tuple.Create("\"", 20942)
, Tuple.Create(Tuple.Create("", 20890), Tuple.Create("QuickAdd(event,\'", 20890), true)
            
            #line 414 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                       , Tuple.Create(Tuple.Create("", 20906), Tuple.Create<System.Object, System.Int32>(busineesrule
            
            #line default
            #line hidden
, 20906), false)
, Tuple.Create(Tuple.Create("", 20919), Tuple.Create("\',", 20919), true)
            
            #line 414 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                      , Tuple.Create(Tuple.Create("", 20921), Tuple.Create<System.Object, System.Int32>(busineesrule.Count
            
            #line default
            #line hidden
, 20921), false)
, Tuple.Create(Tuple.Create("", 20940), Tuple.Create(");", 20940), true)
);

WriteLiteral(" />\r\n");

            
            #line 415 "..\..\Views\T_Schedule\CreateQuick.cshtml"
		}
		else
		{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Create\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 21035), Tuple.Create("\"", 21177)
, Tuple.Create(Tuple.Create("", 21045), Tuple.Create("removecurrencycomma();", 21045), true)
, Tuple.Create(Tuple.Create(" ", 21067), Tuple.Create("QuickAddFromIndex(event,true,\'T_Schedule\',\'", 21068), true)
            
            #line 418 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                                                         , Tuple.Create(Tuple.Create("", 21111), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 21111), false)
, Tuple.Create(Tuple.Create("", 21138), Tuple.Create("\',\'", 21138), true)
            
            #line 418 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                                                                                       , Tuple.Create(Tuple.Create("", 21141), Tuple.Create<System.Object, System.Int32>(busineesrule
            
            #line default
            #line hidden
, 21141), false)
, Tuple.Create(Tuple.Create("", 21154), Tuple.Create("\',", 21154), true)
            
            #line 418 "..\..\Views\T_Schedule\CreateQuick.cshtml"
                                                                                                                      , Tuple.Create(Tuple.Create("", 21156), Tuple.Create<System.Object, System.Int32>(busineesrule.Count
            
            #line default
            #line hidden
, 21156), false)
, Tuple.Create(Tuple.Create("", 21175), Tuple.Create(");", 21175), true)
);

WriteLiteral(" />\r\n");

            
            #line 419 "..\..\Views\T_Schedule\CreateQuick.cshtml"
		}
}

            
            #line default
            #line hidden
            
            #line 421 "..\..\Views\T_Schedule\CreateQuick.cshtml"
Write(Scripts.Render("~/bundles/jqueryval"));

            
            #line default
            #line hidden
WriteLiteral("\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 21238), Tuple.Create("\"", 21278)
, Tuple.Create(Tuple.Create("", 21244), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/Common3/chosen.jquery.js")
, 21244), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: ""95%"" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>


");

        }
    }
}
#pragma warning restore 1591
