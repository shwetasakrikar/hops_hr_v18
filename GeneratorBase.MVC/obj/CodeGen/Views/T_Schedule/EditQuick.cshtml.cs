#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.T_Schedule
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\T_Schedule\EditQuick.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/T_Schedule/EditQuick.cshtml")]
    public partial class EditQuick : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.T_Schedule>
    {
        
        #line 9 "..\..\Views\T_Schedule\EditQuick.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("T_Schedule", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public EditQuick()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\T_Schedule\EditQuick.cshtml"
  
    ViewBag.Title = "Edit Schedule";
    var EditPermission = User.CanEditItem("T_Schedule", Model, User);
    var DeletePermission = User.CanDeleteItem("T_Schedule", Model, User);
    Layout = null;

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<script>\r\n    $(document).ready(function () {\r\n        try {\r\n            var hos" +
"tingEntityName = \"\";\r\n            if (\'");

            
            #line 22 "..\..\Views\T_Schedule\EditQuick.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 23 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n                $(\'#\' + hostingEntityName + \'ID\').attr(\"lock\", \"true\");\r\n    " +
"            $(\'#\' + hostingEntityName + \'ID\').trigger(\"change\");\r\n            }\r" +
"\n        }\r\n        catch (ex) { }\r\n    });\r\n</script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n    $(document).ready(function () {\r\n      //  ChangeScheduleType();\r\n      " +
"  // ChangeEndType();\r\n        $(\'#T_RecurringTaskEndTypeID\').val(\'");

            
            #line 36 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                       Write(Model.T_RecurringTaskEndTypeID);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n        $(\'select[multiple=\"multiple\"]\').each(function () {\r\n            $(t" +
"his).multiselect({ buttonWidth: \'100%\' });\r\n        });\r\n    });\r\n    function R" +
"epeatTypeChange() {\r\n        var $obj = $(\'#T_AssociatedRecurringScheduleDetails" +
"TypeID\');\r\n        var value = $obj.val();\r\n        text = ($(\'#T_AssociatedRecu" +
"rringScheduleDetailsTypeID :selected\').text());\r\n        $(\"#RepeatOnWeekly\").hi" +
"de();\r\n        $(\"#dvT_RepeatByID\").hide();\r\n        if (text == \"Weekly\") {\r\n  " +
"          $(\"#RepeatOnWeekly\").show();\r\n        }\r\n        if (text == \"Monthly\"" +
") {\r\n            $(\"#dvT_RepeatByID\").show();\r\n        }\r\n    }\r\n    function Ch" +
"angeScheduleType() {\r\n        var $obj = $(\'input:radio[name=\"T_AssociatedSchedu" +
"leTypeID\"]:checked\');\r\n        var SelectedVal = $obj.val();\r\n        var text =" +
" $obj.next(\'span:first\').html()\r\n        $(\"#dvRepeat\").hide();\r\n        $(\'#T_R" +
"ecurringTaskEndTypeID\').removeAttr(\"Required\");\r\n        if (text == \"Repeat\") {" +
"\r\n            $(\"#dvRepeat\").show();\r\n            $(\'#T_RecurringTaskEndTypeID\')" +
".attr(\"Required\", \"Required\");\r\n            RepeatTypeChange();\r\n            Cha" +
"ngeEndType();\r\n        }\r\n    }\r\n    function ChangeEndType() {\r\n        var $ob" +
"j = $(\'#T_RecurringTaskEndTypeID\');\r\n        var SelectedVal = $obj.val();\r\n    " +
"    text = ($(\'#T_RecurringTaskEndTypeID :selected\').text());\r\n        $(\"#dvT_E" +
"ndDate\").hide();\r\n        $(\"#dvT_OccurrenceLimitCount\").hide();\r\n        $(\'#T_" +
"EndDate\').removeAttr(\"Required\");\r\n        $(\'#T_OccurrenceLimitCount\').removeAt" +
"tr(\"Required\");\r\n        if (text == \"After Specified Occurrences\") {\r\n         " +
"   $(\"#dvT_OccurrenceLimitCount\").show();\r\n            $(\'#T_OccurrenceLimitCoun" +
"t\').attr(\"Required\", \"Required\");\r\n        }\r\n        if (text == \"On Specified " +
"Date\") {\r\n            $(\"#dvT_EndDate\").show();\r\n            $(\'#T_EndDate\').att" +
"r(\"Required\", \"Required\");\r\n        }\r\n    }\r\n</script>\r\n<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(">\r\n    $(document).ready(function () {\r\n        $(\"span.input-group-addon.btn-def" +
"ault.calendar\").next(\"input\").each(function (i, obj) {\r\n            $(this).on(\'" +
"keydown\', function (e) {\r\n                if (this.selectionStart || this.select" +
"ionStart == 0) {\r\n                    // selectionStart won\'t work in IE < 9\r\n  " +
"                  var key = e.which;\r\n                    var prevDefault = true" +
";\r\n                    var thouSep = \",\";  // your seperator for thousands\r\n    " +
"                var deciSep = \".\";  // your seperator for decimals\r\n            " +
"        var deciNumber = 2; // how many numbers after the comma\r\n               " +
"     var thouReg = new RegExp(thouSep, \"g\");\r\n                    var deciReg = " +
"new RegExp(deciSep, \"g\");\r\n                    function spaceCaretPos(val, cPos)" +
" {\r\n                        /// get the right caret position without the spaces\r" +
"\n                        if (cPos > 0 && val.substring((cPos - 1), cPos) == thou" +
"Sep)\r\n                            cPos = cPos - 1;\r\n                        if (" +
"val.substring(0, cPos).indexOf(thouSep) >= 0) {\r\n                            cPo" +
"s = cPos - val.substring(0, cPos).match(thouReg).length;\r\n                      " +
"  }\r\n                        return cPos;\r\n                    }\r\n              " +
"      function spaceFormat(val, pos) {\r\n                        /// add spaces f" +
"or thousands\r\n                        if (val.indexOf(deciSep) >= 0) {\r\n        " +
"                    var comPos = val.indexOf(deciSep);\r\n                        " +
"    var int = val.substring(0, comPos);\r\n                            var dec = v" +
"al.substring(comPos);\r\n                        } else {\r\n                       " +
"     var int = val;\r\n                            var dec = \"\";\r\n                " +
"        }\r\n                        var ret = [val, pos];\r\n                      " +
"  if (int.length > 3) {\r\n                            var newInt = \"\";\r\n         " +
"                   var spaceIndex = int.length;\r\n                            whi" +
"le (spaceIndex > 3) {\r\n                                spaceIndex = spaceIndex -" +
" 3;\r\n                                newInt = thouSep + int.substring(spaceIndex" +
", spaceIndex + 3) + newInt;\r\n                                if (pos > spaceInde" +
"x) pos++;\r\n                            }\r\n                            ret = [int" +
".substring(0, spaceIndex) + newInt + dec, pos];\r\n                        }\r\n    " +
"                    return ret;\r\n                    }\r\n                    $(th" +
"is).on(\'keyup\', function (ev) {\r\n                        if (ev.which == 8) {\r\n " +
"                           // reformat the thousands after backspace keyup\r\n    " +
"                        var value = this.value;\r\n                            var" +
" caretPos = this.selectionStart;\r\n                            caretPos = spaceCa" +
"retPos(value, caretPos);\r\n                            value = value.replace(thou" +
"Reg, \'\');\r\n                            var newValues = spaceFormat(value, caretP" +
"os);\r\n                            this.value = newValues[0];\r\n                  " +
"          this.selectionStart = newValues[1];\r\n                            this." +
"selectionEnd = newValues[1];\r\n                        }\r\n                    });" +
"\r\n                    if ((e.ctrlKey && (key == 65 || key == 67 || key == 86 || " +
"key == 88 || key == 89 || key == 90)) || (e.shiftKey && key == 9)) // You don\'t " +
"want to disable your shortcuts!\r\n                        prevDefault = false;\r\n " +
"                   if ((key < 37 || key > 40) && key != 8 && key != 9 && key != " +
"13 && key != 46 && prevDefault) {\r\n                        e.preventDefault();\r\n" +
"                        if (!e.altKey && !e.shiftKey && !e.ctrlKey) {\r\n         " +
"                   var value = this.value;\r\n                            if ((key" +
" > 95 && key < 106) || (key > 47 && key < 58) ||\r\n                              " +
"(deciNumber > 0 && (key == 110 || key == 188 || key == 190))) {\r\n               " +
"                 var keys = { // reformat the keyCode\r\n                         " +
"           48: 0, 49: 1, 50: 2, 51: 3, 52: 4, 53: 5, 54: 6, 55: 7, 56: 8, 57: 9," +
"\r\n                                    96: 0, 97: 1, 98: 2, 99: 3, 100: 4, 101: 5" +
", 102: 6, 103: 7, 104: 8, 105: 9,\r\n                                    110: deci" +
"Sep, 188: deciSep, 190: deciSep\r\n                                };\r\n           " +
"                     var caretPos = this.selectionStart;\r\n                      " +
"          var caretEnd = this.selectionEnd;\r\n                                if " +
"(caretPos != caretEnd) // remove selected text\r\n                                " +
"    value = value.substring(0, caretPos) + value.substring(caretEnd);\r\n         " +
"                       caretPos = spaceCaretPos(value, caretPos);\r\n             " +
"                   value = value.replace(thouReg, \'\');\r\n                        " +
"        var before = value.substring(0, caretPos);\r\n                            " +
"    var after = value.substring(caretPos);\r\n                                var " +
"newPos = caretPos + 1;\r\n                                if (keys[key] == deciSep" +
" && value.indexOf(deciSep) >= 0) {\r\n                                    if (befo" +
"re.indexOf(deciSep) >= 0) { newPos--; }\r\n                                    bef" +
"ore = before.replace(deciReg, \'\');\r\n                                    after = " +
"after.replace(deciReg, \'\');\r\n                                }\r\n                " +
"                var newValue = before + keys[key] + after;\r\n                    " +
"            if (newValue.substring(0, 1) == deciSep) {\r\n                        " +
"            newValue = \"0\" + newValue;\r\n                                    newP" +
"os++;\r\n                                }\r\n                                while " +
"(newValue.length > 1 &&\r\n                                  newValue.substring(0," +
" 1) == \"0\" && newValue.substring(1, 2) != deciSep) {\r\n                          " +
"          newValue = newValue.substring(1);\r\n                                   " +
" newPos--;\r\n                                }\r\n                                i" +
"f (newValue.indexOf(deciSep) >= 0) {\r\n                                    var ne" +
"wLength = newValue.indexOf(deciSep) + deciNumber + 1;\r\n                         " +
"           if (newValue.length > newLength) {\r\n                                 " +
"       newValue = newValue.substring(0, newLength);\r\n                           " +
"         }\r\n                                }\r\n                                n" +
"ewValues = spaceFormat(newValue, newPos);\r\n                                this." +
"value = newValues[0];\r\n                                this.selectionStart = new" +
"Values[1];\r\n                                this.selectionEnd = newValues[1];\r\n " +
"                           }\r\n                        }\r\n                    }\r\n" +
"                    $(this).on(\'blur\', function (e) {\r\n                        i" +
"f (deciNumber > 0) {\r\n                            var value = this.value;\r\n     " +
"                       var noDec = \"\";\r\n                            for (var i =" +
" 0; i < deciNumber; i++)\r\n                                noDec += \"0\";\r\n       " +
"                     if (value == \"0\" + deciSep + noDec)\r\n                      " +
"          this.value = \"\"; //<-- put your default value here\r\n                  " +
"          else\r\n                                if (value.length > 0) {\r\n       " +
"                             if (value.indexOf(deciSep) >= 0) {\r\n               " +
"                         var newLength = value.indexOf(deciSep) + deciNumber + 1" +
";\r\n                                        if (value.length < newLength) {\r\n    " +
"                                        while (value.length < newLength) { value" +
" = value + \"0\"; }\r\n                                            this.value = valu" +
"e.substring(0, newLength);\r\n                                        }\r\n         " +
"                           }\r\n                                    else this.valu" +
"e = value + deciSep + noDec;\r\n                                }\r\n               " +
"         }\r\n                    });\r\n                }\r\n            });\r\n       " +
" });\r\n        $(\"span.input-group-addon.btn-default.calendar\").next(\"input\").eac" +
"h(function (i, obj) {\r\n            $(this).inputdigits();\r\n        });\r\n    });\r" +
"\n    function removecurrencycomma() {\r\n        $(\"span.input-group-addon.btn-def" +
"ault.calendar\").next(\"input\").each(function (i, obj) {\r\n            $(this).inpu" +
"tremove();\r\n        });\r\n    }\r\n    $.fn.inputremove = function () {\r\n        re" +
"turn this.each(function () {\r\n            $(this).val($(this).val().replace(/[^-" +
"\\d\\.]/g, \'\'));\r\n        })\r\n    }\r\n    $.fn.inputdigits = function () {\r\n       " +
" return this.each(function () {\r\n            var amountSpn = $(this).val();\r\n   " +
"         if (amountSpn != \'\') {\r\n                amountSpn = (Math.round(amountS" +
"pn * 100) / 100).toFixed(2);\r\n            }\r\n            $(this).val(amountSpn.t" +
"oString().replace(/[,$]/g, \'\').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\").replac" +
"e(/(\\.\\d{1})$/, \"$1\" + \"0\"));\r\n        })\r\n    }\r\n    $.fn.digits = function () " +
"{\r\n        return this.each(function () {\r\n            var amountSpn = $(this).t" +
"ext();\r\n            if (amountSpn != \'\') {\r\n                amountSpn = (Math.ro" +
"und(amountSpn * 100) / 100).toFixed(2);\r\n            }\r\n            $(this).text" +
"(amountSpn.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\").replace(/(\\.\\d{" +
"1})$/, \"$1\" + \"0\"));\r\n        })\r\n    }</script>\r\n");

            
            #line 249 "..\..\Views\T_Schedule\EditQuick.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_ScheduleIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 252 "..\..\Views\T_Schedule\EditQuick.cshtml"
   Write(Html.Raw(ViewBag.T_ScheduleIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 252 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                 ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 12630), Tuple.Create("\"", 12679)
, Tuple.Create(Tuple.Create("", 12637), Tuple.Create<System.Object, System.Int32>(Href("~/Content/bootstrap-datetimepicker.min.css")
, 12637), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <label");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" class=\"text-primary small pull-right\"");

WriteLiteral(" style=\"color:red; vertical-align:middle; font-weight:100;\"");

WriteLiteral("></label>\r\n        <div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n            <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n        </div>\r\n        <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n            <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(">");

            
            #line 264 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                            Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n        </h2>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n");

            
            #line 269 "..\..\Views\T_Schedule\EditQuick.cshtml"
 using (Html.BeginForm("EditQuick", "T_Schedule", new { UrlReferrer = Convert.ToString(ViewData["T_ScheduleParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
    
            
            #line default
            #line hidden
            
            #line 273 "..\..\Views\T_Schedule\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 273 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                      
    
            
            #line default
            #line hidden
            
            #line 274 "..\..\Views\T_Schedule\EditQuick.cshtml"
Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 274 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 279 "..\..\Views\T_Schedule\EditQuick.cshtml"
               Write(Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"])));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <div>\r\n                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Basic Details</h3>\r\n                                </div>\r\n                    " +
"            <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 288 "..\..\Views\T_Schedule\EditQuick.cshtml"
                               Write(Html.HiddenFor(model=>model.T_Name));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 289 "..\..\Views\T_Schedule\EditQuick.cshtml"
                               Write(Html.HiddenFor(model => model.T_Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                    ");

            
            #line 290 "..\..\Views\T_Schedule\EditQuick.cshtml"
                               Write(Html.HiddenFor(model => model.T_EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <div");

WriteLiteral(" class=\'col-sm-8 col-md-8  col-xs-12\'");

WriteLiteral(" id=\"dvT_AssociatedScheduleTypeID\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 292 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral("  <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group radiocontainer\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 295 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.RadioButtonListFor(model => model.T_AssociatedScheduleTypeID, (SelectList)ViewBag.T_AssociatedScheduleTypeID, new { @onclick = "ChangeScheduleType();", @required = "required", @dataurl = Url.Action("GetAllValueForRB", "T_Scheduletype", new { caller = "T_AssociatedScheduleTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 296 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_AssociatedScheduleTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_StartDateTime\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral("> Start Date <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                        <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start Date Time\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_StartDateTime\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 305 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.TextBoxFor(model => model.T_StartDateTime, "{0:MM/dd/yyyy}", new { @id = "T_StartDateTime", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                        <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                    </span>\r\n             " +
"                                   </div>\r\n");

WriteLiteral("                                                ");

            
            #line 310 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_StartDateTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                $('#datetimepickerT_StartDateTime').datetimepicker({ pickTime: false });
                                                $('#T_StartDateTime').datetimepicker({ pickTime: false });
                                            });
                                        </script>
                                    </div>
                                    <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral("></div>\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_StartTime\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 322 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_StartTime));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                        <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start Time\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_StartTime\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 326 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.TextBoxFor(model => model.T_StartTime, "{0:HH:mm}", User.CanEdit("T_Schedule", "T_StartTime") ? (object)new { @id = "T_StartTime", @class = "form-control", @format = "hh:mm" } : (object)new { @id = "T_StartTime", @class = "form-control", @readonly = "readonly", @format = "hh:mm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                        <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                    </span>\r\n             " +
"                                   </div>\r\n");

WriteLiteral("                                                ");

            
            #line 331 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_StartTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                $('#T_StartTime').datetimepicker({ pickDate: false, minuteStepping: 15 });
                                                $('#datetimepickerT_StartTime').datetimepicker({ pickDate: false, minuteStepping: 15 });
                                            });
                                        </script>
                                    </div>
                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EndTime\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 342 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_EndTime));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                        <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Start Time\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_EndTime\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 346 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.TextBoxFor(model => model.T_EndTime, "{0:HH:mm}", User.CanEdit("T_Schedule", "T_EndTime") ? (object)new { @id = "T_EndTime", @class = "form-control", @format = "hh:mm" } : (object)new { @id = "T_EndTime", @class = "form-control", @readonly = "readonly", @format = "hh:mm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                        <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                    </span>\r\n             " +
"                                   </div>\r\n");

WriteLiteral("                                                ");

            
            #line 351 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_EndTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                $('#T_EndTime').datetimepicker({ pickDate: false, minuteStepping: 15 });
                                                $('#datetimepickerT_EndTime').datetimepicker({ pickDate: false, minuteStepping: 15 });
                                            });
                                        </script>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div");

WriteLiteral(" id=\"dvRepeat\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\r\n                                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Recurrence Detail</h3>\r\n                                </div>\r\n                " +
"                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_AssociatedRecurringScheduleDetailsTypeID\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 375 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 378 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.DropDownListFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID, (SelectList)ViewBag.T_AssociatedRecurringScheduleDetailsTypeID, new { @class = "form-control", @onchange = "RepeatTypeChange();", @dataurl = Url.Action("GetAllValueForRB", "T_RecurringScheduleDetailstype", new { caller = "T_AssociatedRecurringScheduleDetailsTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 379 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_AssociatedRecurringScheduleDetailsTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_RecurringRepeatFrequencyID\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 385 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                                  Write(Html.LabelFor(model => model.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 388 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.DropDownListFor(model => model.T_RecurringRepeatFrequencyID, (SelectList)ViewBag.T_RecurringRepeatFrequencyID, new { @class = "chosen-select form-control", @HostingName = "T_RecurringFrequency", @dataurl = Url.Action("GetAllValue", "T_RecurringFrequency", new { caller = "T_RecurringRepeatFrequencyID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                    ");

            
            #line 389 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.ValidationMessageFor(model => model.T_RecurringRepeatFrequencyID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </div>\r\n                       " +
"                     </div>\r\n                                        </div>\r\n   " +
"                                 </div>\r\n                                    <di" +
"v");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_RepeatByID\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 395 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 398 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.DropDownListFor(model => model.T_RepeatByID, (SelectList)ViewBag.T_RepeatByID, new { @class = "form-control", @dataurl = Url.Action("GetAllValueForRB", "T_MonthlyRepeatType", new { caller = "T_RepeatByID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 399 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_RepeatByID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" class=\'col-sm-6 col-md-6  col-xs-12\'");

WriteLiteral(" id=\"dvT_RecurringTaskEndTypeID\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 404 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral("  </label>\r\n                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 407 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.DropDownListFor(model => model.T_RecurringTaskEndTypeID, (SelectList)ViewBag.T_RecurringTaskEndTypeID,"--Select--", new { @class = "form-control", @onchange = "ChangeEndType()", @dataurl = Url.Action("GetAllValueForRB", "T_RecurringEndType", new { caller = "T_RecurringTaskEndTypeID" }) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 408 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_RecurringTaskEndTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_EndDate\"");

WriteLiteral(">\r\n                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 413 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                              Write(Html.LabelFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                        <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"End Date\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_EndDate\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 417 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                               Write(Html.TextBoxFor(model => model.T_EndDate, new { @id = "T_EndDate", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    <span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                                        <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                                    </span>\r\n             " +
"                                   </div>\r\n");

WriteLiteral("                                                ");

            
            #line 422 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_EndDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                $('#datetimepickerT_EndDate').datetimepicker({ pickTime: false });
                                                $('#T_EndDate').datetimepicker({ pickTime: false });
                                            });
                                        </script>
                                    </div>
                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_OccurrenceLimitCount\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Occurrence Limit Count\"");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">Occurrence Count</label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("                                                ");

            
            #line 437 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.TextBoxFor(model => model.T_OccurrenceLimitCount, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 438 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_OccurrenceLimitCount));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Summary\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Summary\"");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 444 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                                  Write(Html.LabelFor(model => model.T_Summary));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 446 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.TextAreaFor(model => model.T_Summary, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 447 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.T_Summary));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n               " +
"                     <div");

WriteLiteral(" id=\"RepeatOnWeekly\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-sx-12\"");

WriteLiteral(" id=\"dvT_Schedule\"");

WriteLiteral(">\r\n\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">\r\n                                                Recurrence Days\r\n             " +
"                               </label>\r\n                                       " +
"     <div>\r\n");

WriteLiteral("                                                ");

            
            #line 458 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                           Write(Html.DropDownList("SelectedT_RecurrenceDays_T_RepeatOn", (MultiSelectList)ViewBag.SelectedT_RecurrenceDays_T_RepeatOn, new { @multiple = "multiple", @HostingName = "T_RecurrenceDays", @dataurl = Url.Action("GetAllMultiSelectValue", "T_RecurrenceDays", null) }));

            
            #line default
            #line hidden
WriteLiteral(@"
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
");

            
            #line 470 "..\..\Views\T_Schedule\EditQuick.cshtml"
    
            
            #line default
            #line hidden
            
            #line 470 "..\..\Views\T_Schedule\EditQuick.cshtml"
Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 470 "..\..\Views\T_Schedule\EditQuick.cshtml"
                            ;
                            var busineesrule1 = User.businessrules.Where(p => p.EntityName == "T_Schedule").ToList();

            
            #line default
            #line hidden
WriteLiteral("                            <button");

WriteLiteral(" id=\"CancelQuickAdd\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(" data-dismiss=\"modal\"");

WriteLiteral(" aria-hidden=\"true\"");

WriteLiteral(">Cancel</button>\r\n");

            
            #line 473 "..\..\Views\T_Schedule\EditQuick.cshtml"
    if (EditPermission)
    {

            
            #line default
            #line hidden
WriteLiteral("        <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 31311), Tuple.Create("\"", 31461)
, Tuple.Create(Tuple.Create("", 31321), Tuple.Create("removecurrencycomma();", 31321), true)
, Tuple.Create(Tuple.Create(" ", 31343), Tuple.Create("QuickEditFromGrid(event,true,\'T_Schedule\',\'", 31344), true)
            
            #line 475 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                                  , Tuple.Create(Tuple.Create("", 31387), Tuple.Create<System.Object, System.Int32>(ViewData["AssociatedType"]
            
            #line default
            #line hidden
, 31387), false)
, Tuple.Create(Tuple.Create("", 31414), Tuple.Create("\',false,\'", 31414), true)
            
            #line 475 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                                                                      , Tuple.Create(Tuple.Create("", 31423), Tuple.Create<System.Object, System.Int32>(busineesrule1
            
            #line default
            #line hidden
, 31423), false)
, Tuple.Create(Tuple.Create("", 31437), Tuple.Create("\',", 31437), true)
            
            #line 475 "..\..\Views\T_Schedule\EditQuick.cshtml"
                                                                                                                                      , Tuple.Create(Tuple.Create("", 31439), Tuple.Create<System.Object, System.Int32>(busineesrule1.Count
            
            #line default
            #line hidden
, 31439), false)
, Tuple.Create(Tuple.Create("", 31459), Tuple.Create(");", 31459), true)
);

WriteLiteral(" />\r\n");

WriteLiteral("        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 477 "..\..\Views\T_Schedule\EditQuick.cshtml"
    }
}

            
            #line default
            #line hidden
            
            #line 479 "..\..\Views\T_Schedule\EditQuick.cshtml"
Write(Scripts.Render("~/bundles/jqueryval"));

            
            #line default
            #line hidden
WriteLiteral("\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 31584), Tuple.Create("\"", 31624)
, Tuple.Create(Tuple.Create("", 31590), Tuple.Create<System.Object, System.Int32>(Href("~/Scripts/Common3/chosen.jquery.js")
, 31590), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
    $(document).ready(function () {
        ChangeScheduleType();              
    });
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: ""95%"" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>
<script>
    $(""input[type='submit']"").click(function () {
        var $this = $(this);
        SetCalendarStartDate('T_StartDateTime', 'T_StartTime')
       // SetCalendarStartDate('T_StartDateTime', 'T_StartTime')
        $('input:hidden[name=""hdncommand""]').val($this.val());
    });
</script>
");

            
            #line 504 "..\..\Views\T_Schedule\EditQuick.cshtml"
  
    var busineesrule = User.businessrules.Where(p => p.EntityName == "T_Schedule").ToList();
    if ((busineesrule != null && busineesrule.Count > 0))
    {

            
            #line default
            #line hidden
WriteLiteral("        <script>\r\n            $(document).ready(function () {\r\n                $." +
"ajax({\r\n                    async: false,\r\n                    type: \"GET\",\r\n   " +
"                 url: \"");

            
            #line 513 "..\..\Views\T_Schedule\EditQuick.cshtml"
                     Write(Url.Action("GetLockBusinessRules", "T_Schedule"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                    data: $(""form"").serialize(),
                    success: function (data) {
                        if (data.length > 0) {
                            $(':input:not([readonly])', 'form').attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
                            document.getElementById('ErrMsg').innerHTML = data + "" Rules applied"";
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
                $.ajax({
                    async: false,
                    type: ""GET"",
                    url: """);

            
            #line 527 "..\..\Views\T_Schedule\EditQuick.cshtml"
                     Write(Url.Action("GetReadOnlyProperties", "T_Schedule"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                    data: $(""form"").closest(this).serialize(),
                    success: function (data) {
                        for (var key in data) {
                            $('#' + key).attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
                            $(""input[type='radio'][name='"" + key + ""']"").attr('disabled', 'disabled').attr('readonly', 'readonly');
                            $('form').append('<input type=""hidden"" name=""' + key + '"" id=""' + key + '"" value=""' + $('#' + key).val() + '"" />');
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            });
        </script>
");

WriteLiteral("        <script>\r\n            $(\"form\").submit(function () {\r\n                var" +
" flag = true;\r\n            });\r\n        </script>\r\n");

            
            #line 546 "..\..\Views\T_Schedule\EditQuick.cshtml"
    }
    else
    {
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

        }
    }
}
#pragma warning restore 1591
