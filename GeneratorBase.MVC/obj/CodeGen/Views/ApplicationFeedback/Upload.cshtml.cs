#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.ApplicationFeedback
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ApplicationFeedback/Upload.cshtml")]
    public partial class Upload : GeneratorBase.MVC.CustomWebViewPage<dynamic>
    {
        public Upload()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\ApplicationFeedback\Upload.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-thumbs-up text-primary\"");

WriteLiteral(" style=\"margin-bottom:-20px;\"");

WriteLiteral("></i> ApplicationFeedback  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i>  <span> ");

            
            #line 7 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                                                                                                                    Write(ViewBag.Title);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n        </h1>\r\n    </div>\r\n</div>\r\n");

            
            #line 11 "..\..\Views\ApplicationFeedback\Upload.cshtml"
 if (ViewBag.ImportError != null)
{
    if (ViewBag.ImportError == "success")
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"margin:0px; padding:8px;\"");

WriteLiteral(">\r\n                         Data imported successfully.\r\n                    </di" +
"v>\r\n                </div>\r\n\t\t\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 772), Tuple.Create("\"", 822)
            
            #line 22 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 779), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "ApplicationFeedback")
            
            #line default
            #line hidden
, 779), false)
);

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(">Return to ApplicationFeedback</a>\r\n                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 908), Tuple.Create("\"", 943)
            
            #line 23 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 915), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "Home")
            
            #line default
            #line hidden
, 915), false)
);

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(">Return to Home</a>\r\n            </div>\r\n        </div>\r\n");

            
            #line 26 "..\..\Views\ApplicationFeedback\Upload.cshtml"
    }
    else
    {
        using (Html.BeginForm("DownloadSheet", "ApplicationFeedback", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnFilePath\"");

WriteAttribute("value", Tuple.Create(" value=\"", 1387), Tuple.Create("\"", 1412)
            
            #line 34 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 1395), Tuple.Create<System.Object, System.Int32>(ViewBag.FilePath
            
            #line default
            #line hidden
, 1395), false)
);

WriteLiteral(" />\r\n                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnErrorList\"");

WriteAttribute("value", Tuple.Create(" value=\"", 1482), Tuple.Create("\"", 1508)
            
            #line 35 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 1490), Tuple.Create<System.Object, System.Int32>(ViewBag.ErrorList
            
            #line default
            #line hidden
, 1490), false)
);

WriteLiteral(" />\r\n                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"margin:0px; padding:8px;\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 37 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                       Write(Html.Raw(ViewBag.ImportError));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                   " +
" <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Download Error Sheet\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n\t\t\t\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 1829), Tuple.Create("\"", 1879)
            
            #line 41 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 1836), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "ApplicationFeedback")
            
            #line default
            #line hidden
, 1836), false)
);

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(">Return to ApplicationFeedback</a>\r\n                </div>\r\n            </div>\r\n");

            
            #line 44 "..\..\Views\ApplicationFeedback\Upload.cshtml"
        }
    }
}

            
            #line default
            #line hidden
            
            #line 47 "..\..\Views\ApplicationFeedback\Upload.cshtml"
 if (ViewBag.ColumnMapping != null)
{
    using (Html.BeginForm("ConfirmImportData", "ApplicationFeedback", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(" style=\"margin:0px; padding:8px;\"");

WriteLiteral(">\r\n                        Define Column Mapping(s) for ApplicationFeedback\r\n    " +
"                    <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(">\r\n                            <input");

WriteLiteral(" name=\"SaveMapping\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" /> Save as a default mapping\r\n\t\t\t\t\t\t\t<input");

WriteLiteral(" name=\"MappingName\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" placeholder=\"Enter Name of Mapping\"");

WriteLiteral(" />\r\n                        </div>\r\n                    </div>\r\n                " +
"    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnFilePath\"");

WriteAttribute("value", Tuple.Create(" value=\"", 2823), Tuple.Create("\"", 2848)
            
            #line 61 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 2831), Tuple.Create<System.Object, System.Int32>(ViewBag.FilePath
            
            #line default
            #line hidden
, 2831), false)
);

WriteLiteral(" />\r\n                    <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"margin:0px; padding:8px;\"");

WriteLiteral(">\r\n                        <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                            <thead>\r\n                                <tr>\r\n   " +
"                                 <th>Table Columns</th>\r\n                       " +
"             <th>Sheet Columns</th>\r\n                                </tr>\r\n");

            
            #line 69 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 69 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                 foreach (var col in ViewBag.ColumnMapping)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>\r\n");

WriteLiteral("                                            ");

            
            #line 73 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                       Write(Html.Label((col.Key as GeneratorBase.MVC.ModelReflector.Property).DisplayName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 74 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 74 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                             if ((col.Key as GeneratorBase.MVC.ModelReflector.Property).IsRequired == true)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span>\r\n");

            
            #line 77 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 78 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                       Write(Html.Hidden("lblColumnDisplayName", (col.Key as GeneratorBase.MVC.ModelReflector.Property).DisplayName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                            ");

            
            #line 79 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                       Write(Html.Hidden("lblColumn", (col.Key as GeneratorBase.MVC.ModelReflector.Property).Name));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </td>\r\n                                " +
"        <td>\r\n");

            
            #line 82 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 82 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                             if ((col.Key as GeneratorBase.MVC.ModelReflector.Property).IsRequired == true)
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 84 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                           Write(Html.DropDownList("colList", col.Value as SelectList, null, new { @required = "Required" }));

            
            #line default
            #line hidden
            
            #line 84 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                                                                            
                                            }
                                            else
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 88 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                           Write(Html.DropDownList("colList", col.Value as SelectList));

            
            #line default
            #line hidden
            
            #line 88 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                                      
                                            }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t\t\t");

            
            #line 90 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                             if (ViewBag.AssociatedProperties != null)
                                            {
                                                foreach (var assocCol in ViewBag.AssociatedProperties)
                                                {
                                                    if ((col.Key as GeneratorBase.MVC.ModelReflector.Property).Name == (assocCol.Key as GeneratorBase.MVC.ModelReflector.Association).AssociationProperty)
                                                    {
                                                        
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                   Write(Html.DropDownList("colAssocPropList", assocCol.Value as SelectList));

            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                                                            
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </td>\r\n                                  " +
"  </tr>\r\n");

            
            #line 102 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </thead>\r\n                        </table>\r\n         " +
"           </div>\r\n                </div>\r\n                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Start Import\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 6042), Tuple.Create("\"", 6092)
            
            #line 108 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 6049), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "ApplicationFeedback")
            
            #line default
            #line hidden
, 6049), false)
);

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(">Cancel</a>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral("        <br />");

WriteLiteral("<br />\r\n");

            
            #line 112 "..\..\Views\ApplicationFeedback\Upload.cshtml"
    }
}

            
            #line default
            #line hidden
            
            #line 114 "..\..\Views\ApplicationFeedback\Upload.cshtml"
 if (ViewBag.ConfirmImportData != null)
{
    using (Html.BeginForm("ImportData", "ApplicationFeedback", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" id=\"divImport\"");

WriteLiteral(" style=\"margin: 0px; padding: 0px; position: fixed; right: 0px;\r\n    top: 0px; wi" +
"dth: 100%; height: 100%; background-color: #666666; z-index: 30001;\r\n    opacity" +
": .8; filter: alpha(opacity=70);display:none\"");

WriteLiteral(">\r\n            <p");

WriteLiteral(" style=\"position: absolute; top: 30%; left:30%; color: White;font-size:18px; bord" +
"er:1px solid #ffffff; padding:15px;\"");

WriteLiteral(">\r\n                Data import is in progress, please wait...<span");

WriteLiteral(" class=\"glyphicon glyphicon-time\"");

WriteLiteral(" style=\"font-size:18px;\"");

WriteLiteral("></span>\r\n            </p>\r\n        </div>\r\n");

WriteLiteral("        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n");

            
            #line 127 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                
            
            #line default
            #line hidden
            
            #line 127 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                   var objDataType = new List<string>(); var anyError = false;
            
            #line default
            #line hidden
WriteLiteral("\r\n                <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(" style=\"margin: 0px; padding: 8px;\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 130 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                   Write(Html.Raw(ViewBag.DetailMessage));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n                    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnFilePath\"");

WriteAttribute("value", Tuple.Create(" value=\"", 7347), Tuple.Create("\"", 7372)
            
            #line 132 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 7355), Tuple.Create<System.Object, System.Int32>(ViewBag.FilePath
            
            #line default
            #line hidden
, 7355), false)
);

WriteLiteral(" />\r\n                    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnColumnList\"");

WriteAttribute("value", Tuple.Create(" value=\"", 7439), Tuple.Create("\"", 7466)
            
            #line 133 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 7447), Tuple.Create<System.Object, System.Int32>(ViewBag.ColumnList
            
            #line default
            #line hidden
, 7447), false)
);

WriteLiteral(" />\r\n                    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnSelectedList\"");

WriteAttribute("value", Tuple.Create(" value=\"", 7535), Tuple.Create("\"", 7564)
            
            #line 134 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 7543), Tuple.Create<System.Object, System.Int32>(ViewBag.SelectedList
            
            #line default
            #line hidden
, 7543), false)
);

WriteLiteral(" />\r\n\t\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnSelectedAssocPropList\"");

WriteAttribute("value", Tuple.Create(" value=\"", 7627), Tuple.Create("\"", 7660)
            
            #line 135 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 7635), Tuple.Create<System.Object, System.Int32>(ViewBag.colAssocPropList
            
            #line default
            #line hidden
, 7635), false)
);

WriteLiteral(" />\r\n                    <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"margin:0px; padding:8px; overflow-x:scroll\"");

WriteLiteral(">\r\n");

            
            #line 137 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                         if (ViewBag.DefaultMappingMsg != null)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"alert-danger\"");

WriteLiteral(" style=\"margin-top:10px; margin-bottom:10px; padding:5px;\"");

WriteLiteral(">Error : Please scroll down for details or <a");

WriteLiteral(" class=\"alert-danger\"");

WriteLiteral(" href=\"#ErrMsg\"");

WriteLiteral("> Click Here </a></div>\r\n");

            
            #line 140 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed table-resp" +
"onsive\"");

WriteLiteral(">\r\n                            <thead>\r\n                                <tr>\r\n");

            
            #line 144 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 144 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                     for (int i = 0; i < ((System.Data.DataTable)ViewBag.ConfirmImportData).Columns.Count; i++)
                                    {
                                        var columnName = ((System.Data.DataTable)ViewBag.ConfirmImportData).Columns[i].Caption;
                                        objDataType.Add(GeneratorBase.MVC.ModelReflector.Entities.FirstOrDefault(e => e.Name == "ApplicationFeedback").Properties.FirstOrDefault(p => p.DisplayName == columnName).DataType);

            
            #line default
            #line hidden
WriteLiteral("                                        <th>");

            
            #line 148 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                       Write(columnName);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n");

            
            #line 149 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </tr>\r\n");

            
            #line 151 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 151 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                 for (int i = 0; i < ((System.Data.DataTable)ViewBag.ConfirmImportData).Rows.Count; i++)
                                {
                                    int j = 0;

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n");

            
            #line 155 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                         foreach (var cell in ((System.Data.DataTable)ViewBag.ConfirmImportData).Rows[i].ItemArray)
                                        {
                                            if (string.IsNullOrEmpty(cell.ToString().Trim()))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <td></td>\r\n");

            
            #line 160 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                j++;
                                                continue;
                                            }
                                            string colValue = cell.ToString();
                                            string colClass = string.Empty;
                                            if (objDataType[j].ToLower() == "datetime")
                                            {
                                                try
                                                {
                                                    if (System.Text.RegularExpressions.Regex.IsMatch(colValue, "^[0-9]*$"))
                                                    {
                                                        var us = new System.Globalization.CultureInfo("en-US");
                                                        string text = colValue;
                                                        string format = "yyyyMMdd";
                                                        colValue = (DateTime.ParseExact(text, format, us)).ToString("MM/dd/yyyy");
                                                    }
                                                    else
                                                    {
                                                        colValue = (DateTime.Parse(cell.ToString())).ToString("MM/dd/yyyy");
                                                    }
                                                }
                                                catch
                                                {
                                                    anyError = true;
                                                    colClass = "style=background-color:red;";
                                                }
                                            }
                                            else if (objDataType[j].ToLower() == "double")
                                            {
                                                try
                                                {
                                                    colValue = (Double.Parse(cell.ToString())).ToString("C2");
                                                }
                                                catch
                                                {
                                                    anyError = true;
                                                    colClass = "style=background-color:red;";
                                                }
                                            }
                                            else
                                            {
                                                colValue = cell.ToString();
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            <td ");

            
            #line 203 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                           Write(colClass);

            
            #line default
            #line hidden
WriteLiteral(">");

            
            #line 203 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                     Write(colValue);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n");

            
            #line 204 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                            j++;
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </tr>\r\n");

            
            #line 207 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </thead>\r\n                        </table>\r\n         " +
"           </div>\r\n                </div>\r\n");

            
            #line 212 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                
            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                 if (ViewBag.AssoUnique != null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" class=\"panel-group\"");

WriteLiteral(" id=\"accordion\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                <h4");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">\r\n                                    <a");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#collapseAssociatedList\"");

WriteLiteral(" style=\"text-decoration:none;\"");

WriteLiteral("> Following records also have to be added to create new ApplicationFeedback. Plea" +
"se Review.</a>\r\n                                </h4>\r\n                         " +
"   </div>\r\n                            <div");

WriteLiteral(" id=\"collapseAssociatedList\"");

WriteLiteral(" class=\"panel-collapse collapse in\"");

WriteLiteral(">\r\n");

            
            #line 222 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                 foreach (var AssoUnique in ViewBag.AssoUnique)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" style=\"margin-top:5px;\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(" style=\"margin:0px; padding:8px;\"");

WriteLiteral(">\r\n                                            New ");

            
            #line 226 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                            Write((AssoUnique.Key as GeneratorBase.MVC.ModelReflector.Association).DisplayName);

            
            #line default
            #line hidden
WriteLiteral(" records found. Import these as well ");

            
            #line 226 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                                                                                               Write(Html.CheckBox((AssoUnique.Key as GeneratorBase.MVC.ModelReflector.Association).AssociationProperty, true));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </div>\r\n                               " +
"         <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                                            <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed table-resp" +
"onsive\"");

WriteLiteral(" style=\"margin-bottom:0px !important; \"");

WriteLiteral(">\r\n                                                <thead>\r\n");

            
            #line 231 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                    
            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                     foreach (string item in (AssoUnique.Value as List<String>))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <tr>\r\n                   " +
"                                         <td>\r\n");

WriteLiteral("                                                                ");

            
            #line 235 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                           Write(item);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </td>\r\n            " +
"                                            </tr>\r\n");

            
            #line 238 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                                </thead>\r\n                       " +
"                     </table>\r\n                                        </div>\r\n " +
"                                   </div>\r\n");

            
            #line 243 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n             " +
"       </div>\r\n");

            
            #line 247 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 248 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                 if (ViewBag.Confirm == null)
                {
                    var strDisable = string.Empty;
                    var stcssClass = string.Empty;
                    if (ViewBag.DefaultMappingMsg != null || anyError)
                    {
                        strDisable = "disabled=\"disabled\"";
                        stcssClass = "btn btn-primary btn-sm";
                    }
                    else
                    {
                        stcssClass = "btn btn-primary btn-sm";
                    }
                    if (ViewBag.DefaultMappingMsg != null)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"alert-danger\"");

WriteLiteral(" style=\"margin-top:10px; margin-bottom:10px;\"");

WriteLiteral("> ");

            
            #line 263 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                           Write(Html.Raw(ViewBag.DefaultMappingMsg));

            
            #line default
            #line hidden
WriteLiteral(" </div>\r\n");

            
            #line 264 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                    }
                    if (anyError)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"alert-danger\"");

WriteLiteral(" style=\"margin-top:10px; margin-bottom:10px;\"");

WriteLiteral("> Red color indicates incorrect data in cell. </div>\r\n");

            
            #line 268 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Confirm & Continue Import\"");

WriteLiteral(" ");

            
            #line 269 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                      Write(strDisable);

            
            #line default
            #line hidden
WriteLiteral(" class=\"");

            
            #line 269 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                                         Write(stcssClass);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");

            
            #line 270 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 16619), Tuple.Create("\"", 16669)
            
            #line 271 "..\..\Views\ApplicationFeedback\Upload.cshtml"
, Tuple.Create(Tuple.Create("", 16626), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "ApplicationFeedback")
            
            #line default
            #line hidden
, 16626), false)
);

WriteLiteral(" class=\"btn btn-default btn-sm\"");

WriteLiteral(">Cancel and Return</a>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral("        <br />");

WriteLiteral("<br />\r\n");

WriteLiteral("        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n            $(\"input[type=\'submit\']\").click(function () {\r\n                $(\"" +
"#divImport\").show();\r\n            });\r\n        </script>\r\n");

            
            #line 280 "..\..\Views\ApplicationFeedback\Upload.cshtml"
    }
}

            
            #line default
            #line hidden
            
            #line 282 "..\..\Views\ApplicationFeedback\Upload.cshtml"
 if (ViewBag.ColumnMapping == null && ViewBag.ImportError == null && ViewBag.ConfirmImportData == null)
{
    using (Html.BeginForm("Upload", "ApplicationFeedback", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                        <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Upload File (Valid File Extensions : .xls, .xlsx, .csv)</h3>\r\n");

            
            #line 291 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 291 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                          
							string isDefaultMapped = "checked=\"@checked\"";
							if (!ViewBag.IsDefaultMapping)
							{
								isDefaultMapped = "";
							}
                        
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 298 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                         
            
            #line default
            #line hidden
            
            #line 298 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                          if (ViewBag.IsDefaultMapping)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" name=\"DefaultMapping\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" ");

            
            #line 301 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                        Write(isDefaultMapped);

            
            #line default
            #line hidden
WriteLiteral(" /><span> Use default mapping</span>\r\n                            </div>\r\n");

            
            #line 303 "..\..\Views\ApplicationFeedback\Upload.cshtml"
						}

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(" style=\"padding-right:5px\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 305 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                           Write(Html.DropDownList("ListOfMappings", null, "--Select Mapping--", new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                    </div>\r\n               " +
"     <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'col-sm-12\'");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\'col-sm-5\'");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" type=\"file\"");

WriteLiteral(" id=\"FileUpload\"");

WriteLiteral(" name=\"FileUpload\"");

WriteLiteral(" required");

WriteLiteral(" data-val=\"true\"");

WriteLiteral(" data-val-required=\"please select a file\"");

WriteLiteral(" style=\"height:34px; padding:5px;\"");

WriteLiteral(" onchange=\"uploadOnChange(this);\"");

WriteLiteral(" /><span");

WriteLiteral(" id=\"IEFileName\"");

WriteLiteral(" style=\"display:inline-block; margin-left:5px;\"");

WriteLiteral("></span>\r\n                            </div>\r\n                            <div");

WriteLiteral(" class=\'col-sm-7\'");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"impData\"");

WriteLiteral(" value=\"Upload\"");

WriteLiteral(" title=\"Click to upload file\"");

WriteLiteral(" onclick=\"return CheckFileName();\"");

WriteLiteral(" class=\"btn btn-primary \"");

WriteLiteral(" style=\"text-align:left;\"");

WriteLiteral(" />\r\n                                <a");

WriteLiteral(" class=\"btn btn-default btn-default collapse-data-btn tip-top\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" style=\"display:inline-block\"");

WriteAttribute("href", Tuple.Create(" href=\"", 19155), Tuple.Create("\"", 19204)
            
            #line 315 "..\..\Views\ApplicationFeedback\Upload.cshtml"
                                                                        , Tuple.Create(Tuple.Create("", 19162), Tuple.Create<System.Object, System.Int32>(Url.Action("Index","ApplicationFeedback")
            
            #line default
            #line hidden
, 19162), false)
);

WriteLiteral(">Cancel</a>\r\n                            </div>\r\n                            <scr" +
"ipt");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t function uploadOnChange(fileid) {\r\n\t\t\t\t\t\t\t\t\tif (navigator.userAgent.in" +
"dexOf(\'Trident\') != -1 || navigator.userAgent.indexOf(\'MSIE\') != -1) {\r\n\t\t\t\t\t\t\t\t" +
"\t\tvar filename = fileid.value;\r\n\t\t\t\t\t\t\t\t\t\tvar lastIndex = filename.lastIndexOf(\"" +
"\\\\\");\r\n\t\t\t\t\t\t\t\t\t\tif (lastIndex >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tfilename = filename.substring" +
"(lastIndex + 1);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t$(\"#IEFileName\").html(filename);\r\n\t\t\t\t\t" +
"\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n                                function CheckFileName() {\r\n\t\t" +
"\t\t\t\t\t\t    var fileName = document.getElementById(\"FileUpload\").value;\r\n         " +
"                           if (fileName == \"\") {\r\n                              " +
"          alert(\"Browse to upload a valid File with xls,xlsx or csv extensions\")" +
";\r\n                                        return false;\r\n                      " +
"              }\r\n                                    else if (fileName.split(\".\"" +
")[fileName.split(\'.\').length - 1].toUpperCase() == \"XLS\" || fileName.split(\".\")[" +
"fileName.split(\'.\').length - 1].toUpperCase() == \"XLSX\" || fileName.split(\".\")[f" +
"ileName.split(\'.\').length - 1].toUpperCase() == \"CSV\" || fileName.split(\".\")[fil" +
"eName.split(\'.\').length - 1].toUpperCase() == \"ALL\") {\r\n                        " +
"                return true;\r\n                                    }\r\n           " +
"                         else {\r\n                                        alert(\"" +
"File with \" + fileName.split(\".\")[fileName.split(\'.\').length - 1].toUpperCase() " +
"+ \" is invalid. Upload a validfile with xls,xlsx or csv extensions\");\r\n         " +
"                               return false;\r\n                                  " +
"  }\r\n                                    return true;\r\n                         " +
"       }\r\n                            </script>\r\n                        </div>\r" +
"\n                    </div>\r\n                </div>\r\n            </div>\r\n       " +
" </div>\r\n");

WriteLiteral("        <br />");

WriteLiteral("<br />\r\n");

            
            #line 350 "..\..\Views\ApplicationFeedback\Upload.cshtml"
    }
}

            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
