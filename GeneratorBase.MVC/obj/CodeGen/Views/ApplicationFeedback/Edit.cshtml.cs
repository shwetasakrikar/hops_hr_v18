#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.ApplicationFeedback
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\ApplicationFeedback\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ApplicationFeedback/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.ApplicationFeedback>
    {
        
        #line 7 "..\..\Views\ApplicationFeedback\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (Property == "CommentId")
            return new { @class = "form-control", @readonly = "readonly" };
        if (User.CanEdit("ApplicationFeedback", Property))
        {
            return new { @class = "form-control" };
        }
        return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\ApplicationFeedback\Edit.cshtml"
  
    ViewBag.Title = "Edit Application Feedback";


            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<script>\r\n    $(document).ready(function () {\r\n        try {\r\n            var hos" +
"tingEntityName = \"\";\r\n            if (\'");

            
            #line 23 "..\..\Views\ApplicationFeedback\Edit.cshtml"
            Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\' != null) {\r\n                hostingEntityName = \'");

            
            #line 24 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n                $(\'#\' + hostingEntityName + \'ID\').attr(\"lock\", \"true\");\r\n    " +
"        }\r\n        }\r\n        catch (ex) { }\r\n    });\r\n</script>\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> Application Feedback  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Edit</span>\r\n        </h1>\r\n        <label");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" class=\"text-primary small pull-right\"");

WriteLiteral(" style=\"color:red; vertical-align:middle; font-weight:100;\"");

WriteLiteral("></label>\r\n        <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 38 "..\..\Views\ApplicationFeedback\Edit.cshtml"
       Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </h2>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n<div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Details</a></li>\r\n        <li ");

            
            #line 46 "..\..\Views\ApplicationFeedback\Edit.cshtml"
        Write(!User.CanView("JournalEntry") ? "style=display:none;" : "");

            
            #line default
            #line hidden
WriteLiteral("><a");

WriteLiteral(" href=\"#JournalEntryToApplicationFeedbackRelation\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Application Feedback Journal</a></li>\r\n    </ul>\r\n    <div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n");

            
            #line 50 "..\..\Views\ApplicationFeedback\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 50 "..\..\Views\ApplicationFeedback\Edit.cshtml"
             using (Html.BeginForm("Edit", "ApplicationFeedback", new { UrlReferrer = Convert.ToString(ViewData["ApplicationFeedbackParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                Html.ValidationSummary(true);
                Html.EnableClientValidation();
                
            
            #line default
            #line hidden
            
            #line 54 "..\..\Views\ApplicationFeedback\Edit.cshtml"
           Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 54 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                  
                
            
            #line default
            #line hidden
            
            #line 55 "..\..\Views\ApplicationFeedback\Edit.cshtml"
           Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 55 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                              

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Feedback Details</h3>\r\n                                        </div>\r\n         " +
"                               <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 67 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "Summary"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-12 col-md-12 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label>");

            
            #line 71 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                          Write(Html.LabelFor(model => model.Summary));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n                                                        <div>\r" +
"\n");

WriteLiteral("                                                            ");

            
            #line 73 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextAreaFor(model => model.Summary, new { @required = "required", @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 74 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.Summary));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 78 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.Summary, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 81 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "Description"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-12 col-md-12 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label>");

            
            #line 85 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                          Write(Html.LabelFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div>\r\n");

WriteLiteral("                                                            ");

            
            #line 87 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextAreaFor(model => model.Description, getHtmlAttributes("Description")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 88 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 92 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.Description, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 95 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "AttachImage") && User.CanView("Document"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                        ");

            
            #line 99 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                   Write(Html.TextBoxFor(model => model.AttachImage, new { @class = "hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 100 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.AttachImage));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" style=\"position:relative;\"");

WriteLiteral(">\r\n                                                                <a");

WriteLiteral(" class=\'btn btn-primary btnupload\'");

WriteLiteral(" href=\'javascript:;\'");

WriteLiteral(">\r\n                                                                    Upload Fil" +
"e\r\n                                                                    <input");

WriteLiteral(" id=\"File_AttachImage\"");

WriteLiteral(" type=\"file\"");

WriteLiteral(" style=\'position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-fil" +
"ter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";opacity:0;background-co" +
"lor:transparent;color:transparent;width:105px;\'");

WriteLiteral(" name=\"File_AttachImage\"");

WriteLiteral(" onchange=\'ValidateBeforeUpload(this);\'");

WriteLiteral(">\r\n                                                                </a>\r\n        " +
"                                                        &nbsp;\r\n                " +
"                                                <span");

WriteLiteral(" class=\'label uploadlblFix\'");

WriteLiteral(" id=\"upload-file-infoFile_AttachImage\"");

WriteLiteral("></span>\r\n                                                                <p");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n");

            
            #line 110 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                    
            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                     if (!string.IsNullOrEmpty(Model.AttachImage))
                                                                    {
                                                                        
            
            #line default
            #line hidden
            
            #line 112 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                   Write(Html.ActionLink("Download", "Download", new { filename = Model.AttachImage }));

            
            #line default
            #line hidden
            
            #line 112 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                      
                                                                    }
                                                                    else
                                                                    {
            
            #line default
            #line hidden
WriteLiteral("<label>NA</label>");

            
            #line 115 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                      }

            
            #line default
            #line hidden
WriteLiteral(@"                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
");

            
            #line 121 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AttachImage, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                          }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 124 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "AttachDocument") && User.CanView("Document"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n");

WriteLiteral("                                                        ");

            
            #line 128 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                   Write(Html.TextBoxFor(model => model.AttachDocument, new { @class = "hidden" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 129 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.AttachDocument));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" style=\"position:relative;\"");

WriteLiteral(">\r\n                                                                <a");

WriteLiteral(" class=\'btn btn-primary btnupload\'");

WriteLiteral(" href=\'javascript:;\'");

WriteLiteral(">\r\n                                                                    Upload Fil" +
"e\r\n                                                                    <input");

WriteLiteral(" id=\"File_AttachDocument\"");

WriteLiteral(" type=\"file\"");

WriteLiteral(" style=\'position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-fil" +
"ter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";opacity:0;background-co" +
"lor:transparent;color:transparent;width:105px;\'");

WriteLiteral(" name=\"File_AttachDocument\"");

WriteLiteral(" onchange=\'$(\"#upload-file-infoFile_AttachDocument\").css({ \"font-size\": \"small\" }" +
").html($(this).val());\'");

WriteLiteral(">\r\n                                                                </a>\r\n        " +
"                                                        &nbsp;\r\n                " +
"                                                <span");

WriteLiteral(" class=\'label uploadlblFix\'");

WriteLiteral(" id=\"upload-file-infoFile_AttachDocument\"");

WriteLiteral("></span>\r\n                                                            </div>\r\n   " +
"                                                         <p");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">\r\n");

            
            #line 140 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 140 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (!string.IsNullOrEmpty(Model.AttachDocument))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 142 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.ActionLink("Download", "Download", new { filename = Model.AttachDocument }));

            
            #line default
            #line hidden
            
            #line 142 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                     
                                                                }
                                                                else
                                                                {
            
            #line default
            #line hidden
WriteLiteral("<label>NA</label>");

            
            #line 145 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                  }

            
            #line default
            #line hidden
WriteLiteral("                                                            </p>\r\n               " +
"                                         </div>\r\n                               " +
"                     </div>\r\n                                                </d" +
"iv>\r\n");

            
            #line 150 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 152 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AttachDocument, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 152 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n                                </div>\r\n                            <" +
"/div>\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">About Feedback</h3>\r\n                                        </div>\r\n           " +
"                             <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 165 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 165 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "CommentId"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 169 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.CommentId));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 171 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.CommentId, getHtmlAttributes("CommentId")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 172 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.CommentId));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 176 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 178 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.CommentId, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 178 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 179 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "AssociatedApplicationFeedbackTypeID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAssociatedApplicationFeedbackTypeID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 183 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.AssociatedApplicationFeedbackTypeID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 186 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 186 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanEdit("ApplicationFeedback", "AssociatedApplicationFeedbackTypeID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 188 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("AssociatedApplicationFeedbackTypeID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "ApplicationFeedbackType", @dataurl = Url.Action("GetAllValue", "ApplicationFeedbackType", new { caller = "AssociatedApplicationFeedbackTypeID" }) }));

            
            #line default
            #line hidden
            
            #line 188 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                     
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 192 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.HiddenFor(model => model.AssociatedApplicationFeedbackTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 192 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                        
                                                                    
            
            #line default
            #line hidden
            
            #line 193 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("AssociatedApplicationFeedbackTypeID", null, "-- Select --", new { @class = "chosen-select form-control", @disabled = "disabled", @HostingName = "ApplicationFeedbackType", @dataurl = Url.Action("GetAllValue", "ApplicationFeedbackType", new { caller = "AssociatedApplicationFeedbackTypeID" }) }));

            
            #line default
            #line hidden
            
            #line 193 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                             
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 195 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.AssociatedApplicationFeedbackTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 196 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 196 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanAdd("ApplicationFeedbackType"))
                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                    <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                                        <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 16022), Tuple.Create("\"", 16334)
            
            #line 199 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 16032), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Type','dvPopup','" + Url.Action("CreateQuick", "ApplicationFeedbackType", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 16032), false)
);

WriteLiteral(">\r\n                                                                            <s" +
"pan");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                                       " +
" </a>\r\n                                                                    </div" +
">\r\n");

            
            #line 203 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                            </div>\r\n             " +
"                                           </div>\r\n                             " +
"                       </div>\r\n                                                <" +
"/div>\r\n");

            
            #line 208 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 210 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AssociatedApplicationFeedbackTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 210 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                  }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 211 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "AssociatedApplicationFeedbackStatusID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvAssociatedApplicationFeedbackStatusID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 215 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.AssociatedApplicationFeedbackStatusID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 218 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 218 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanEdit("ApplicationFeedback", "AssociatedApplicationFeedbackStatusID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("AssociatedApplicationFeedbackStatusID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "ApplicationFeedbackStatus", @dataurl = Url.Action("GetAllValue", "ApplicationFeedbackStatus", new { caller = "AssociatedApplicationFeedbackStatusID" }) }));

            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                             
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 224 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.HiddenFor(model => model.AssociatedApplicationFeedbackStatusID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 224 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                          
                                                                    
            
            #line default
            #line hidden
            
            #line 225 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("AssociatedApplicationFeedbackStatusID", null, "-- Select --", new { @class = "chosen-select form-control", @disabled = "disabled", @HostingName = "ApplicationFeedbackStatus", @dataurl = Url.Action("GetAllValue", "ApplicationFeedbackStatus", new { caller = "AssociatedApplicationFeedbackStatusID" }) }));

            
            #line default
            #line hidden
            
            #line 225 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                     
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 227 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.AssociatedApplicationFeedbackStatusID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 228 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 228 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanAdd("ApplicationFeedbackStatus"))
                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                    <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                                        <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 19939), Tuple.Create("\"", 20255)
            
            #line 231 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 19949), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Status','dvPopup','" + Url.Action("CreateQuick", "ApplicationFeedbackStatus", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 19949), false)
);

WriteLiteral(">\r\n                                                                            <s" +
"pan");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                                       " +
" </a>\r\n                                                                    </div" +
">\r\n");

            
            #line 235 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                            </div>\r\n             " +
"                                           </div>\r\n                             " +
"                       </div>\r\n                                                <" +
"/div>\r\n");

            
            #line 240 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 242 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.AssociatedApplicationFeedbackStatusID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 242 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 243 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "ApplicationFeedbackPriorityID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvApplicationFeedbackPriorityID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 247 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ApplicationFeedbackPriorityID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 250 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 250 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanEdit("ApplicationFeedback", "ApplicationFeedbackPriorityID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 252 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackPriorityID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "FeedbackPriority", @dataurl = Url.Action("GetAllValue", "FeedbackPriority", new { caller = "ApplicationFeedbackPriorityID" }) }));

            
            #line default
            #line hidden
            
            #line 252 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                           
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 256 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.HiddenFor(model => model.ApplicationFeedbackPriorityID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 256 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                  
                                                                    
            
            #line default
            #line hidden
            
            #line 257 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackPriorityID", null, "-- Select --", new { @class = "chosen-select form-control", @disabled = "disabled", @HostingName = "FeedbackPriority", @dataurl = Url.Action("GetAllValue", "FeedbackPriority", new { caller = "ApplicationFeedbackPriorityID" }) }));

            
            #line default
            #line hidden
            
            #line 257 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                   
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 259 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.ApplicationFeedbackPriorityID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 260 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanAdd("FeedbackPriority"))
                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                    <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                                        <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 23737), Tuple.Create("\"", 24046)
            
            #line 263 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 23747), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Priority','dvPopup','" + Url.Action("CreateQuick", "FeedbackPriority", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 23747), false)
);

WriteLiteral(">\r\n                                                                            <s" +
"pan");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                                       " +
" </a>\r\n                                                                    </div" +
">\r\n");

            
            #line 267 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                            </div>\r\n             " +
"                                           </div>\r\n                             " +
"                       </div>\r\n                                                <" +
"/div>\r\n");

            
            #line 272 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 274 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ApplicationFeedbackPriorityID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 274 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 275 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "ApplicationFeedbackSeverityID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvApplicationFeedbackSeverityID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 279 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ApplicationFeedbackSeverityID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 282 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 282 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanEdit("ApplicationFeedback", "ApplicationFeedbackSeverityID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 284 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackSeverityID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "FeedbackSeverity", @dataurl = Url.Action("GetAllValue", "FeedbackSeverity", new { caller = "ApplicationFeedbackSeverityID" }) }));

            
            #line default
            #line hidden
            
            #line 284 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                           
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 288 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.HiddenFor(model => model.ApplicationFeedbackSeverityID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 288 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                  
                                                                    
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackSeverityID", null, "-- Select --", new { @class = "chosen-select form-control", @disabled = "disabled", @HostingName = "FeedbackSeverity", @dataurl = Url.Action("GetAllValue", "FeedbackSeverity", new { caller = "ApplicationFeedbackSeverityID" }) }));

            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                   
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 291 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.ApplicationFeedbackSeverityID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 292 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 292 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanAdd("FeedbackSeverity"))
                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                    <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                                        <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 27520), Tuple.Create("\"", 27829)
            
            #line 295 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 27530), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Severity','dvPopup','" + Url.Action("CreateQuick", "FeedbackSeverity", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 27530), false)
);

WriteLiteral(">\r\n                                                                            <s" +
"pan");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                                       " +
" </a>\r\n                                                                    </div" +
">\r\n");

            
            #line 299 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                            </div>\r\n             " +
"                                           </div>\r\n                             " +
"                       </div>\r\n                                                <" +
"/div>\r\n");

            
            #line 304 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 306 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ApplicationFeedbackSeverityID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 306 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 307 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "ApplicationFeedbackResourceID"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvApplicationFeedbackResourceID\"");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 311 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.ApplicationFeedbackResourceID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n");

            
            #line 314 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 314 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanEdit("ApplicationFeedback", "ApplicationFeedbackResourceID"))
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 316 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackResourceID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "FeedbackResource", @dataurl = Url.Action("GetAllValue", "FeedbackResource", new { caller = "ApplicationFeedbackResourceID" }) }));

            
            #line default
            #line hidden
            
            #line 316 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                           
                                                                }
                                                                else
                                                                {
                                                                    
            
            #line default
            #line hidden
            
            #line 320 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.HiddenFor(model => model.ApplicationFeedbackResourceID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 320 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                  
                                                                    
            
            #line default
            #line hidden
            
            #line 321 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                               Write(Html.DropDownList("ApplicationFeedbackResourceID", null, "-- Select --", new { @class = "chosen-select form-control", @disabled = "disabled", @HostingName = "FeedbackResource", @dataurl = Url.Action("GetAllValue", "FeedbackResource", new { caller = "ApplicationFeedbackResourceID" }) }));

            
            #line default
            #line hidden
            
            #line 321 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                                                                   
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                                ");

            
            #line 323 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.ValidationMessageFor(model => model.ApplicationFeedbackResourceID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 324 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                
            
            #line default
            #line hidden
            
            #line 324 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                 if (User.CanAdd("FeedbackResource"))
                                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                                    <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                                        <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 31303), Tuple.Create("\"", 31615)
            
            #line 327 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                             , Tuple.Create(Tuple.Create("", 31313), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Assigned To','dvPopup','" + Url.Action("CreateQuick", "FeedbackResource", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 31313), false)
);

WriteLiteral(">\r\n                                                                            <s" +
"pan");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                                       " +
" </a>\r\n                                                                    </div" +
">\r\n");

            
            #line 331 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                            </div>\r\n             " +
"                                           </div>\r\n                             " +
"                       </div>\r\n                                                <" +
"/div>\r\n");

            
            #line 336 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 338 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.ApplicationFeedbackResourceID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 338 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 339 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "ReportedBy"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 342 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                          Write(Html.LabelFor(model => model.ReportedBy, new { @class = "lblFix" }));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                                    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" id=\"datetimepickerReportedBy\"");

WriteLiteral(" style=\"padding-left:0px; padding-right:5px\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                ");

            
            #line 346 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.ReportedBy, "{0:MM/dd/yyyy hh:mm tt}", new { @class = "form-control", @readonly = "readonly", @format = "MM/DD/YYYY hh:mm" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </div>\r\n           " +
"                                                 <div");

WriteLiteral(" class=\"col-sm-6 col-md-6 col-xs-12\"");

WriteLiteral(" style=\"padding-left:0px; padding-right:0px\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                                ");

            
            #line 349 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                           Write(Html.TextBoxFor(model => model.ReportedByUser, new { @class = "form-control", @readonly = "readonly" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                            </div>\r\n           " +
"                                             </div>\r\n                           " +
"                         </div>\r\n                                               " +
" </div>\r\n");

WriteLiteral(@"                                                <script>
                                                    $(function () {
                                                        $(""#ReportedBy"").datetimepicker({});
                                                    });
                                                </script>
");

            
            #line 359 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n                                </div>\r\n                            <" +
"/div>\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n                                            <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">Page Info</h3>\r\n                                        </div>\r\n                " +
"                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 372 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 372 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "EntityName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 376 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 378 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.EntityName, getHtmlAttributes("EntityName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 379 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 383 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 385 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.EntityName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 385 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 386 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "PropertyName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 390 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.PropertyName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 392 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.PropertyName, getHtmlAttributes("PropertyName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 393 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.PropertyName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 397 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 399 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.PropertyName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 399 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 400 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "PageName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 404 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.PageName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 406 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.PageName, getHtmlAttributes("PageName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 407 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.PageName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 411 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 413 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.PageName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 413 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                       }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 414 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "PageUrlTitle"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 418 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.PageUrlTitle));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 420 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.PageUrlTitle, getHtmlAttributes("PageUrlTitle")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 421 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.PageUrlTitle));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 425 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 427 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.PageUrlTitle, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 427 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 428 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "UIControlName"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 432 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                              Write(Html.LabelFor(model => model.UIControlName));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                            ");

            
            #line 434 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.UIControlName, getHtmlAttributes("UIControlName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 435 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.UIControlName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 439 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 441 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.UIControlName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 441 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 442 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                             if (User.CanView("ApplicationFeedback", "PageUrl"))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" class=\'col-sm-12 col-md-12 col-xs-12\'");

WriteLiteral(">\r\n                                                    <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                                        <label>");

            
            #line 446 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                          Write(Html.LabelFor(model => model.PageUrl));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                                        <div>\r\n");

WriteLiteral("                                                            ");

            
            #line 448 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.TextBoxFor(model => model.PageUrl, getHtmlAttributes("PageUrl")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                            ");

            
            #line 449 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                       Write(Html.ValidationMessageFor(model => model.PageUrl));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                        </div>\r\n               " +
"                                     </div>\r\n                                   " +
"             </div>\r\n");

            
            #line 453 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                            }
                                            else
                                            { 
            
            #line default
            #line hidden
            
            #line 455 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                         Write(Html.HiddenFor(model => model.PageUrl, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 455 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("                                        </div>\r\n                                 " +
"   </div>\r\n                                </div>\r\n                            <" +
"/div>\r\n                        </div>\r\n                    </div>\r\n             " +
"   </div>\r\n");

            
            #line 463 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                
            
            #line default
            #line hidden
            
            #line 463 "..\..\Views\ApplicationFeedback\Edit.cshtml"
           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 463 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                        ;
                
            
            #line default
            #line hidden
            
            #line 464 "..\..\Views\ApplicationFeedback\Edit.cshtml"
           Write(Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["ApplicationFeedbackParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" }));

            
            #line default
            #line hidden
            
            #line 464 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                                                                                                                                                                              

            
            #line default
            #line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

WriteLiteral("                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Continue\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

WriteLiteral("                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 468 "..\..\Views\ApplicationFeedback\Edit.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"JournalEntryToApplicationFeedbackRelation\"");

WriteLiteral(">\r\n");

            
            #line 471 "..\..\Views\ApplicationFeedback\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 471 "..\..\Views\ApplicationFeedback\Edit.cshtml"
             if (User.CanView("JournalEntry"))
            {
                Html.RenderAction("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "ApplicationFeedback", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry" });
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n    </div> <!-- /tab-content --><br />\r\n    <br />\r\n</div>\r\n<scri" +
"pt>\r\n    $(function () {\r\n        var userAgent = navigator.userAgent.toLowerCas" +
"e();\r\n        // Figure out what browser is being used\r\n        var browser = {\r" +
"\n            version: (userAgent.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/) || [])" +
"[1],\r\n            safari: /webkit/.test(userAgent),\r\n            opera: /opera/." +
"test(userAgent),\r\n            msie: /msie/.test(userAgent) && !/opera/.test(user" +
"Agent),\r\n            mozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)" +
"/.test(userAgent)\r\n        };\r\n        if (!browser.msie) {\r\n            $(\'form" +
"\').areYouSure();\r\n        }\r\n        else if (browser.version > 8.0) {\r\n        " +
"    $(\'form\').areYouSure();\r\n        }\r\n    });\r\n</script>\r\n<script>\r\n    $(\"inp" +
"ut[type=\'submit\']\").click(function () {\r\n        var $this = $(this);\r\n        $" +
"(\'input:hidden[name=\"hdncommand\"]\').val($this.val());\r\n    });\r\n    function Val" +
"idateBeforeUpload(obj) {\r\n        var validExtensions = [\'jpg\', \'gif\', \'png\', \'j" +
"peg\']; //array of valid extensions\r\n        var fileName = obj.value;\r\n        v" +
"ar fileNameExt = fileName.substr(fileName.lastIndexOf(\'.\') + 1);\r\n        if ($." +
"inArray(fileNameExt, validExtensions) == -1) {\r\n            $(\"#upload-file-info" +
"File_AttachImage\").css({ \'color\': \"Red\", \"font-size\": \"small\" }).html(\"Invalid f" +
"ile type \" + \"\'.\" + fileNameExt + \"\'\");\r\n            return false;\r\n        } el" +
"se {\r\n            $(\"#upload-file-infoFile_AttachImage\").css({ \'color\': \"#428bca" +
"\", \"font-size\": \"small\" }).html(fileName);\r\n            return true;\r\n        }\r" +
"\n    }\r\n</script>\r\n");

            
            #line 516 "..\..\Views\ApplicationFeedback\Edit.cshtml"
  
    var busineesrule = User.businessrules.Where(p => p.EntityName == "ApplicationFeedback").ToList();
    if ((busineesrule != null && busineesrule.Count > 0))
    {

            
            #line default
            #line hidden
WriteLiteral("        <script>\r\n            $(document).ready(function () {\r\n                $." +
"ajax({\r\n                    async: false,\r\n                    type: \"GET\",\r\n   " +
"                 url: \"");

            
            #line 525 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                     Write(Url.Action("GetLockBusinessRules", "ApplicationFeedback"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                    data: $(""form"").serialize(),
                    success: function (data) {
                        if (data.length > 0) {
                            $(':input:not([readonly])', 'form').attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
                            document.getElementById('ErrMsg').innerHTML = data + "" Rules applied"";
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
                $.ajax({
                    async: false,
                    type: ""GET"",
                    url: """);

            
            #line 539 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                     Write(Url.Action("GetReadOnlyProperties", "ApplicationFeedback"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                    data: $(""form"").serialize(),
                    success: function (data) {
                        for (var key in data) {
                            $('#' + key).attr('disabled', 'disabled').attr('readonly', 'readonly').trigger(""chosen:updated"");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            });
        </script>
");

WriteLiteral("        <script>\r\n            $(\"form\").submit(function () {\r\n                var" +
" flag = true;\r\n                $.ajax({\r\n                    async: false,\r\n    " +
"                type: \"GET\",\r\n                    url: \"");

            
            #line 557 "..\..\Views\ApplicationFeedback\Edit.cshtml"
                     Write(Url.Action("GetMandatoryProperties", "ApplicationFeedback"));

            
            #line default
            #line hidden
WriteLiteral(@""",
                    data: $(this).serialize(),
                    success: function (data) {
                        document.getElementById('ErrMsg').innerHTML = """";
                        $('[businessrule=""mandatory""]').each(function () {
                            $(this).removeAttr('required');
                        });
                        for (var key in data) {
                            if ($.trim($('#' + key).val()).length == 0) {
                                $('#' + key).attr('required', 'required');
                                $('#' + key).attr('businessrule', 'mandatory');
                                flag = false;
                                document.getElementById('ErrMsg').innerHTML += data[key] + "" is Mandatory.<br/>"";
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
                if (flag)
                    $(""form"").find(':input').removeAttr('disabled');
                return flag;
            });
        </script>
");

            
            #line 581 "..\..\Views\ApplicationFeedback\Edit.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
