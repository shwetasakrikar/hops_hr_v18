#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.T_Licenses
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\T_Licenses\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/T_Licenses/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.T_Licenses>
    {
        
        #line 10 "..\..\Views\T_Licenses\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("T_Licenses", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\T_Licenses\Edit.cshtml"
  
    ViewBag.Title = "Edit Licenses";
	var EditPermission = User.CanEditItem("T_Licenses", Model, User);
	var DeletePermission = User.CanDeleteItem("T_Licenses", Model, User);
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Licenses");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "Licenses";

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<script>\r\n    $(document).ready(function () {\r\n        try {\r\n            var hos" +
"tingEntityName = \"\";\r\n             if (\'");

            
            #line 23 "..\..\Views\T_Licenses\Edit.cshtml"
             Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral("\'.length > 0) {\r\n                hostingEntityName = \'");

            
            #line 24 "..\..\Views\T_Licenses\Edit.cshtml"
                                Write(Convert.ToString(ViewData["AssociatedType"]));

            
            #line default
            #line hidden
WriteLiteral(@"';
				$('#' + hostingEntityName + 'ID').attr(""lock"",""true"");
				// $('#' + hostingEntityName + 'ID').trigger(""change"");
				  $(""input[type='radio'][name='"" + hostingEntityName + ""ID']"").each(function () {
                    if (!this.checked)
                        this.closest(""li"").style.display = ""none"";
                });
            }
			if ($.cookie('");

            
            #line 32 "..\..\Views\T_Licenses\Edit.cshtml"
                     Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\T_Licenses\Edit.cshtml"
                                                Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\' + \'TabCookie\') != null) {\r\n\t\t\t\t$(\'a[href=\"#\' + $.cookie(\'");

            
            #line 33 "..\..\Views\T_Licenses\Edit.cshtml"
                                     Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\' + \'TabCookie\') + \'\"]\').click();\r\n\t\t\t}\r\n\t\t\t \r\n        }\r\n        catch (ex) { }\r" +
"\n    });\r\n</script>\r\n");

            
            #line 40 "..\..\Views\T_Licenses\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_LicensesIsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 43 "..\..\Views\T_Licenses\Edit.cshtml"
   Write(Html.Raw(ViewBag.T_LicensesIsHiddenRule));

            
            #line default
            #line hidden
            
            #line 43 "..\..\Views\T_Licenses\Edit.cshtml"
                                                 ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 46 "..\..\Views\T_Licenses\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_LicensesIsGroupsHiddenRule))
    {
        
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\T_Licenses\Edit.cshtml"
   Write(Html.Raw(ViewBag.T_LicensesIsGroupsHiddenRule));

            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\T_Licenses\Edit.cshtml"
                                                       ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 53 "..\..\Views\T_Licenses\Edit.cshtml"
  
    if (!string.IsNullOrEmpty(ViewBag.T_LicensesIsSetValueUIRule))
    {
        
            
            #line default
            #line hidden
            
            #line 56 "..\..\Views\T_Licenses\Edit.cshtml"
   Write(Html.Raw(ViewBag.T_LicensesIsSetValueUIRule));

            
            #line default
            #line hidden
            
            #line 56 "..\..\Views\T_Licenses\Edit.cshtml"
                                                     ;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(" >\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> ");

            
            #line 62 "..\..\Views\T_Licenses\Edit.cshtml"
                                                             Write(EntityDisplayName);

            
            #line default
            #line hidden
WriteLiteral("  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Edit</span>\r\n\r\n\t\t\t   <div");

WriteLiteral(" class=\"btn-group pull-right\"");

WriteLiteral(" style=\"margin-top:3px;\"");

WriteLiteral(">\r\n\t\t\t  \r\n\r\n\r\n            <a");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" class=\"btn btn-xs dropdown-toggle\"");

WriteLiteral(" alt=\"Action\"");

WriteLiteral(" title=\"Action\"");

WriteLiteral(">\r\n                Action\r\n                <span");

WriteLiteral(" class=\"caret\"");

WriteLiteral(" style=\"margin-bottom:2px\"");

WriteLiteral(">    </span>\r\n            </a>\r\n\t\t\t<ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n\t\t\t\r\n\t\t\t\t<li>\r\n");

            
            #line 75 "..\..\Views\T_Licenses\Edit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\T_Licenses\Edit.cshtml"
                     if (EditPermission)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2733), Tuple.Create("\"", 3011)
            
            #line 77 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 2740), Tuple.Create<System.Object, System.Int32>(Url.Action("Edit","T_Licenses", new { id = Model.Id,  UrlReferrer = Request.UrlReferrer, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)
            
            #line default
            #line hidden
, 2740), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-edit\"");

WriteLiteral("></i>  Edit</a>\r\n");

            
            #line 78 "..\..\Views\T_Licenses\Edit.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </li>             \r\n\t\t\t\t<li>\r\n");

            
            #line 81 "..\..\Views\T_Licenses\Edit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 81 "..\..\Views\T_Licenses\Edit.cshtml"
                     if (EditPermission)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3225), Tuple.Create("\"", 3501)
            
            #line 83 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3232), Tuple.Create<System.Object, System.Int32>(Url.Action("EditWizard","T_Licenses", new { id = Model.Id,  UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)
            
            #line default
            #line hidden
, 3232), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-share\"");

WriteLiteral("></i>  Wizard</a>\r\n");

            
            #line 84 "..\..\Views\T_Licenses\Edit.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </li>\r\n\t\t\t\t<li>\r\n");

            
            #line 87 "..\..\Views\T_Licenses\Edit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 87 "..\..\Views\T_Licenses\Edit.cshtml"
                     if (EditPermission && User.CanDelete("T_Licenses"))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3737), Tuple.Create("\"", 4017)
            
            #line 89 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 3744), Tuple.Create<System.Object, System.Int32>(Url.Action("Delete", "T_Licenses", new {UrlReferrer = Request.UrlReferrer, id = Model.Id, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)
            
            #line default
            #line hidden
, 3744), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral("></i>  Delete</a>\r\n");

            
            #line 90 "..\..\Views\T_Licenses\Edit.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </li>\r\n\t<li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n\t<li");

WriteLiteral(" class=\"dropdown-submenu pull-left\"");

WriteLiteral(" id=\"AddAssociationdropmenuT_Licenses\"");

WriteLiteral(">\r\n");

            
            #line 94 "..\..\Views\T_Licenses\Edit.cshtml"
	 
            
            #line default
            #line hidden
            
            #line 94 "..\..\Views\T_Licenses\Edit.cshtml"
        var dropmenu = false; 
            
            #line default
            #line hidden
WriteLiteral("\r\n\t<a");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" style=\"margin-bottom:10px;\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fam-anchor small\"");

WriteLiteral("></i> Add</a>\r\n    <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n");

            
            #line 97 "..\..\Views\T_Licenses\Edit.cshtml"
				
            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\T_Licenses\Edit.cshtml"
                 if (User.CanAdd("T_Comment"))
				{ dropmenu = true;

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a");

WriteAttribute("onclick", Tuple.Create(" onclick=", 4501), Tuple.Create("", 4776)
            
            #line 100 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 4510), Tuple.Create<System.Object, System.Int32>(Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Comment", 
						new { UrlReferrer = Request.Url,
								AssociatedType ="T_LicensesComments", 
							HostingEntityName = "T_Licenses",
							HostingEntityID = @Convert.ToString(Model.Id) }, null) + "');")
            
            #line default
            #line hidden
, 4510), false)
);

WriteLiteral(">\r\n\t\t\t\t\t\t\t<i");

WriteLiteral(" class=\"glyphicon glyphicon-plus\"");

WriteLiteral("></i>  Comment\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n");

            
            #line 108 "..\..\Views\T_Licenses\Edit.cshtml"
				}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t</ul>\r\n</li>\r\n");

            
            #line 111 "..\..\Views\T_Licenses\Edit.cshtml"
 if(!dropmenu)
{

            
            #line default
            #line hidden
WriteLiteral("    <script>\r\n        $(\"#AddAssociationdropmenuT_Licenses\").hide();\r\n    </scrip" +
"t>\r\n");

            
            #line 116 "..\..\Views\T_Licenses\Edit.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral(" <li");

WriteLiteral(" class=\"divider\"");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral("></li>\r\n <li");

WriteLiteral(" class=\"dropdown-submenu pull-left\"");

WriteLiteral(">\r\n\t<a");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" style=\"margin-bottom:10px;\"");

WriteLiteral(">Find Matching</a>\r\n    <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5207), Tuple.Create("\"", 5307)
            
            #line 122 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5214), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "FileDocument", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5214), false)
);

WriteLiteral(">Document</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5340), Tuple.Create("\"", 5443)
            
            #line 125 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5347), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_ServiceRecord", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5347), false)
);

WriteLiteral(">Service Record</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5482), Tuple.Create("\"", 5579)
            
            #line 128 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5489), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_Comment", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5489), false)
);

WriteLiteral(">Comment</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5611), Tuple.Create("\"", 5716)
            
            #line 131 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5618), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_DrugAlcoholTest", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5618), false)
);

WriteLiteral(">Drug & Alcohol Test</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5760), Tuple.Create("\"", 5855)
            
            #line 134 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5767), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_UnitX", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5767), false)
);

WriteLiteral(">UnitX</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 5885), Tuple.Create("\"", 5988)
            
            #line 137 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 5892), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_JobAssignment", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 5892), false)
);

WriteLiteral(">Job Assignment</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6027), Tuple.Create("\"", 6129)
            
            #line 140 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6034), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_LeaveProfile", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6034), false)
);

WriteLiteral(">Leave</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6159), Tuple.Create("\"", 6263)
            
            #line 143 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6166), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_EmployeeInjury", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6166), false)
);

WriteLiteral(">Employee Injury</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6303), Tuple.Create("\"", 6408)
            
            #line 146 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6310), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_BackgroundCheck", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6310), false)
);

WriteLiteral(">Background Check</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6449), Tuple.Create("\"", 6548)
            
            #line 149 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6456), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_Education", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6456), false)
);

WriteLiteral(">Education</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6582), Tuple.Create("\"", 6685)
            
            #line 152 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6589), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_Accommodation", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6589), false)
);

WriteLiteral(">Accommodation</a>\r\n</li>\r\n<li>\r\n\t\t<a");

WriteAttribute("href", Tuple.Create(" href=\"", 6723), Tuple.Create("\"", 6823)
            
            #line 155 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 6730), Tuple.Create<System.Object, System.Int32>(Url.Action("FindFSearch", "T_PayDetails", new {sourceEntity="T_Licenses",id=Model.Id}, null)
            
            #line default
            #line hidden
, 6730), false)
);

WriteLiteral(">Pay Details </a>\r\n</li>\r\n</ul>\r\n</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t  \r\n  <div");

WriteLiteral(" class=\"btn-group pull-right\"");

WriteLiteral(" style=\"margin-top:3px; margin-right:3px\"");

WriteLiteral(">\r\n\t  <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"btn btn-xs closeall\"");

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-up\"");

WriteLiteral("></i> Collapse All</a> <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"btn btn-xs openall\"");

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></i> Expand All</a>\r\n</div>\r\n\r\n        </h1>\r\n\r\n     <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(" style=\"padding:0px 5px 15px 0px\"");

WriteLiteral(">\r\n\t  <span");

WriteLiteral(" id=\"HostingEntityDisplayValue\"");

WriteLiteral(" class=\"EntityDisplayName\"");

WriteAttribute("title", Tuple.Create(" title=\"", 7336), Tuple.Create("\"", 7389)
            
            #line 169 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 7344), Tuple.Create<System.Object, System.Int32>(Html.DisplayFor(model => model.DisplayValue)
            
            #line default
            #line hidden
, 7344), false)
);

WriteLiteral(">");

            
            #line 169 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                      Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 170 "..\..\Views\T_Licenses\Edit.cshtml"
			
            
            #line default
            #line hidden
            
            #line 170 "..\..\Views\T_Licenses\Edit.cshtml"
             if (EditPermission)
			{	

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(" style=\"margin-top:-3px\"");

WriteLiteral(">\r\n\t\t\t\t\t<button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"nextEdit\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 7599), Tuple.Create("\"", 7669)
            
            #line 173 "..\..\Views\T_Licenses\Edit.cshtml"
             , Tuple.Create(Tuple.Create("", 7609), Tuple.Create<System.Object, System.Int32>(Html.Raw("nextFunEdit('T_Licenses',event,'hdnNextPrevId')")
            
            #line default
            #line hidden
, 7609), false)
);

WriteLiteral(" alt=\"Next\"");

WriteLiteral(" title=\"Next\"");

WriteLiteral(">Next >></button>\r\n");

WriteLiteral("\t\t\t\t\t");

            
            #line 174 "..\..\Views\T_Licenses\Edit.cshtml"
               Write(Html.DropDownList("EntityT_LicensesDisplayValueEdit", null, null, new { @onchange = "FillDisplayValueEditPage('T_Licenses','frmT_Licenses','" + Model.Id + "',event)", @class = "pull-right", @Style = "height: 22px;width: 170px; font-size:12px; color:#333;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t<button");

WriteLiteral(" class=\"btn btn-default btn-xs pull-right\"");

WriteLiteral(" id=\"prevEdit\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 8047), Tuple.Create("\"", 8117)
            
            #line 175 "..\..\Views\T_Licenses\Edit.cshtml"
             , Tuple.Create(Tuple.Create("", 8057), Tuple.Create<System.Object, System.Int32>(Html.Raw("prevFunEdit('T_Licenses',event,'hdnNextPrevId')")
            
            #line default
            #line hidden
, 8057), false)
);

WriteLiteral(" alt=\"Prev\"");

WriteLiteral(" title=\"Prev\"");

WriteLiteral("><< Prev</button>\r\n\t\t\t\t</div>\r\n");

            
            #line 177 "..\..\Views\T_Licenses\Edit.cshtml"
			}

            
            #line default
            #line hidden
WriteLiteral("\t </h2>\r\n\t\t\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"ErrMsg\"");

WriteLiteral(" />\r\n<div");

WriteLiteral(" id=\"errorContainerEdit\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"errorsMsgEdit\"");

WriteLiteral("></div>\r\n            <div");

WriteLiteral(" id=\"errorsEdit\"");

WriteLiteral("></div>\r\n        </div>\r\n\r\n<div");

WriteLiteral(" id=\"divDisplayBRmsgBeforeSaveProp\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRmsgMandatory\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayLockRecord\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayBRReadOnly\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n<div");

WriteLiteral(" id=\"divDisplayCodeFragment\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n</div>\r\n <div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n\t <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 8867), Tuple.Create("\"", 8932)
, Tuple.Create(Tuple.Create("", 8877), Tuple.Create("ClearTabCookie(\'", 8877), true)
            
            #line 201 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 8893), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 8893), false)
            
            #line 201 "..\..\Views\T_Licenses\Edit.cshtml"
               , Tuple.Create(Tuple.Create("", 8920), Tuple.Create<System.Object, System.Int32>(Model.Id
            
            #line default
            #line hidden
, 8920), false)
, Tuple.Create(Tuple.Create("", 8929), Tuple.Create("\');", 8929), true)
);

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(" alt=\"Details\"");

WriteLiteral(" title=\"Details\"");

WriteLiteral(">Details</a></li>\r\n\t\t <li ");

            
            #line 202 "..\..\Views\T_Licenses\Edit.cshtml"
         Write(!User.CanView("T_Comment") ?"style=display:none;":"");

            
            #line default
            #line hidden
WriteLiteral(">\r\n\t\t\t<a");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 9070), Tuple.Create("\"", 9348)
, Tuple.Create(Tuple.Create("", 9080), Tuple.Create("LoadTab(\'T_LicensesComments\',\'", 9080), true)
            
            #line 203 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 9110), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 9110), false)
            
            #line 203 "..\..\Views\T_Licenses\Edit.cshtml"
 , Tuple.Create(Tuple.Create("", 9137), Tuple.Create<System.Object, System.Int32>(Model.Id
            
            #line default
            #line hidden
, 9137), false)
, Tuple.Create(Tuple.Create("", 9146), Tuple.Create("\',\'", 9146), true)
            
            #line 203 "..\..\Views\T_Licenses\Edit.cshtml"
             , Tuple.Create(Tuple.Create("", 9149), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "T_Comment", new {RenderPartial=true, HostingEntity ="T_Licenses", HostingEntityID = @Model.Id, AssociatedType = "T_LicensesComments",TabToken = DateTime.Now.Ticks,}))
            
            #line default
            #line hidden
, 9149), false)
, Tuple.Create(Tuple.Create("", 9346), Tuple.Create("\')", 9346), true)
);

WriteLiteral(" href=\"#T_LicensesComments\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(" alt=\"Comment\"");

WriteLiteral(" title=\"Comment\"");

WriteLiteral(">Comment\r\n\t\t <span");

WriteLiteral(" class=\"badge bg-blue\"");

WriteLiteral("><div");

WriteLiteral(" id=\"dvcnt_T_LicensesComments\"");

WriteLiteral(">");

            
            #line 204 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                   Write(ViewBag.T_LicensesCommentsCount);

            
            #line default
            #line hidden
WriteLiteral("</div></span>\r\n\t\t </a></li>\r\n\t\t <li ");

            
            #line 206 "..\..\Views\T_Licenses\Edit.cshtml"
         Write(!User.CanView("JournalEntry")?"style=display:none;":"");

            
            #line default
            #line hidden
WriteLiteral("><a");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 9628), Tuple.Create("\"", 9912)
, Tuple.Create(Tuple.Create("", 9638), Tuple.Create("LoadTab(\'JournalEntryToT_LicensesRelation\',\'", 9638), true)
            
            #line 206 "..\..\Views\T_Licenses\Edit.cshtml"
                                               , Tuple.Create(Tuple.Create("", 9682), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 9682), false)
            
            #line 206 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                          , Tuple.Create(Tuple.Create("", 9709), Tuple.Create<System.Object, System.Int32>(Model.Id
            
            #line default
            #line hidden
, 9709), false)
, Tuple.Create(Tuple.Create("", 9718), Tuple.Create("\',\'", 9718), true)
            
            #line 206 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                      , Tuple.Create(Tuple.Create("", 9721), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "T_Licenses", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry", TabToken = DateTime.Now.Ticks })
            
            #line default
            #line hidden
, 9721), false)
, Tuple.Create(Tuple.Create("", 9910), Tuple.Create("\')", 9910), true)
);

WriteLiteral(" href=\"#JournalEntryToT_LicensesRelation\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(" alt=\"Licenses Journal\"");

WriteLiteral(" title=\"Licenses Journal\"");

WriteLiteral(">\r\n\t\t Licenses Journal\r\n\t\t </a></li>\r\n\r\n    </ul>\r\n\t\t<div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n");

            
            #line 213 "..\..\Views\T_Licenses\Edit.cshtml"
 using (Html.BeginForm("Edit","T_Licenses",new {UrlReferrer =Convert.ToString(ViewData["T_LicensesParentUrl"])}, FormMethod.Post, new { enctype = "multipart/form-data",@id="frmT_Licenses" }))
{
     Html.ValidationSummary(true);
                Html.EnableClientValidation();
    
            
            #line default
            #line hidden
            
            #line 217 "..\..\Views\T_Licenses\Edit.cshtml"
Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 217 "..\..\Views\T_Licenses\Edit.cshtml"
                                      
	
            
            #line default
            #line hidden
            
            #line 218 "..\..\Views\T_Licenses\Edit.cshtml"
Write(Html.HiddenFor(model => model.ConcurrencyKey));

            
            #line default
            #line hidden
            
            #line 218 "..\..\Views\T_Licenses\Edit.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n\t\t\t\t\t\t<div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48885\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" alt=\"Employee Information\"");

WriteLiteral(" title=\"Employee Information\"");

WriteLiteral(">Employee Information</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 232 "..\..\Views\T_Licenses\Edit.cshtml"
				
            
            #line default
            #line hidden
            
            #line 232 "..\..\Views\T_Licenses\Edit.cshtml"
                 if(User.CanView("T_Licenses","T_LicenseRecordsID"))
				{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_LicenseRecordsID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 236 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                   Write(Html.LabelFor(model => model.T_LicenseRecordsID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 239 "..\..\Views\T_Licenses\Edit.cshtml"
									
            
            #line default
            #line hidden
            
            #line 239 "..\..\Views\T_Licenses\Edit.cshtml"
                                     if (User.CanEdit("T_Licenses", "T_LicenseRecordsID"))
		{
			
            
            #line default
            #line hidden
            
            #line 241 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.DropDownList("T_LicenseRecordsID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_LicenseRecordsID" }) }));

            
            #line default
            #line hidden
            
            #line 241 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                                                                                                                                                                             
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 245 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.HiddenFor(model => model.T_LicenseRecordsID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 245 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                               
			
            
            #line default
            #line hidden
            
            #line 246 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.DropDownList("T_LicenseRecordsID", null, "-- Select --", new {  @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Employee", @dataurl = Url.Action("GetAllValue", "T_Employee",new { caller = "T_LicenseRecordsID" }) }));

            
            #line default
            #line hidden
            
            #line 246 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                                                                                                                                                                                                  
		}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 248 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_LicenseRecordsID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 249 "..\..\Views\T_Licenses\Edit.cshtml"
									
            
            #line default
            #line hidden
            
            #line 249 "..\..\Views\T_Licenses\Edit.cshtml"
                                     if (User.CanAdd("T_Employee"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t<a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" id=\"addT_Employee\"");

WriteLiteral("  data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 12756), Tuple.Create("\"", 13059)
            
            #line 252 "..\..\Views\T_Licenses\Edit.cshtml"
                                                 , Tuple.Create(Tuple.Create("", 12766), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Employee','dvPopup','" + Url.Action("CreateQuick", "T_Employee", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 12766), false)
);

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n");

            
            #line 256 "..\..\Views\T_Licenses\Edit.cshtml"
									}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t                                            \r\n");

            
            #line 260 "..\..\Views\T_Licenses\Edit.cshtml"
											 
            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\T_Licenses\Edit.cshtml"
                                              if (User.CanView("T_Employee"))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(" id=\"dvLinkToT_Employee\"");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n                                                            <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" id=\"aLinkToT_Employee\"");

WriteLiteral(" target=\"_blank\"");

WriteAttribute("href", Tuple.Create(" href=\"", 13595), Tuple.Create("\"", 13791)
            
            #line 263 "..\..\Views\T_Licenses\Edit.cshtml"
                                                              , Tuple.Create(Tuple.Create("", 13602), Tuple.Create<System.Object, System.Int32>(Url.Action(User.CanEdit("T_Employee") ? "Edit" : "Details", "T_Employee", new { Id = Html.DisplayFor(model => model.t_licenserecords.Id).ToString(), UrlReferrer=Request.UrlReferrer}, null)
            
            #line default
            #line hidden
, 13602), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-eye-open\"");

WriteLiteral("></i></a>\r\n                                                        </div>\r\n");

            
            #line 265 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        if (Model.t_licenserecords == null)
                                                        {

            
            #line default
            #line hidden
WriteLiteral(@"                                                            <script>
                                                                $(function () {
                                                                    $(""#dvLinkToT_Employee"").hide();
                                                                });
                                                            </script>
");

            
            #line 272 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
WriteLiteral(@"                                                            <script>
                                                                $(function () {
                                                                    $(""#dvLinkToT_Employee"").attr(""title"", '");

            
            #line 277 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                       Write(Model.t_licenserecords.DisplayValue);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n                                                                });\r\n       " +
"                                                     </script>\r\n");

            
            #line 280 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        }
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                        \t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n           " +
"             </div>\r\n                    </div>\r\n");

            
            #line 286 "..\..\Views\T_Licenses\Edit.cshtml"


                   
					} else { 
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\T_Licenses\Edit.cshtml"
                        Write(Html.HiddenFor(model => model.T_LicenseRecordsID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                }

            
            #line default
            #line hidden
            
            #line 290 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_NameontheLicense"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_NameontheLicense\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Name on the License\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 294 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_NameontheLicense));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t");

            
            #line 296 "..\..\Views\T_Licenses\Edit.cshtml"
                           Write(Html.TextAreaFor(model => model.T_NameontheLicense, getHtmlAttributes("T_NameontheLicense")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 297 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_NameontheLicense));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 301 "..\..\Views\T_Licenses\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 301 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_NameontheLicense, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 301 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                            }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48884\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" alt=\"License Information\"");

WriteLiteral(" title=\"License Information\"");

WriteLiteral(">License Information</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n");

            
            #line 315 "..\..\Views\T_Licenses\Edit.cshtml"
				
            
            #line default
            #line hidden
            
            #line 315 "..\..\Views\T_Licenses\Edit.cshtml"
                 if(User.CanView("T_Licenses","T_AssociatedLicensesTypeID"))
				{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_AssociatedLicensesTypeID\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 319 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                   Write(Html.LabelFor(model => model.T_AssociatedLicensesTypeID));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span></label>\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\t\t\t\t\t\t\t\t\t\r\n");

            
            #line 322 "..\..\Views\T_Licenses\Edit.cshtml"
									
            
            #line default
            #line hidden
            
            #line 322 "..\..\Views\T_Licenses\Edit.cshtml"
                                     if (User.CanEdit("T_Licenses", "T_AssociatedLicensesTypeID"))
		{
			
            
            #line default
            #line hidden
            
            #line 324 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.DropDownList("T_AssociatedLicensesTypeID", null, "-- Select --", new {  @required ="required",      @class = "chosen-select form-control", @HostingName = "T_Licensestype", @dataurl = Url.Action("GetAllValue", "T_Licensestype",new { caller = "T_AssociatedLicensesTypeID" }) }));

            
            #line default
            #line hidden
            
            #line 324 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                                                                                                                                                                                                     
		}
		else
		{
			
            
            #line default
            #line hidden
            
            #line 328 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.HiddenFor(model => model.T_AssociatedLicensesTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 328 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                       
			
            
            #line default
            #line hidden
            
            #line 329 "..\..\Views\T_Licenses\Edit.cshtml"
       Write(Html.DropDownList("T_AssociatedLicensesTypeID", null, "-- Select --", new {  @required ="required",     @class = "chosen-select form-control", @disabled="disabled", @HostingName = "T_Licensestype", @dataurl = Url.Action("GetAllValue", "T_Licensestype",new { caller = "T_AssociatedLicensesTypeID" }) }));

            
            #line default
            #line hidden
            
            #line 329 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                                                                                                                                                                                                                          
		}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 331 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_AssociatedLicensesTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 332 "..\..\Views\T_Licenses\Edit.cshtml"
									
            
            #line default
            #line hidden
            
            #line 332 "..\..\Views\T_Licenses\Edit.cshtml"
                                     if (User.CanAdd("T_Licensestype"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t<a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" id=\"addT_Licensestype\"");

WriteLiteral("  data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 18393), Tuple.Create("\"", 18705)
            
            #line 335 "..\..\Views\T_Licenses\Edit.cshtml"
                                                     , Tuple.Create(Tuple.Create("", 18403), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Licenses Type','dvPopup','" + Url.Action("CreateQuick", "T_Licensestype", new { UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), IsAddPop=true }) + "')")
            
            #line default
            #line hidden
, 18403), false)
);

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n");

            
            #line 339 "..\..\Views\T_Licenses\Edit.cshtml"
									}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t                                            \r\n");

            
            #line 343 "..\..\Views\T_Licenses\Edit.cshtml"
											 
            
            #line default
            #line hidden
            
            #line 343 "..\..\Views\T_Licenses\Edit.cshtml"
                                              if (User.CanView("T_Licensestype"))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(" id=\"dvLinkToT_Licensestype\"");

WriteLiteral(" title=\"\"");

WriteLiteral(">\r\n                                                            <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteLiteral(" id=\"aLinkToT_Licensestype\"");

WriteLiteral(" target=\"_blank\"");

WriteAttribute("href", Tuple.Create(" href=\"", 19253), Tuple.Create("\"", 19465)
            
            #line 346 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                  , Tuple.Create(Tuple.Create("", 19260), Tuple.Create<System.Object, System.Int32>(Url.Action(User.CanEdit("T_Licensestype") ? "Edit" : "Details", "T_Licensestype", new { Id = Html.DisplayFor(model => model.t_associatedlicensestype.Id).ToString(), UrlReferrer=Request.UrlReferrer}, null)
            
            #line default
            #line hidden
, 19260), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-eye-open\"");

WriteLiteral("></i></a>\r\n                                                        </div>\r\n");

            
            #line 348 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        if (Model.t_associatedlicensestype == null)
                                                        {

            
            #line default
            #line hidden
WriteLiteral(@"                                                            <script>
                                                                $(function () {
                                                                    $(""#dvLinkToT_Licensestype"").hide();
                                                                });
                                                            </script>
");

            
            #line 355 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
WriteLiteral(@"                                                            <script>
                                                                $(function () {
                                                                    $(""#dvLinkToT_Licensestype"").attr(""title"", '");

            
            #line 360 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                           Write(Model.t_associatedlicensestype.DisplayValue);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n                                                                });\r\n       " +
"                                                     </script>\r\n");

            
            #line 363 "..\..\Views\T_Licenses\Edit.cshtml"
                                                        }
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                        \t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n           " +
"             </div>\r\n                    </div>\r\n");

            
            #line 369 "..\..\Views\T_Licenses\Edit.cshtml"


                   
					} else { 
            
            #line default
            #line hidden
            
            #line 372 "..\..\Views\T_Licenses\Edit.cshtml"
                        Write(Html.HiddenFor(model => model.T_AssociatedLicensesTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 372 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                        }

            
            #line default
            #line hidden
            
            #line 373 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_LicenseNumber"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_LicenseNumber\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"License  Number\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 377 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_LicenseNumber));

            
            #line default
            #line hidden
WriteLiteral("   </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 380 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.TextBoxFor(model => model.T_LicenseNumber,  getHtmlAttributes("T_LicenseNumber")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 381 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_LicenseNumber));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 385 "..\..\Views\T_Licenses\Edit.cshtml"
										
} else { 
            
            #line default
            #line hidden
            
            #line 386 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_LicenseNumber, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 386 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                         }

            
            #line default
            #line hidden
            
            #line 387 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_InitialLicenseDate"))
{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_InitialLicenseDate\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Initial  License  Date\"");

WriteLiteral(">\r\n                                <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 392 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_InitialLicenseDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_InitialLicenseDate\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 395 "..\..\Views\T_Licenses\Edit.cshtml"
Write(Html.TextBoxFor(model => model.T_InitialLicenseDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Licenses", "T_InitialLicenseDate") ? (object)new { @class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 401 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_InitialLicenseDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </div>\r\n");

            
            #line 405 "..\..\Views\T_Licenses\Edit.cshtml"
								
            
            #line default
            #line hidden
            
            #line 405 "..\..\Views\T_Licenses\Edit.cshtml"
                                 if(User.CanEdit("T_Licenses", "T_InitialLicenseDate"))
								{

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
										$('#T_InitialLicenseDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_InitialLicenseDate').datetimepicker({ pickTime:false });
  
                                    });
                                </script>
");

            
            #line 414 "..\..\Views\T_Licenses\Edit.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 416 "..\..\Views\T_Licenses\Edit.cshtml"
						

                           
} else { 
            
            #line default
            #line hidden
            
            #line 419 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_InitialLicenseDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 419 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                              }

            
            #line default
            #line hidden
            
            #line 420 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_ExpiryDate"))
{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_ExpiryDate\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"Expiry  Date\"");

WriteLiteral(">\r\n                                <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 425 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_ExpiryDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_ExpiryDate\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 428 "..\..\Views\T_Licenses\Edit.cshtml"
Write(Html.TextBoxFor(model => model.T_ExpiryDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Licenses", "T_ExpiryDate") ? (object)new { @class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 434 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_ExpiryDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </div>\r\n");

            
            #line 438 "..\..\Views\T_Licenses\Edit.cshtml"
								
            
            #line default
            #line hidden
            
            #line 438 "..\..\Views\T_Licenses\Edit.cshtml"
                                 if(User.CanEdit("T_Licenses", "T_ExpiryDate"))
								{

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
										$('#T_ExpiryDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_ExpiryDate').datetimepicker({ pickTime:false });
  
                                    });
                                </script>
");

            
            #line 447 "..\..\Views\T_Licenses\Edit.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 449 "..\..\Views\T_Licenses\Edit.cshtml"
						

                           
} else { 
            
            #line default
            #line hidden
            
            #line 452 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_ExpiryDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 452 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                      }

            
            #line default
            #line hidden
            
            #line 453 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_PrintDate"))
{


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_PrintDate\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(" title=\"License Print Date\"");

WriteLiteral(">\r\n                                <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 458 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_PrintDate));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"input-group date\"");

WriteLiteral(" id=\"datetimepickerT_PrintDate\"");

WriteLiteral(">\r\n");

WriteLiteral(" ");

            
            #line 461 "..\..\Views\T_Licenses\Edit.cshtml"
Write(Html.TextBoxFor(model => model.T_PrintDate, "{0:MM/dd/yyyy}", User.CanEdit("T_Licenses", "T_PrintDate") ? (object)new { @class = "form-control" } : (object)new { @class = "form-control", @readonly="readonly"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t\t<span");

WriteLiteral(" class=\"input-group-addon btn-default calendar\"");

WriteLiteral(">\r\n                                           <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral("></i>\r\n                                        </span>\r\n                         " +
"           </div>\r\n");

WriteLiteral("                                    ");

            
            #line 467 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_PrintDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </div>\r\n");

            
            #line 471 "..\..\Views\T_Licenses\Edit.cshtml"
								
            
            #line default
            #line hidden
            
            #line 471 "..\..\Views\T_Licenses\Edit.cshtml"
                                 if(User.CanEdit("T_Licenses", "T_PrintDate"))
								{

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                    $(function () {
										$('#T_PrintDate').datetimepicker({ pickTime:false });
                                        $('#datetimepickerT_PrintDate').datetimepicker({ pickTime:false });
  
                                    });
                                </script>
");

            
            #line 480 "..\..\Views\T_Licenses\Edit.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 482 "..\..\Views\T_Licenses\Edit.cshtml"
						

                           
} else { 
            
            #line default
            #line hidden
            
            #line 485 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_PrintDate, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 485 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                     }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(" id=\"dvGroup48886\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"panel-heading clearfix\"");

WriteLiteral(">\r\n                                            <i");

WriteLiteral(" class=\"icon-calendar\"");

WriteLiteral("></i>\r\n\t\t\t\t\t\t\t\t<h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(" alt=\"Notes\"");

WriteLiteral(" title=\"Notes\"");

WriteLiteral("> <a");

WriteLiteral(" class=\"accordion-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-parent=\"#accordion\"");

WriteLiteral(" href=\"#notesbody\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-down\"");

WriteLiteral("></span> Notes</a></h3>\r\n                               </div>\r\n\t\t\t\t\t\t\t  <div");

WriteLiteral(" class=\"panel-body panel-collapse collapse\"");

WriteLiteral(" id=\"notesbody\"");

WriteLiteral(">\t\t\t\t\t\r\n");

            
            #line 498 "..\..\Views\T_Licenses\Edit.cshtml"
 if(User.CanView("T_Licenses","T_Notes"))
{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(" id=\"dvT_Notes\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t<div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(" title=\"Notes\"");

WriteLiteral(">\r\n\t\t\t\t\t\t\t\t<label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(" >");

            
            #line 502 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                       Write(Html.LabelFor(model => model.T_Notes));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t");

            
            #line 504 "..\..\Views\T_Licenses\Edit.cshtml"
                           Write(Html.TextAreaFor(model => model.T_Notes, getHtmlAttributes("T_Notes")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t\t\t\t\t\t");

            
            #line 505 "..\..\Views\T_Licenses\Edit.cshtml"
                               Write(Html.ValidationMessageFor(model => model.T_Notes));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n                             </div>\r\n\t\t\t\t\t\t</div>\r\n");

            
            #line 509 "..\..\Views\T_Licenses\Edit.cshtml"
} else { 
            
            #line default
            #line hidden
            
            #line 509 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.HiddenFor(model => model.T_Notes, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 509 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                 }

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</div>\r\n                         </div>\r\n                      </div>\r\n   " +
"    </div>\r\n            </div>\r\n        </div>\r\n\t\t</div>\r\n");

            
            #line 517 "..\..\Views\T_Licenses\Edit.cshtml"
		 
            
            #line default
            #line hidden
            
            #line 517 "..\..\Views\T_Licenses\Edit.cshtml"
    Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 517 "..\..\Views\T_Licenses\Edit.cshtml"
                                 ;

            
            #line default
            #line hidden
WriteLiteral("\t\t <a");

WriteLiteral(" class=\"btn btn-default btn-sm pull-left formbuttonfix\"");

WriteAttribute("Onclick", Tuple.Create(" Onclick=\"", 28691), Tuple.Create("\"", 28745)
, Tuple.Create(Tuple.Create("", 28701), Tuple.Create("goBack(\'", 28701), true)
            
            #line 518 "..\..\Views\T_Licenses\Edit.cshtml"
   , Tuple.Create(Tuple.Create("", 28709), Tuple.Create<System.Object, System.Int32>(Url.Action("Index","T_Licenses")
            
            #line default
            #line hidden
, 28709), false)
, Tuple.Create(Tuple.Create("", 28742), Tuple.Create("\');", 28742), true)
);

WriteLiteral(" alt=\"Cancel\"");

WriteLiteral(" title=\"Cancel\"");

WriteLiteral(">Cancel</a>\r\n");

            
            #line 519 "..\..\Views\T_Licenses\Edit.cshtml"
		 
            
            #line default
            #line hidden
            
            #line 519 "..\..\Views\T_Licenses\Edit.cshtml"
                                                                                                                                                                                                                          
		 if (EditPermission)
         {

            
            #line default
            #line hidden
WriteLiteral(" \t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-left formbuttonfix\"");

WriteLiteral("  alt=\"Save\"");

WriteLiteral(" title=\"Save\"");

WriteLiteral("/>\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"sevranBtnEdit\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"SaveNextPrev\"");

WriteLiteral(" alt=\"SaveNextPrev\"");

WriteLiteral(" title=\"SaveNextPrev\"");

WriteLiteral("/>\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" name=\"command\"");

WriteLiteral(" value=\"Save & Stay\"");

WriteLiteral(" class=\"btn btn-primary btn-sm pull-left formbuttonfix\"");

WriteLiteral(" alt=\"Save & Stay\"");

WriteLiteral(" title=\"Save & Stay\"");

WriteLiteral("/>\r\n");

            
            #line 525 "..\..\Views\T_Licenses\Edit.cshtml"
		}	

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdncommand\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

WriteLiteral("\t\t\t\t<input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"hdnNextPrevId\"");

WriteLiteral(" value=\"\"");

WriteLiteral(" />\r\n");

            
            #line 528 "..\..\Views\T_Licenses\Edit.cshtml"
}

            
            #line default
            #line hidden
            
            #line 529 "..\..\Views\T_Licenses\Edit.cshtml"
 
            
            #line default
            #line hidden
            
            #line 529 "..\..\Views\T_Licenses\Edit.cshtml"
    var dropmenubottom = false; 
            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"dropdown pull-left formbuttonfix\"");

WriteLiteral("  id=\"AddAssociationdropmenubottomT_Licenses\"");

WriteLiteral(">\r\n<button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary btn-sm dropdown-toggle\"");

WriteLiteral(" id=\"dropdownMenu1\"");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" alt=\"Add Association\"");

WriteLiteral(" title=\"Add Association\"");

WriteLiteral(">\r\n            Add Association\r\n            <span");

WriteLiteral(" class=\"caret\"");

WriteLiteral("></span>\r\n        </button>\r\n\t\t <ul");

WriteLiteral(" class=\"dropdown-menu \"");

WriteLiteral(" role=\"menu\"");

WriteLiteral(" aria-labelledby=\"dropdownMenu1\"");

WriteLiteral(">\r\n");

            
            #line 536 "..\..\Views\T_Licenses\Edit.cshtml"
			
            
            #line default
            #line hidden
            
            #line 536 "..\..\Views\T_Licenses\Edit.cshtml"
             if (User.CanAdd("T_Comment"))
            {  dropmenubottom = true;

            
            #line default
            #line hidden
WriteLiteral("                <li><a");

WriteAttribute("onclick", Tuple.Create(" onclick=", 30147), Tuple.Create("", 30468)
            
            #line 538 "..\..\Views\T_Licenses\Edit.cshtml"
, Tuple.Create(Tuple.Create("", 30156), Tuple.Create<System.Object, System.Int32>(Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Comment",
						new { UrlReferrer = Request.Url,
								AssociatedType ="T_LicensesComments", 
						HostingEntityName = "T_Licenses",
                              HostingEntityID = @Convert.ToString(Model.Id)
                        }, null) + "');")
            
            #line default
            #line hidden
, 30156), false)
);

WriteLiteral(">\r\n                   Add  Comment\r\n                </a>\r\n\t\t\t\t</li>\r\n");

            
            #line 547 "..\..\Views\T_Licenses\Edit.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\r\n</ul>\r\n</div>\r\n");

            
            #line 552 "..\..\Views\T_Licenses\Edit.cshtml"
 if(!dropmenubottom || !EditPermission)
{

            
            #line default
            #line hidden
WriteLiteral("    <script>\r\n        $(\"#AddAssociationdropmenubottomT_Licenses\").hide();\r\n    <" +
"/script>\r\n");

            
            #line 557 "..\..\Views\T_Licenses\Edit.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(" style=\"clear:both; margin-bottom:8px\"");

WriteLiteral("></div>\r\n</div>\r\n <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"T_LicensesComments\"");

WriteLiteral(">\r\n");

            
            #line 561 "..\..\Views\T_Licenses\Edit.cshtml"
	
            
            #line default
            #line hidden
            
            #line 561 "..\..\Views\T_Licenses\Edit.cshtml"
     if (User.CanView("T_Comment"))
	{
	  // Html.RenderAction("Index", "T_Comment", new {RenderPartial=true, HostingEntity = "T_Licenses", HostingEntityID = @Model.Id, AssociatedType = "T_LicensesComments" }); 
	}

            
            #line default
            #line hidden
WriteLiteral("  </div>\r\n <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"JournalEntryToT_LicensesRelation\"");

WriteLiteral(">\r\n");

            
            #line 567 "..\..\Views\T_Licenses\Edit.cshtml"
			 
            
            #line default
            #line hidden
            
            #line 567 "..\..\Views\T_Licenses\Edit.cshtml"
              if (User.CanView("JournalEntry"))
			 {
			  // Html.RenderAction("Index", "JournalEntry", new { RenderPartial = true, HostingEntity = "T_Licenses", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry" });
			 }

            
            #line default
            #line hidden
WriteLiteral("  </div>\r\n\r\n</div> <!-- /tab-content --><br />\r\n\r\n<br/>\r\n</div>\r\n\t<script>\r\n\t</sc" +
"ript>\r\n\t\r\n\r\n");

            
            #line 581 "..\..\Views\T_Licenses\Edit.cshtml"
  
var businessrule = User.businessrules.Where(p => p.EntityName == "T_Licenses").ToList();

if ((businessrule != null && businessrule.Count > 0) )
{
var ruleids = businessrule.Select(q => q.Id).ToList();
var typelist  = string.Join(",", (new GeneratorBase.MVC.Models.RuleActionContext()).RuleActions.Where(p => ruleids.Contains(p.RuleActionID.Value) && p.associatedactiontype.TypeNo.HasValue).Select(p => p.associatedactiontype.TypeNo.Value).Distinct().ToList());


            
            #line default
            #line hidden
WriteLiteral(@"    <script>
		$(document).ready(function () {
				document.getElementById(""ErrMsg"").innerHTML = """";
				var flag = true;
                var dataurl = """";
                var form = """";
                var inlinecount = ""0"";

 form = $(""#frmT_Licenses"").serialize();
				dataurl = """);

            
            #line 598 "..\..\Views\T_Licenses\Edit.cshtml"
                      Write(Url.Action("businessruletype", "T_Licenses", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral("\";\r\n                ApplyBusinessRuleOnPageLoad(\"");

            
            #line 599 "..\..\Views\T_Licenses\Edit.cshtml"
                                        Write(typelist);

            
            #line default
            #line hidden
WriteLiteral("\",dataurl, \"T_Licenses\", false, \"ErrMsg\", form);\r\n\t\t\t\t//business rules on inline " +
"associations\r\n\r\n    });\r\n</script>\r\n");

WriteLiteral(@"<script>
    $(""form"").submit(function (event) {
	if (!$(""#frmT_Licenses"").valid()) return;
			document.getElementById(""ErrMsg"").innerHTML = """";
            var flag = true;
            var dataurl = """";
            var form = """";
            var inlinecount = ""0"";
 form = $(""#frmT_Licenses"").serialize();
    
				 dataurl = """);

            
            #line 614 "..\..\Views\T_Licenses\Edit.cshtml"
                       Write(Url.Action("businessruletype", "T_Licenses", new { ruleType = "OnEdit"}));

            
            #line default
            #line hidden
WriteLiteral(@""";
                 flag = ApplyBusinessRuleOnSubmit(dataurl, ""T_Licenses"", false, ""ErrMsg"", form);

  				 //business rules on inline associations
               
			 if (flag)
				{
				                    $('input:hidden[name=""hdncommand""]').val($(this.id).context.activeElement.value);
					if ($(document.activeElement).attr('id') == ""nextEdit"" || $(document.activeElement).attr('id') == ""prevEdit"")
			         $('input:hidden[name=""hdncommand""]').val(""SaveNextPrev"");
					 $(""#frmT_Licenses"").find(':input').removeAttr('disabled');
					}
            return flag;
		});
</script>
");

            
            #line 629 "..\..\Views\T_Licenses\Edit.cshtml"
}
 else
    {

            
            #line default
            #line hidden
WriteLiteral(@"       <script>
    $(""input[type='submit']"").click(function (event) {
	if (!$(""#frmT_Licenses"").valid()) return;
        var $this = $(this);
                var actionName = $this.attr(""actionName"")
                if (actionName == undefined)
                    actionName = $this.val();
                $('input:hidden[name=""hdncommand""]').val(actionName);
    });
	</script>
");

            
            #line 642 "..\..\Views\T_Licenses\Edit.cshtml"
    }
 

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<script");

WriteLiteral(" type=\'text/javascript\'");

WriteLiteral(@">
    $(document).ready(function () {
        try {
		focusOnControl('frmT_Licenses');
        }
        catch (ex) { }
    });
	 $(document).ready(function () {
		var RecIdEdit = $(""#frmT_Licenses"").find(""input:hidden[name='Id']"").val();
        $(""#EntityT_LicensesDisplayValueEdit"").val(RecIdEdit);

		var textedit = $(""option:selected"", $(""#EntityT_LicensesDisplayValueEdit"")).text();
		$(""#EntityT_LicensesDisplayValueEdit"").attr('data-toggle', 'tooltip')
		$(""#EntityT_LicensesDisplayValueEdit"").attr('title', textedit);

        var lastOptionValEdit = $('#EntityT_LicensesDisplayValueEdit option:last-child').val();
        var fristOptionValEdit = $('#EntityT_LicensesDisplayValueEdit option:first-child').val();
        if (lastOptionValEdit == RecIdEdit) {
            $('#nextEdit').attr({ ""disabled"": ""true"", ""style"": ""background-color:#eeeeee !important; color:#969696 !important; border-color:#ccc !important"" });
        }
        if (fristOptionValEdit == RecIdEdit)
            $('#prevEdit').attr({ ""disabled"": ""true"", ""style"": ""background-color:#eeeeee !important; color:#969696 !important; border-color:#ccc !important"" });
    });
</script>


");

        }
    }
}
#pragma warning restore 1591
