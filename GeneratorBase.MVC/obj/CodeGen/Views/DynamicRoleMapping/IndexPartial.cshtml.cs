#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.DynamicRoleMapping
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
    using PagedList.Mvc;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/DynamicRoleMapping/IndexPartial.cshtml")]
    public partial class IndexPartial : GeneratorBase.MVC.CustomWebViewPage<PagedList.IPagedList<GeneratorBase.MVC.Models.DynamicRoleMapping>>
    {
        
        #line 52 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                
        object getSortHtmlAttributes(string sortby, bool IsPaging, int? page, bool? IsExport)
        {
            if (IsPaging)
            {
                return new
                {
                    page,
                    sortBy = ViewBag.CurrentSort,
                    isAsc = ViewBag.IsAsc,
                    currentFilter = ViewBag.CurrentFilter,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    HostingEntityID = ViewData["HostingEntityID"],
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    IsFilter = @Convert.ToBoolean(ViewData["IsFilter"]),
                    Flag = Request.QueryString["Flag"],
                    search = Request.QueryString["search"],
                };
            }
            else
            {
                return new
                {
                    sortBy = sortby,
                    currentFilter = Request.QueryString["currentFilter"],
                    searchString = Request.QueryString["searchString"],
                    isAsc = (ViewBag.IsAsc == "ASC" ? "DESC" : ""),
                    page = ViewBag.Pages,
                    HostingEntity = @Convert.ToString(ViewData["HostingEntity"]),
                    HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]),
                    AssociatedType = @Convert.ToString(ViewData["AssociatedType"]),
                    IsExport = IsExport,
                    FSFilter = ViewBag.FSFilter == null ? "Fsearch" : ViewBag.FSFilter,
                    IsFilter = @Convert.ToBoolean(ViewData["IsFilter"]),
                    Flag = Request.QueryString["Flag"],
                    search = Request.QueryString["search"],
                };
            }
        }
    
        #line default
        #line hidden
        
        public IndexPartial()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
  
    var ActionNameUrl = "Index";
    if (HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString().ToUpper() == "FSEARCH")
    {
        ActionNameUrl = "FSearch";
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"DynamicRoleMapping\"");

WriteLiteral(@">
    <style>
        .table-responsive > .fixed-column {
            position: absolute;
            display: block;
            width: auto;
            border: 0px solid transparent;
            border-top: 1px solid #c3ddec;
        }

        .fixed-column th {
            background: #fff;
        }

        .fixed-column td {
            background: #fff;
        }
    </style>
    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(document).ready(function () {\r\n            $(\".pagination a\").click(" +
"function (e) {\r\n                //PaginationClick(e,\'DynamicRoleMapping\')\r\n     " +
"           PaginationClick(e, \'DynamicRoleMapping\', \'");

            
            #line 32 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                     Write(User.JavaScriptEncodedName);

            
            #line default
            #line hidden
WriteLiteral("\')\r\n            })\r\n            if (\"");

            
            #line 34 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
            Write(HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString().ToUpper());

            
            #line default
            #line hidden
WriteLiteral(@""" == ""FSEARCH"") {
                $(""#fsearchDynamicRoleMapping"").addClass('in');
            }
            $(""#SearchStringDynamicRoleMapping"").keypress(function (e) {
                if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                    $(""#DynamicRoleMappingSearch"").bind(""click"", (function () {
                    }));
                    $('#DynamicRoleMappingSearch').trigger(""click"");
                    return false;
                }
            })
            $(""#btnShowHideDynamicRoleMapping"").mouseup(function () {
                if (document.getElementById('ColumnShowHideDynamicRoleMapping').className == 'collapse') {
                    $('#lblDynamicRoleMapping').css('display', 'none');
                }
            })
        });
    </script>
");

            
            #line 52 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
    
            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-sx-12\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"panel\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(" style=\"margin:0px; padding:3px 3px 0px 3px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"btn-group\"");

WriteLiteral(">\r\n");

            
            #line 99 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 99 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                         if (User.CanAdd("DynamicRoleMapping"))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <a");

WriteLiteral(" class=\"btn\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" data-original-title=\"Quick Add\"");

WriteLiteral(" style=\"padding:3px 5px;\"");

WriteLiteral(" data-toggle=\"modal\"");

WriteLiteral(" data-target=\"#dvPopup\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 4451), Tuple.Create("\"", 4811)
            
            #line 101 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                             , Tuple.Create(Tuple.Create("", 4461), Tuple.Create<System.Object, System.Int32>(Html.Raw("OpenPopUpEntity('addPopup','Dynamic Role','dvPopup','" + Url.Action("CreateQuick", "DynamicRoleMapping", new { UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]), TS=DateTime.Now }) + "')")
            
            #line default
            #line hidden
, 4461), false)
);

WriteLiteral(">\r\n                                <span");

WriteLiteral(" class=\"fa fa-plus-circle\"");

WriteLiteral("></span> Quick Add\r\n                            </a>\r\n");

            
            #line 104 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n\r\n                    <div");

WriteLiteral(" class=\"btn-group\"");

WriteLiteral(">\r\n                        <a");

WriteLiteral(" class=\"btn dropdown-toggle tip-top\"");

WriteLiteral(" data-original-title=\"Bulk Actions\"");

WriteLiteral(" style=\"padding:3px 5px;\"");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">\r\n                            <span");

WriteLiteral(" class=\"fa fa-wrench\"");

WriteLiteral("></span> Bulk\r\n                        </a>\r\n                        <ul");

WriteLiteral(" class=\"dropdown-menu\"");

WriteLiteral(" role=\"menu\"");

WriteLiteral(">\r\n                            <li>\r\n");

            
            #line 113 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 113 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanDelete("DynamicRoleMapping"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 5537), Tuple.Create("\"", 5659)
, Tuple.Create(Tuple.Create("", 5547), Tuple.Create("PerformBulkOperation(this,\'DynamicRoleMapping\',\'Bulk", 5547), true)
, Tuple.Create(Tuple.Create(" ", 5599), Tuple.Create("Delete\',\'", 5600), true)
            
            #line 115 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                              , Tuple.Create(Tuple.Create("", 5609), Tuple.Create<System.Object, System.Int32>(Url.Action("DeleteBulk", "DynamicRoleMapping")
            
            #line default
            #line hidden
, 5609), false)
, Tuple.Create(Tuple.Create("", 5656), Tuple.Create("\');", 5656), true)
);

WriteLiteral(">Delete</a>\r\n");

            
            #line 116 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </li>\r\n                        </ul>\r\n               " +
"     </div>\r\n                    <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(" style=\"width:250px;\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 122 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                       Write(Html.TextBox("SearchStringDynamicRoleMapping", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @value = ViewBag.Homeval, @placeholder = "Search" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                <a");

WriteLiteral(" id=\"DynamicRoleMappingSearch\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 6256), Tuple.Create("\"", 6709)
, Tuple.Create(Tuple.Create("", 6266), Tuple.Create("SearchClick(event,", 6266), true)
, Tuple.Create(Tuple.Create(" ", 6284), Tuple.Create("\'DynamicRoleMapping\',", 6285), true)
, Tuple.Create(Tuple.Create(" ", 6306), Tuple.Create("\'", 6307), true)
            
            #line 124 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    , Tuple.Create(Tuple.Create("", 6308), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "DynamicRoleMapping", new { IsFilter = ViewData["IsFilter"], IsDeepSearch = false, searchString = "_SearchString", HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]), SearchTimeStamp = DateTime.Now }))
            
            #line default
            #line hidden
, 6308), false)
, Tuple.Create(Tuple.Create("", 6676), Tuple.Create("\',\'", 6676), true)
            
            #line 124 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                       , Tuple.Create(Tuple.Create("", 6679), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 6679), false)
, Tuple.Create(Tuple.Create("", 6706), Tuple.Create("\');", 6706), true)
);

WriteLiteral(" data-original-title=\"Grid Search\"");

WriteLiteral(" class=\"btn btn-default btn-default tip-top\"");

WriteLiteral(" style=\"padding:3px 5px;\"");

WriteLiteral("><span");

WriteLiteral(" class=\"fa fa-search\"");

WriteLiteral("></span></a>\r\n                                <button");

WriteLiteral(" id=\"DynamicRoleMappingCancel\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-default collapse-data-btn tip-top\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 6999), Tuple.Create("\"", 7392)
, Tuple.Create(Tuple.Create("", 7009), Tuple.Create("CancelSearch(\'DynamicRoleMapping\',\'", 7009), true)
            
            #line 125 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                              , Tuple.Create(Tuple.Create("", 7044), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "DynamicRoleMapping", new {IsFilter=ViewData["IsFilter"], HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]), ClearSearchTimeStamp = DateTime.Now }))
            
            #line default
            #line hidden
, 7044), false)
, Tuple.Create(Tuple.Create("", 7360), Tuple.Create("\',\'", 7360), true)
            
            #line 125 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                             , Tuple.Create(Tuple.Create("", 7363), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 7363), false)
, Tuple.Create(Tuple.Create("", 7390), Tuple.Create("\')", 7390), true)
);

WriteLiteral(" data-original-title=\"Clear Search\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" style=\"padding:3px 5px;\"");

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" class=\"fa fa-plus-circle\"");

WriteLiteral("></span>\r\n                                </button>\r\n                            " +
"    <button");

WriteLiteral(" id=\"DynamicRoleMappingSearchCancel\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default btn-default collapse-data-btn tip-top\"");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 7748), Tuple.Create("\"", 8141)
, Tuple.Create(Tuple.Create("", 7758), Tuple.Create("CancelSearch(\'DynamicRoleMapping\',\'", 7758), true)
            
            #line 128 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                                    , Tuple.Create(Tuple.Create("", 7793), Tuple.Create<System.Object, System.Int32>(Html.Raw(Url.Action("Index", "DynamicRoleMapping", new {IsFilter=ViewData["IsFilter"], HostingEntity = Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = Convert.ToString(ViewData["HostingEntityID"]), AssociatedType = Convert.ToString(ViewData["AssociatedType"]), ClearSearchTimeStamp = DateTime.Now }))
            
            #line default
            #line hidden
, 7793), false)
, Tuple.Create(Tuple.Create("", 8109), Tuple.Create("\',\'", 8109), true)
            
            #line 128 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                   , Tuple.Create(Tuple.Create("", 8112), Tuple.Create<System.Object, System.Int32>(User.JavaScriptEncodedName
            
            #line default
            #line hidden
, 8112), false)
, Tuple.Create(Tuple.Create("", 8139), Tuple.Create("\')", 8139), true)
);

WriteLiteral(" data-original-title=\"Refresh Grid\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" style=\"padding:3px 5px;\"");

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" class=\"fa fa-refresh\"");

WriteLiteral("></span>\r\n                                </button>\r\n                            " +
"</div>\r\n                        </div>\r\n                    </div>\r\n            " +
"    </div>\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(" style=\"margin:0px; padding:3px 0px;\"");

WriteLiteral(">\r\n");

            
            #line 136 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 136 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                     if (ViewData["HostingEntity"] == null)
                    {
                        if (ViewBag.SearchResult != "")
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" id=\"fsearchDynamicRoleMapping\"");

WriteLiteral(" class=\"collapse MessageFSearch\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 141 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                           Write(Html.Raw(Html.Encode(ViewBag.SearchResult).Replace(Environment.NewLine, "<br/>")));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 8957), Tuple.Create("\"", 9006)
            
            #line 142 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 8964), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "DynamicRoleMapping")
            
            #line default
            #line hidden
, 8964), false)
);

WriteLiteral(" style=\"float:right\"");

WriteLiteral("><span");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral("></span> Clear</a>\r\n                            </div>\r\n");

            
            #line 144 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                        }
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 146 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
               Write(Html.Partial("~/Views/DynamicRoleMapping/ShowHideColumns.cshtml"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:auto;\"");

WriteLiteral(">\r\n                        <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                            <thead>\r\n                                <tr>\r\n   " +
"                                 <th");

WriteLiteral(" class=\"col2\"");

WriteLiteral(" style=\"width:20px;\"");

WriteLiteral(">\r\n                                        <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" class=\"tip-top\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(" data-original-title=\"Select All\"");

WriteLiteral(" onclick=\"SelectAllRows(this);\"");

WriteLiteral(" />\r\n");

WriteLiteral("                                        ");

            
            #line 153 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                   Write(Html.Hidden("SelectedItems"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </th>\r\n                                    " +
"<th");

WriteLiteral(" class=\"col1\"");

WriteLiteral(" style=\"width:70px;\"");

WriteLiteral(">Actions</th>\r\n");

            
            #line 156 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 156 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanView("DynamicRoleMapping", "EntityName"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <th");

WriteLiteral(" class=\"col2\"");

WriteLiteral(">\r\n");

WriteLiteral("                                            ");

            
            #line 159 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.ActionLink("Entity Name", ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes("EntityName", false, null, false), new { @onclick = "SortLinkClick(event,'DynamicRoleMapping');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 160 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 160 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "EntityName")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 161 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 162 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "EntityName")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 163 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                        </th>\r\n");

            
            #line 165 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    ");

            
            #line 166 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanView("DynamicRoleMapping", "RoleId"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <th");

WriteLiteral(" class=\"col3\"");

WriteLiteral(">\r\n");

WriteLiteral("                                            ");

            
            #line 169 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.ActionLink("Role", ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes("RoleId", false, null, false), new { @onclick = "SortLinkClick(event,'DynamicRoleMapping');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 170 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 170 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "RoleId")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 171 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 172 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "RoleId")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 173 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                        </th>\r\n");

            
            #line 175 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    ");

            
            #line 176 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanView("DynamicRoleMapping", "Condition"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <th");

WriteLiteral(" class=\"col4\"");

WriteLiteral(">\r\n");

WriteLiteral("                                            ");

            
            #line 179 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.ActionLink("Entity Column", ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes("Condition", false, null, false), new { @onclick = "SortLinkClick(event,'DynamicRoleMapping');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 180 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "Condition")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 181 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 182 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "Condition")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 183 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                        </th>\r\n");

            
            #line 185 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    ");

            
            #line 186 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanView("DynamicRoleMapping", "Value"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <th");

WriteLiteral(" class=\"col5\"");

WriteLiteral(">\r\n");

WriteLiteral("                                            ");

            
            #line 189 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.ActionLink("Value", ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes("Value", false, null, false), new { @onclick = "SortLinkClick(event,'DynamicRoleMapping');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 190 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 190 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "Value")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 191 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 192 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "Value")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 193 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                        </th>\r\n");

            
            #line 195 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    ");

            
            #line 196 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanView("DynamicRoleMapping", "UserRelation"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <th");

WriteLiteral(" class=\"col6\"");

WriteLiteral(">\r\n");

WriteLiteral("                                            ");

            
            #line 199 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.ActionLink("User Relation", ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes("UserRelation", false, null, false), new { @onclick = "SortLinkClick(event,'DynamicRoleMapping');" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 200 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 200 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "DESC" && ViewBag.CurrentSort == "UserRelation")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-desc\"");

WriteLiteral("></i>");

            
            #line 201 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                            }

            
            #line default
            #line hidden
WriteLiteral("                                            ");

            
            #line 202 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                             if (ViewBag.IsAsc == "ASC" && ViewBag.CurrentSort == "UserRelation")
                                            {
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-sort-asc\"");

WriteLiteral("></i>");

            
            #line 203 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                           }

            
            #line default
            #line hidden
WriteLiteral("                                        </th>\r\n");

            
            #line 205 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </tr>\r\n");

            
            #line 207 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 207 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 foreach (var item in Model)
                                {
                                    var Entity = ModelReflector.Entities.FirstOrDefault(p => p.Name == item.EntityName);
                                    var EntityDisplayName = item.EntityName;
                                    if (Entity != null)
                                    {
                                        EntityDisplayName = Entity.DisplayName;
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>\r\n                                            <input");

WriteLiteral(" type=\"checkbox\"");

WriteAttribute("id", Tuple.Create(" id=\"", 15127), Tuple.Create("\"", 15140)
            
            #line 217 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 15132), Tuple.Create<System.Object, System.Int32>(item.Id
            
            #line default
            #line hidden
, 15132), false)
);

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 15141), Tuple.Create("\"", 15191)
, Tuple.Create(Tuple.Create("", 15151), Tuple.Create("SelectForBulkOperation(this,\'", 15151), true)
            
            #line 217 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                      , Tuple.Create(Tuple.Create("", 15180), Tuple.Create<System.Object, System.Int32>(item.Id
            
            #line default
            #line hidden
, 15180), false)
, Tuple.Create(Tuple.Create("", 15188), Tuple.Create("\');", 15188), true)
);

WriteLiteral(" />\r\n                                        </td>\r\n                             " +
"           <td>\r\n                                            <div");

WriteLiteral(" style=\"width:60px; margin-top:-2px;\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"btn-group\"");

WriteLiteral(" style=\"position:absolute;\"");

WriteLiteral(">\r\n                                                    <button");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" class=\"btn btn-xs dropdown-toggle btn-default\"");

WriteLiteral(">\r\n                                                        Action\r\n              " +
"                                          <span");

WriteLiteral(" class=\"caret\"");

WriteLiteral(">    </span>\r\n                                                    </button>\r\n    " +
"                                                <ul");

WriteLiteral(" class=\"dropdown-menu pull-left\"");

WriteLiteral(">\r\n                                                        <li>\r\n");

            
            #line 228 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                            
            
            #line default
            #line hidden
            
            #line 228 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                             if (User.CanDelete("DynamicRoleMapping"))
                                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 16211), Tuple.Create("\"", 16491)
            
            #line 230 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
, Tuple.Create(Tuple.Create("", 16218), Tuple.Create<System.Object, System.Int32>(Url.Action("Delete", "DynamicRoleMapping", new { id = item.Id, UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)
            
            #line default
            #line hidden
, 16218), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"glyphicon glyphicon-remove-sign\"");

WriteLiteral("></i>  Delete</a>\r\n");

            
            #line 231 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                            }

            
            #line default
            #line hidden
WriteLiteral(@"                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </td>
");

            
            #line 237 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 237 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                         if (User.CanView("DynamicRoleMapping", "EntityName"))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <td>\r\n");

WriteLiteral("                                                ");

            
            #line 240 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                           Write(EntityDisplayName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </td>\r\n");

            
            #line 242 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 243 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                         if (User.CanView("DynamicRoleMapping", "RoleId"))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <td>\r\n");

WriteLiteral("                                                ");

            
            #line 246 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                           Write(Html.DisplayFor(modelItem => item.RoleId));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </td>\r\n");

            
            #line 248 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 249 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                         if (User.CanView("DynamicRoleMapping", "Condition"))
                                        {
                                            if (Entity != null)
                                            {
                                                var PropName = Entity.Properties.FirstOrDefault(p => p.Name == item.Condition);
                                                var PropDispName = PropName != null ? PropName.DisplayName : item.Condition;

            
            #line default
            #line hidden
WriteLiteral("                                                <td>\r\n");

WriteLiteral("                                                    ");

            
            #line 256 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                               Write(PropDispName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </td>\r\n");

            
            #line 258 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <td>Invalid - Delete and Recreate" +
"</td>");

            
            #line 261 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                      }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 263 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                         if (User.CanView("DynamicRoleMapping", "Value"))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <td>\r\n");

WriteLiteral("                                                ");

            
            #line 266 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                           Write(Html.DisplayFor(modelItem => item.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </td>\r\n");

            
            #line 268 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 269 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                         if (User.CanView("DynamicRoleMapping", "UserRelation"))
                                        {
                                            if (Entity != null)
                                            {
                                                var AssoName = Entity.Associations.FirstOrDefault(p => p.AssociationProperty == item.UserRelation);
                                                var AssoDispName = AssoName != null ? AssoName.DisplayName : item.UserRelation;

            
            #line default
            #line hidden
WriteLiteral("                                                <td>\r\n");

WriteLiteral("                                                    ");

            
            #line 276 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                               Write(AssoDispName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    ");

WriteLiteral("\r\n                                                </td>\r\n");

            
            #line 279 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <td>Invalid</td>");

            
            #line 282 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </tr>\r\n");

            
            #line 285 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                        </table>\r\n                    </div>\r\n                   " +
" <ul");

WriteLiteral(" id=\"Mob_List\"");

WriteLiteral(" class=\"list-group\"");

WriteLiteral(">\r\n");

            
            #line 289 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                         foreach (var item in Model)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <li");

WriteLiteral(" class=\"list-group-item\"");

WriteLiteral(">\r\n");

            
            #line 292 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 292 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanView("DynamicRoleMapping", "EntityName"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <p>\r\n                                        " +
"<span");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral("> Entity Name </span> : <span>\r\n");

WriteLiteral("                                            ");

            
            #line 296 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.DisplayFor(modelItem => item.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </span>\r\n                              " +
"      </p>\r\n");

            
            #line 299 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 300 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanView("DynamicRoleMapping", "RoleId"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <p>\r\n                                        " +
"<span");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral("> Role </span> : <span>\r\n");

WriteLiteral("                                            ");

            
            #line 304 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.DisplayFor(modelItem => item.RoleId));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </span>\r\n                              " +
"      </p>\r\n");

            
            #line 307 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 308 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanView("DynamicRoleMapping", "Condition"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <p>\r\n                                        " +
"<span");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral("> Entity Column </span> : <span>\r\n");

WriteLiteral("                                            ");

            
            #line 312 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.DisplayFor(modelItem => item.Condition));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </span>\r\n                              " +
"      </p>\r\n");

            
            #line 315 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 316 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanView("DynamicRoleMapping", "Value"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <p>\r\n                                        " +
"<span");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral("> Value </span> : <span>\r\n");

WriteLiteral("                                            ");

            
            #line 320 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.DisplayFor(modelItem => item.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </span>\r\n                              " +
"      </p>\r\n");

            
            #line 323 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 324 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                 if (User.CanView("DynamicRoleMapping", "UserRelation"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <p>\r\n                                        " +
"<span");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral("> User Relation </span> : <span>\r\n");

WriteLiteral("                                            ");

            
            #line 328 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                       Write(Html.DisplayFor(modelItem => item.UserRelation));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </span>\r\n                              " +
"      </p>\r\n");

            
            #line 331 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" class=\"label label-danger text-linkwhite\"");

WriteLiteral(">\r\n");

            
            #line 333 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 333 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                     if (User.CanDelete("DynamicRoleMapping"))
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 335 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                   Write(Html.ActionLink("Delete", "Delete", "DynamicRoleMapping", new { id = item.Id, UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null));

            
            #line default
            #line hidden
            
            #line 335 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                                                                                                                                                                                                                                                                                          
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </span>\r\n                            </li>\r\n");

            
            #line 339 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </ul>\r\n");

            
            #line 341 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 341 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                     if (Model.Count > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"pagination\"");

WriteLiteral(" class=\"MyPagination1\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 344 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                       Write(Html.PagedListPager(Model, page => Url.Action(ActionNameUrl, "DynamicRoleMapping", getSortHtmlAttributes(null, true, page, false))));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"fixPageSize\"");

WriteLiteral(">\r\n                                Page Size :\r\n");

WriteLiteral("                                ");

            
            #line 347 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                           Write(Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "10", 10 }, { "20", 20 }, { "50", 50 }, { "100", 100 } }, "Key", "Value")
                            , new
                            {
                                @id = "pagesizelistDynamicRoleMapping",
                                @onchange = @Html.Raw("pagesizelistChange(event,'DynamicRoleMapping','"
                                 + @User.JavaScriptEncodedName + "')"),
                                @Url = Html.Raw(@Url.Action(ActionNameUrl, "DynamicRoleMapping",
                                getSortHtmlAttributes(ViewBag.CurrentSort, ViewBag.Pages == 1 ? false : true,
                                null, false), null))
                            }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <span");

WriteLiteral(" style=\"text-align:right;\"");

WriteLiteral("> Total Count: ");

            
            #line 357 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                                                                          Write(Model.TotalItemCount);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                            </div>\r\n                        </div>\r\n");

            
            #line 360 "..\..\Views\DynamicRoleMapping\IndexPartial.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
