#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.RuleAction
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    #line 2 "..\..\Views\RuleAction\Edit.cshtml"
    using PagedList;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/RuleAction/Edit.cshtml")]
    public partial class Edit : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.RuleAction>
    {
        
        #line 6 "..\..\Views\RuleAction\Edit.cshtml"
            
    object getHtmlAttributes(string Property)
    {
        if (User.CanEdit("RuleAction", Property))
        {
            return new { @class = "form-control" };
        } return new { @class = "form-control", @readonly = "readonly" };
    }

        #line default
        #line hidden
        
        public Edit()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\RuleAction\Edit.cshtml"
  
    ViewBag.Title = "Edit Rule Action";

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> Rule Action  <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i> <span>Edit</span>\r\n        </h1>\r\n        <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">");

            
            #line 20 "..\..\Views\RuleAction\Edit.cshtml"
                            Write(Html.DisplayFor(model => model.DisplayValue));

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n    </div>\r\n    <!-- /.col-lg-12 -->\r\n</div>\r\n<div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#Details\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Details</a></li>\r\n        <li ");

            
            #line 27 "..\..\Views\RuleAction\Edit.cshtml"
        Write(!User.CanView("ActionArgs") || (Model.associatedactiontype != null && Model.associatedactiontype.TypeNo <= 1) ? "style=display:none;" : "");

            
            #line default
            #line hidden
WriteLiteral("><a");

WriteLiteral(" href=\"#ActionArguments\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Action Args</a></li>\r\n    </ul>\r\n    <div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in active\"");

WriteLiteral(" id=\"Details\"");

WriteLiteral(">\r\n");

            
            #line 31 "..\..\Views\RuleAction\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 31 "..\..\Views\RuleAction\Edit.cshtml"
             using (Html.BeginForm("Edit", "RuleAction", new { UrlReferrer = Convert.ToString(ViewData["RuleActionParentUrl"]) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                
            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\RuleAction\Edit.cshtml"
           Write(Html.ValidationSummary(true));

            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\RuleAction\Edit.cshtml"
                                             
                
            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\RuleAction\Edit.cshtml"
           Write(Html.HiddenFor(model => model.Id));

            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\RuleAction\Edit.cshtml"
                                                  

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"col-md-12 col-sm-12 col-xs-12\"");

WriteLiteral(" style=\"padding:0px; margin:0px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-default AppForm\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n");

            
            #line 39 "..\..\Views\RuleAction\Edit.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 39 "..\..\Views\RuleAction\Edit.cshtml"
                                 if (User.CanView("RuleAction", "ActionName"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 43 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                  Write(Html.LabelFor(model => model.ActionName));

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"text-danger-reg\"");

WriteLiteral(">*</span> </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 45 "..\..\Views\RuleAction\Edit.cshtml"
                                           Write(Html.TextBoxFor(model => model.ActionName, getHtmlAttributes("ActionName")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 46 "..\..\Views\RuleAction\Edit.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.ActionName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n");

            
            #line 50 "..\..\Views\RuleAction\Edit.cshtml"
                                }
                                else
                                { 
            
            #line default
            #line hidden
            
            #line 52 "..\..\Views\RuleAction\Edit.cshtml"
                             Write(Html.HiddenFor(model => model.ActionName, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 52 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 53 "..\..\Views\RuleAction\Edit.cshtml"
                                 if (User.CanView("RuleAction", "ErrorMessage"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 57 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                  Write(Html.LabelFor(model => model.ErrorMessage));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                ");

            
            #line 59 "..\..\Views\RuleAction\Edit.cshtml"
                                           Write(Html.TextAreaFor(model => model.ErrorMessage, getHtmlAttributes("ErrorMessage")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                                ");

            
            #line 60 "..\..\Views\RuleAction\Edit.cshtml"
                                           Write(Html.ValidationMessageFor(model => model.ErrorMessage));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </div>\r\n                           " +
"             </div>\r\n                                    </div>\r\n");

            
            #line 64 "..\..\Views\RuleAction\Edit.cshtml"
                                }
                                else
                                { 
            
            #line default
            #line hidden
            
            #line 66 "..\..\Views\RuleAction\Edit.cshtml"
                             Write(Html.HiddenFor(model => model.ErrorMessage, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 66 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                                               }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 67 "..\..\Views\RuleAction\Edit.cshtml"
                                 if (User.CanView("RuleAction", "RuleActionID"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 71 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                  Write(Html.LabelFor(model => model.RuleActionID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 74 "..\..\Views\RuleAction\Edit.cshtml"
                                               Write(Html.DropDownList("RuleActionID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "BusinessRule", @dataurl = Url.Action("GetAllValue", "BusinessRule", null) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    ");

WriteLiteral("\r\n");

WriteLiteral("                                                    ");

            
            #line 76 "..\..\Views\RuleAction\Edit.cshtml"
                                               Write(Html.ValidationMessageFor(model => model.RuleActionID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 77 "..\..\Views\RuleAction\Edit.cshtml"
                                                    
            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\RuleAction\Edit.cshtml"
                                                     if ( User.CanAdd("BusinessRule"))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                            <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteAttribute("href", Tuple.Create(" href=\"", 5476), Tuple.Create("\"", 5686)
            
            #line 80 "..\..\Views\RuleAction\Edit.cshtml"
                        , Tuple.Create(Tuple.Create("", 5483), Tuple.Create<System.Object, System.Int32>(Url.Action("Create", "BusinessRule", new {UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) })
            
            #line default
            #line hidden
, 5483), false)
);

WriteLiteral(">\r\n                                                                <span");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                            </a>\r\n     " +
"                                                   </div>\r\n");

            
            #line 84 "..\..\Views\RuleAction\Edit.cshtml"
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                                </div>\r\n                         " +
"                   </div>\r\n                                        </div>\r\n     " +
"                               </div>\r\n");

            
            #line 89 "..\..\Views\RuleAction\Edit.cshtml"
                                }
                                else
                                { 
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\RuleAction\Edit.cshtml"
                             Write(Html.HiddenFor(model => model.RuleActionID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                                               }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 92 "..\..\Views\RuleAction\Edit.cshtml"
                                 if (User.CanView("RuleAction", "AssociatedActionTypeID"))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\'col-sm-6 col-md-6 col-xs-12\'");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\'form-group\'");

WriteLiteral(">\r\n                                            <label");

WriteLiteral(" class=\"col-sm-5 col-md-5 col-xs-12\"");

WriteLiteral(">");

            
            #line 96 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                  Write(Html.LabelFor(model => model.AssociatedActionTypeID));

            
            #line default
            #line hidden
WriteLiteral(" </label>\r\n                                            <div");

WriteLiteral(" class=\"input-group col-sm-7 col-md-7 col-xs-12\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");

            
            #line 99 "..\..\Views\RuleAction\Edit.cshtml"
                                               Write(Html.DropDownList("AssociatedActionTypeID", null, "-- Select --", new { @class = "chosen-select form-control", @HostingName = "ActionType", @dataurl = Url.Action("GetAllValue", "ActionType", null) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                    ");

WriteLiteral("\r\n");

WriteLiteral("                                                    ");

            
            #line 101 "..\..\Views\RuleAction\Edit.cshtml"
                                               Write(Html.ValidationMessageFor(model => model.AssociatedActionTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 102 "..\..\Views\RuleAction\Edit.cshtml"
                                                    
            
            #line default
            #line hidden
            
            #line 102 "..\..\Views\RuleAction\Edit.cshtml"
                                                     if ( User.CanAdd("ActionType"))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <div");

WriteLiteral(" class=\"input-group-btn\"");

WriteLiteral(">\r\n                                                            <a");

WriteLiteral(" class=\"btn btn-default btn ie8fix\"");

WriteAttribute("href", Tuple.Create(" href=\"", 7940), Tuple.Create("\"", 8148)
            
            #line 105 "..\..\Views\RuleAction\Edit.cshtml"
                        , Tuple.Create(Tuple.Create("", 7947), Tuple.Create<System.Object, System.Int32>(Url.Action("Create", "ActionType", new {UrlReferrer = Request.Url, HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) })
            
            #line default
            #line hidden
, 7947), false)
);

WriteLiteral(">\r\n                                                                <span");

WriteLiteral(" class=\"glyphicon glyphicon-plus-sign\"");

WriteLiteral("></span>\r\n                                                            </a>\r\n     " +
"                                                   </div>\r\n");

            
            #line 109 "..\..\Views\RuleAction\Edit.cshtml"
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                                                </div>\r\n                         " +
"                   </div>\r\n                                        </div>\r\n     " +
"                               </div>\r\n");

            
            #line 114 "..\..\Views\RuleAction\Edit.cshtml"
                                }
                                else
                                { 
            
            #line default
            #line hidden
            
            #line 116 "..\..\Views\RuleAction\Edit.cshtml"
                             Write(Html.HiddenFor(model => model.AssociatedActionTypeID, new { @class = "form-control" }));

            
            #line default
            #line hidden
            
            #line 116 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n             " +
"       </div>\r\n                </div>\r\n");

            
            #line 121 "..\..\Views\RuleAction\Edit.cshtml"
                
            
            #line default
            #line hidden
            
            #line 121 "..\..\Views\RuleAction\Edit.cshtml"
           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 121 "..\..\Views\RuleAction\Edit.cshtml"
                                        
                
            
            #line default
            #line hidden
            
            #line 122 "..\..\Views\RuleAction\Edit.cshtml"
           Write(Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["RuleActionParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" }));

            
            #line default
            #line hidden
            
            #line 122 "..\..\Views\RuleAction\Edit.cshtml"
                                                                                                                                                                     

            
            #line default
            #line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

            
            #line 124 "..\..\Views\RuleAction\Edit.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n        <div");

WriteLiteral(" class=\"tab-pane fade in\"");

WriteLiteral(" id=\"ActionArguments\"");

WriteLiteral(">\r\n");

            
            #line 127 "..\..\Views\RuleAction\Edit.cshtml"
            
            
            #line default
            #line hidden
            
            #line 127 "..\..\Views\RuleAction\Edit.cshtml"
             if ( User.CanView("ActionArgs"))
            {
                Html.RenderAction("Index", "ActionArgs", new { HostingEntity = "RuleAction", HostingEntityID = @Model.Id, AssociatedType = "ActionArguments" });
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n    </div> <!-- /tab-content --><br />\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
