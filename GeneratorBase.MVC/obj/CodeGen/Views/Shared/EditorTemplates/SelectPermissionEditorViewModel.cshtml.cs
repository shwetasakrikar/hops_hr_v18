#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.Shared.EditorTemplates
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/EditorTemplates/SelectPermissionEditorViewModel.cshtml")]
    public partial class _SelectPermissionEditorViewModel : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.SelectPermissionEditorViewModel>
    {
        public _SelectPermissionEditorViewModel()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
Write(Html.HiddenFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 3 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
  
    if (Model.IsAssociatedWithUser)
    {
        ViewBag.cmbUserAssociation = new SelectList(Model.UserAssociationList, "Name", "DisplayName"); ;
    }
    //code for verb action security
    if (Model.IsHaveVerbs)
    {
        ViewBag.cmbEntityVerb = new SelectList(Model.EntityVerbsList, "Name", "DisplayName"); ;
    }
    //
    var ModelEntity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.EntityName);
    var DispName = Model.EntityName;
    if (ModelEntity != null)
    {
        DispName = ModelEntity.DisplayName;
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 21 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
 if (Model.IsAppHeader)
{

            
            #line default
            #line hidden
WriteLiteral("    <tr");

WriteLiteral(" class=\"header expand\"");

WriteLiteral(" id=\"trAppHeader\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" colspan=\"8\"");

WriteLiteral(" style=\"background: #EDF5FA; font-weight:bold\"");

WriteLiteral("><span");

WriteLiteral(" class=\"sign\"");

WriteLiteral("></span> Application Entities</td>\r\n    </tr>\r\n");

            
            #line 26 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 28 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
 if (Model.IsDefaultHeader)
{

            
            #line default
            #line hidden
WriteLiteral("    <tr");

WriteLiteral(" class=\"header expand\"");

WriteLiteral(" id=\"trDefaultHeader\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" colspan=\"8\"");

WriteLiteral(" style=\"background: #EDF5FA; font-weight:bold\"");

WriteLiteral("><span");

WriteLiteral(" class=\"sign\"");

WriteLiteral("></span> Default Entities</td>\r\n    </tr>\r\n");

            
            #line 33 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<tr>\r\n    <td>\r\n");

WriteLiteral("        ");

            
            #line 38 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(Html.HiddenFor(model => model.EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 39 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(DispName);

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 42 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(Html.CheckBoxFor(model => model.CanAdd, new { @class = "fooAdd" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 45 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(Html.CheckBoxFor(model => model.CanEdit, new { @class = "fooEdit" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 48 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(Html.CheckBoxFor(model => model.CanDelete, new { @class = "fooDelete" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 51 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
   Write(Html.CheckBoxFor(model => model.CanView, new { @class = "fooView", @onclick = "ChangeViewPermissionOfEntity(this)" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n    ");

WriteLiteral("\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteAttribute("id", Tuple.Create(" id=\'", 1845), Tuple.Create("\'", 1875)
, Tuple.Create(Tuple.Create("", 1850), Tuple.Create("tdVerbs_", 1850), true)
            
            #line 54 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
, Tuple.Create(Tuple.Create("", 1858), Tuple.Create<System.Object, System.Int32>(Model.EntityName
            
            #line default
            #line hidden
, 1858), false)
);

WriteLiteral(">\r\n\r\n");

            
            #line 56 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
        
            
            #line default
            #line hidden
            
            #line 56 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
         if (Model.IsHaveVerbs)
        {
            
            
            #line default
            #line hidden
            
            #line 58 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.DropDownList("cmbEntityVerb", null, new { @onchange = "CheckIsVerbs(this);", @Verbent = Model.EntityName, @multiple = "multiple" }));

            
            #line default
            #line hidden
            
            #line 58 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                                                                                                     
            
            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.HiddenFor(model => model.Verbs, new { @id = Model.EntityName + "Verbstxt", @class = "classuser" }));

            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                                                                    
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n    </td>\r\n\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteAttribute("id", Tuple.Create(" id=\'", 2253), Tuple.Create("\'", 2278)
, Tuple.Create(Tuple.Create("", 2258), Tuple.Create("td_", 2258), true)
            
            #line 64 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
, Tuple.Create(Tuple.Create("", 2261), Tuple.Create<System.Object, System.Int32>(Model.EntityName
            
            #line default
            #line hidden
, 2261), false)
);

WriteLiteral(">\r\n");

            
            #line 65 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
        
            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
         if (Model.IsAssociatedWithUser)
        {
            
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.DropDownList("cmbUserAssociation", null, new { @onchange = "CheckIsOwner(this);", @ent = Model.EntityName, @multiple = "multiple" }));

            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                                                                                                      
            
            
            #line default
            #line hidden
            
            #line 68 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.CheckBoxFor(model => model.IsOwner, new { @id = Model.EntityName + "Owner", @class = "foo1 hidden" }));

            
            #line default
            #line hidden
            
            #line 68 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                                                                       
            
            
            #line default
            #line hidden
            
            #line 69 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.HiddenFor(model => model.UserAssociation, new { @id = Model.EntityName + "Ownertxt", @class = "classuser" }));

            
            #line default
            #line hidden
            
            #line 69 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                                                                              
        }

            
            #line default
            #line hidden
WriteLiteral("    </td>\r\n    <td");

WriteLiteral(" style=\"text-align:center\"");

WriteLiteral(">\r\n");

            
            #line 73 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
        
            
            #line default
            #line hidden
            
            #line 73 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
         if (Model.IsSelfRegistrartion)
        {
            
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
       Write(Html.CheckBoxFor(model => model.SelfRegistration));

            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                              
        }

            
            #line default
            #line hidden
WriteLiteral("    </td>\r\n</tr>\r\n");

            
            #line 79 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
 if (Model.IsAssociatedWithUser)
{

            
            #line default
            #line hidden
WriteLiteral("    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(document).ready(function () {\r\n            var roles = \"");

            
            #line 83 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                    Write(Model.UserAssociation);

            
            #line default
            #line hidden
WriteLiteral("\".split(\",\");\r\n            var eleRoles1 = $(\'select[multiple=multiple]\', \'#td_");

            
            #line 84 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                           Write(Model.EntityName);

            
            #line default
            #line hidden
WriteLiteral(@"');
            var eleRoles = document.getElementById($(eleRoles1).attr(""id""));
            if (roles != undefined)
                for (i = 0; i < roles.length; i++) {
                    for (var o = 0; o < eleRoles.options.length; o++) {
                        if (eleRoles.options[o].value == roles[i])
                            eleRoles.options[o].selected = true;
                    }
                }
        });
    </script>
");

            
            #line 95 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
}
    
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                     

            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
    
            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
     if (Model.IsHaveVerbs)
    {

            
            #line default
            #line hidden
WriteLiteral("        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n            $(document).ready(function () {\r\n                var verbs = \"");

            
            #line 101 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                        Write(Model.Verbs);

            
            #line default
            #line hidden
WriteLiteral("\".split(\",\");\r\n\r\n                var eleVerbs1 = $(\'select[multiple=multiple]\', \'" +
"#tdVerbs_");

            
            #line 103 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
                                                                    Write(Model.EntityName);

            
            #line default
            #line hidden
WriteLiteral(@"');
                var eleverbs = document.getElementById($(eleVerbs1).attr(""id""));
                if (verbs != undefined)
                    for (i = 0; i < verbs.length; i++) {
                        for (var o = 0; o < eleverbs.options.length; o++) {
                            if (eleverbs.options[o].value == verbs[i])
                                eleverbs.options[o].selected = true;
                        }
                    }
            });
        </script>
");

            
            #line 114 "..\..\Views\Shared\EditorTemplates\SelectPermissionEditorViewModel.cshtml"
    }
            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
