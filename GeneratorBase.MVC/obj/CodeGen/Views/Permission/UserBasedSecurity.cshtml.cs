#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratorBase.MVC.Views.Permission
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using GeneratorBase.MVC;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Permission/UserBasedSecurity.cshtml")]
    public partial class UserBasedSecurity : GeneratorBase.MVC.CustomWebViewPage<GeneratorBase.MVC.Models.USB>
    {
        public UserBasedSecurity()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Permission\UserBasedSecurity.cshtml"
  
    ViewBag.Title = "User Based Security";
    var isHierarchy = Model.security.Any(p => !string.IsNullOrEmpty(p.Other1));

            
            #line default
            #line hidden
WriteLiteral("\r\n<link");

WriteAttribute("href", Tuple.Create(" href=\"", 174), Tuple.Create("\"", 232)
            
            #line 6 "..\..\Views\Permission\UserBasedSecurity.cshtml"
, Tuple.Create(Tuple.Create("", 181), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Content/bootstrap-multiselect.css")
            
            #line default
            #line hidden
, 181), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n<script");

WriteLiteral(" language=\"JavaScript\"");

WriteLiteral(">\r\n    function SetGrid() {\r\n        var value = $(\'#EntityList\').val();\r\n       " +
" var url = $(\'#EntityList\').attr(\"dataurl\");\r\n        window.location.href = url" +
" + \"?key=\" + value;\r\n    }\r\n</script>\r\n<div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n    <label>");

            
            #line 15 "..\..\Views\Permission\UserBasedSecurity.cshtml"
      Write(ViewData["IsHieararchy"]);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n    <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n        <h1");

WriteLiteral(" class=\"page-title\"");

WriteLiteral(">\r\n            <i");

WriteLiteral(" class=\"glyphicon glyphicon-edit text-primary\"");

WriteLiteral("></i> Set User Based Security for Application <i");

WriteLiteral(" class=\"glyphicon glyphicon-chevron-right small\"");

WriteLiteral("></i>\r\n        </h1>\r\n");

            
            #line 20 "..\..\Views\Permission\UserBasedSecurity.cshtml"
        
            
            #line default
            #line hidden
            
            #line 20 "..\..\Views\Permission\UserBasedSecurity.cshtml"
         if (ViewData["AlreadySet"] != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <h2");

WriteLiteral(" class=\"text-primary\"");

WriteLiteral(">Application has security applied on - ");

            
            #line 22 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                                      Write(Convert.ToString(ViewData["AlreadySet"]));

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n");

            
            #line 23 "..\..\Views\Permission\UserBasedSecurity.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>\r\n<div");

WriteLiteral(" class=\"form-horizontal\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 27 "..\..\Views\Permission\UserBasedSecurity.cshtml"
Write(Html.ValidationSummary(true));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"tabbable responsive\"");

WriteLiteral(">\r\n");

            
            #line 29 "..\..\Views\Permission\UserBasedSecurity.cshtml"
        
            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Permission\UserBasedSecurity.cshtml"
         using (Html.BeginForm("SaveUBS", "Permission", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
        {
            
            
            #line default
            #line hidden
            
            #line 31 "..\..\Views\Permission\UserBasedSecurity.cshtml"
       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 31 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                    

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"col-md-12\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 34 "..\..\Views\Permission\UserBasedSecurity.cshtml"
               Write(Html.DropDownList("EntityList", null, new { @onchange = "SetGrid();", @class = "form-control hidden", @dataurl = Url.Action("UserBasedSecurity", "Permission", null) }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <div");

WriteLiteral(" id=\"r\"");

WriteLiteral(">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Des_Table\"");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(" style=\"overflow-x:inherit;\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" class=\"table table-striped table-bordered table-hover table-condensed\"");

WriteLiteral(">\r\n                    <tr>\r\n                        <th>Entity</th>\r\n           " +
"             <th>Target Entity</th>\r\n                        ");

WriteLiteral("\r\n                        <th>Ignore For Roles</th>\r\n");

            
            #line 46 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 46 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                         if (isHierarchy)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <th>Enable Hierarchy</th>\r\n");

            
            #line 49 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tr>\r\n                    ");

WriteLiteral("\r\n");

            
            #line 52 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 52 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                     for (int i = 0; i < Model.security.Count; i++)
                    {
                        var Entity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.security[i].EntityName);
                        var TargetEntity = ModelReflector.Entities.FirstOrDefault(p => p.Name == Model.security[i].TargetEntityName);
                        var DisplayNameEntity = Entity == null ? Model.security[i].EntityName : Entity.DisplayName;
                        var DisplayNameTargetEntity = TargetEntity == null ? Model.security[i].TargetEntityName : TargetEntity.DisplayName;

            
            #line default
            #line hidden
WriteLiteral("                        <tr>\r\n                            <td>\r\n");

WriteLiteral("                                ");

            
            #line 60 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(Html.HiddenFor(modelItem => Model.security[i].EntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 61 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(DisplayNameEntity);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                            <td>\r\n");

WriteLiteral("                                ");

            
            #line 64 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(Html.HiddenFor(modelItem => Model.security[i].TargetEntityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 65 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(DisplayNameTargetEntity);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n");

WriteLiteral("                            ");

            
            #line 67 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                       Write(Html.HiddenFor(modelItem => Model.security[i].AssociationName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <td");

WriteAttribute("id", Tuple.Create(" id=\"", 3524), Tuple.Create("\"", 3541)
            
            #line 68 "..\..\Views\Permission\UserBasedSecurity.cshtml"
, Tuple.Create(Tuple.Create("", 3529), Tuple.Create<System.Object, System.Int32>("Roles"+i
            
            #line default
            #line hidden
, 3529), false)
);

WriteLiteral(" name=\"Roles\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 69 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(Html.TextBoxFor(modelItem => Model.security[i].RolesToIgnore, new { style = "border:none;Width:0px;" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 70 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                           Write(Html.DropDownList("Roles", null, new { id = "SelectRoles_" + i, @multiple = "multiple" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n");

            
            #line 72 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                             if (isHierarchy)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <td");

WriteAttribute("id", Tuple.Create(" id=\"", 3968), Tuple.Create("\"", 3991)
            
            #line 74 "..\..\Views\Permission\UserBasedSecurity.cshtml"
, Tuple.Create(Tuple.Create("", 3973), Tuple.Create<System.Object, System.Int32>("Hierarchy" + i
            
            #line default
            #line hidden
, 3973), false)
);

WriteLiteral(" name=\"Hierarchy\"");

WriteLiteral(">\r\n");

            
            #line 75 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                     if (!string.IsNullOrEmpty(Model.security[i].Other1))
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                   Write(Html.TextBoxFor(modelItem => Model.security[i].Other1, new { style = "border:none;Width:0px;" }));

            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                                                                                                         
                                        
            
            #line default
            #line hidden
            
            #line 78 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                   Write(Html.CheckBox("Hierarchy", new { id = "EnableHierarchy_" + i }));

            
            #line default
            #line hidden
            
            #line 78 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                                                                        
                                    }
                                    else
                                    {
            
            #line default
            #line hidden
WriteLiteral(" <label></label> ");

            
            #line 81 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                      }

            
            #line default
            #line hidden
WriteLiteral("                                </td>\r\n");

            
            #line 83 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 84 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                       Write(Html.HiddenFor(modelItem => Model.security[i].IsMainEntity));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </tr>\r\n");

            
            #line 86 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </table>\r\n            </div>\r\n");

WriteLiteral("            <br />\r\n");

            
            #line 90 "..\..\Views\Permission\UserBasedSecurity.cshtml"
            
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Permission\UserBasedSecurity.cshtml"
       Write(Html.ActionLink("Back to Admin Settings", "Index", "Admin", null, new { @class = "btn btn-default btn-sm", @style = "margin-right:3px" }));

            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                                                                                                                      
            if (User.CanAddAdminFeature("UserBasedSecurity"))
            {
                
            
            #line default
            #line hidden
            
            #line 93 "..\..\Views\Permission\UserBasedSecurity.cshtml"
           Write(Html.ActionLink("Reset Security", "ClearUBS", "Permission", null, new { @class = "btn btn-primary btn-sm" }));

            
            #line default
            #line hidden
            
            #line 93 "..\..\Views\Permission\UserBasedSecurity.cshtml"
                                                                                                                             

            
            #line default
            #line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"Save\"");

WriteLiteral(" class=\"btn btn-primary btn-sm\"");

WriteLiteral(" />\r\n");

            
            #line 95 "..\..\Views\Permission\UserBasedSecurity.cshtml"
            }
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>\r\n<script>\r\n    $(\"form\").submit(function () {\r\n        $(\'td[n" +
"ame=Hierarchy]\').each(function (e) {\r\n            catname = $(this).attr(\'id\');\r" +
"\n            var firstInput = $(\"#\" + catname).find(\'input[type=text]\').filter(\'" +
":visible:first\');\r\n            var firstcheckbox = $(\"#\" + catname).find(\'input[" +
"type=checkbox]\').filter(\':visible:first\');\r\n            var txtid = firstInput.a" +
"ttr(\'id\');\r\n            var chkid = firstcheckbox.attr(\'id\');\r\n            var c" +
"hecked = \"false\";\r\n            if ($(\"input[id=\'\" + chkid + \"\']:checked\").length" +
" == \'1\')\r\n                checked = \"true\";\r\n            $(\"#\" + txtid).val(chec" +
"ked);\r\n        });\r\n        $(\'td[name=Roles]\').each(function (e) {\r\n           " +
" catname = $(this).attr(\'id\');\r\n            var firstInput = $(\"#\" + catname).fi" +
"nd(\'input[type=text],input[type=password],input[type=radio],input[type=checkbox]" +
",textarea,select\').filter(\':visible:first\');\r\n            var firstButton = $(\"#" +
"\" + catname).find(\'button\').filter(\':first\');\r\n            var txtid = firstInpu" +
"t.attr(\'id\');\r\n            var btntitle = firstButton.attr(\'title\');\r\n          " +
"  if (firstButton != null) {\r\n                if (btntitle != \'None selected\')\r\n" +
"                    $(\"#\" + txtid).val(btntitle);\r\n                else\r\n       " +
"             $(\"#\" + txtid).val(\'\');\r\n            }\r\n        });\r\n        if ($(" +
"this).find(\'.input-validation-error\').length == 0) {\r\n            $(this).find(\'" +
":submit\').attr(\'disabled\', \'disabled\');\r\n        }\r\n    });\r\n</script>\r\n<script");

WriteAttribute("src", Tuple.Create(" src=\"", 6793), Tuple.Create("\"", 6857)
            
            #line 130 "..\..\Views\Permission\UserBasedSecurity.cshtml"
, Tuple.Create(Tuple.Create("", 6799), Tuple.Create<System.Object, System.Int32>(Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")
            
            #line default
            #line hidden
, 6799), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n<script>\r\n    $(function () {\r\n        $(\"#EntityList option\").each(f" +
"unction (i, e) {\r\n            $(\"<input type=\'radio\' name=\'r\' >\" + $(this).text(" +
") + \" </input>\")\r\n            .attr(\"value\", $(this).val())\r\n            .attr(\"" +
"checked\", $(this).attr(\"selected\") == \"selected\")\r\n            .click(function (" +
") {\r\n                $(\"#EntityList\").val($(this).val());\r\n                $(\'#E" +
"ntityList\').trigger(\'change\');\r\n            })\r\n            .appendTo(\"#r\");\r\n  " +
"      });\r\n        $(\"#EntityList\").change(function () {\r\n            $(\"input[n" +
"ame=\'r\'][value=\'\" + this.value + \"\']\").attr(\"checked\", \"checked\");\r\n        });\r" +
"\n    });\r\n    $(document).ready(function () {\r\n        $(\'td[name=Hierarchy]\').e" +
"ach(function (e) {\r\n            catname = $(this).attr(\'id\');\r\n            var f" +
"irstInput = $(\"#\" + catname).find(\'input[type=text]\');\r\n            if (firstInp" +
"ut != null && firstInput != undefined) {\r\n                var firstcheckbox = $(" +
"\"#\" + catname).find(\'input[type=checkbox]\').filter(\':visible:first\');\r\n         " +
"       var txtid = firstInput.attr(\'id\');\r\n                var chkid = firstchec" +
"kbox.attr(\'id\');\r\n                if (firstInput != null && txtid != undefined) " +
"{\r\n                    var txtvalue = $(\"#\" + txtid).attr(\'value\');\r\n           " +
"         if (txtvalue.length > 0) {\r\n                        if (txtvalue == \"tr" +
"ue\")\r\n                            firstcheckbox.attr(\"checked\", \"checked\");\r\n   " +
"                 }\r\n                }\r\n            }\r\n        });\r\n        $(\'se" +
"lect[name=Roles]\').multiselect({\r\n            buttonWidth: \'100%\'\r\n        });\r\n" +
"        $(\'td[name=Roles]\').each(function (e) {\r\n            catname = $(this).a" +
"ttr(\'id\');\r\n            var firstInput = $(\"#\" + catname).find(\'input[type=text]" +
",input[type=password],input[type=radio],input[type=checkbox],textarea,select\').f" +
"ilter(\':visible:first\');\r\n            var firstButton = $(\"#\" + catname).find(\'b" +
"utton\').filter(\':first\');\r\n            var firstSelect = $(\"#\" + catname).find(\'" +
"select\').filter(\':first\');\r\n            var txtid = firstInput.attr(\'id\');\r\n    " +
"        var selectid = firstSelect.attr(\'id\');\r\n            var btntitle = first" +
"Button.attr(\'title\');\r\n            if (firstInput != null) {\r\n                va" +
"r txtvalue = $(\"#\" + txtid).attr(\'value\');\r\n                if (txtvalue.length " +
"> 0) {\r\n                    var separated = txtvalue.split(\",\");\r\n              " +
"      for (var i = 0, length = separated.length; i < length; i++) {\r\n           " +
"             var chunk = $.trim(separated[i]);\r\n                        var ele " +
"= document.getElementById(selectid);\r\n                        for (var o = 0; o " +
"< ele.options.length; o++) {\r\n                            if ($.trim(ele.options" +
"[o].value) == chunk) {\r\n                                ele.options[o].selected " +
"= true;\r\n                            }\r\n                        }\r\n             " +
"       } $(\"#\" + selectid).multiselect(\'refresh\');\r\n                }\r\n         " +
"   }\r\n        });\r\n    });\r\n</script>");

        }
    }
}
#pragma warning restore 1591
