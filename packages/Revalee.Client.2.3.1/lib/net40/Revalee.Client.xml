<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Revalee.Client</name>
    </assembly>
    <members>
        <member name="T:Revalee.Client.RevaleeRegistrar">
            <summary>
            Helper methods to interface with the Revalee service host.
            </summary>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay asynchronously.
            </summary>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.String,System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay asynchronously.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.Uri,System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay asynchronously.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time asynchronously.
            </summary>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.String,System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time asynchronously.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallbackAsync(System.Uri,System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time asynchronously.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A System.Threading.Tasks.Task&lt;System.Guid&gt; and when complete, the result will be an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallbackAsync(System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback asynchronously.
            </summary>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>A System.Threading.Tasks.Task&lt;bool&gt; and when complete, the result will be true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallbackAsync(System.String,System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback asynchronously.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>A System.Threading.Tasks.Task&lt;bool&gt; and when complete, the result will be true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallbackAsync(System.Uri,System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback asynchronously.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>A System.Threading.Tasks.Task&lt;bool&gt; and when complete, the result will be true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay.
            </summary>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.String,System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.Uri,System.TimeSpan,System.Uri)">
            <summary>
            Schedules a callback after a specified delay.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackDelay">A <see cref="T:System.TimeSpan"/> that represents a time interval to delay the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time.
            </summary>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.String,System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ScheduleCallback(System.Uri,System.DateTimeOffset,System.Uri)">
            <summary>
            Schedules a callback at a specified time.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackTime">A <see cref="T:System.DateTimeOffset"/> that represents the scheduled moment of the callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A <see cref="T:System.Guid"/> that serves as an identifier for the successfully scheduled callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The callback request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallback(System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback.
            </summary>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallback(System.String,System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback.
            </summary>
            <param name="serviceHost">A DNS-style domain name or IP address for the Revalee service.</param>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.CancelCallback(System.Uri,System.Guid,System.Uri)">
            <summary>
            Cancels a previously scheduled callback.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackId">A <see cref="T:System.Guid"/> that was previously returned from a scheduled callback.</param>
            <param name="callbackUri">An absolute URL that matches the specified URL when originally scheduled.</param>
            <returns>true if the cancellation request was accepted, false if not</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceBaseUri" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
            <exception cref="T:Revalee.Client.RevaleeRequestException">The cancellation request failed during communication with the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRegistrar.ValidateCallback(System.Web.HttpRequestBase)">
            <summary>
            Validates an incoming callback to ensure that only specifically requested callbacks use this entry point.
            </summary>
            <param name="request">A System.Web.HttpRequestBase object representing the incoming callback.</param>
            <returns>true if the callback was originally requested by this same web application; false if not able to make that determination.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="request" /> is null.</exception>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.ActivationFailureEventArgs">
            <summary>
            Represents event arguments for a failure to activate the recurring task module.
            </summary>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.ActivationFailureEventArgs.#ctor(System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Revalee.Client.RecurringTasks.ActivationFailureEventArgs"/> class.
            </summary>
            <param name="failureCount">A <see cref="T:System.Int32"/> value representing the number of consecutive failures to activate.</param>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.ActivationFailureEventArgs.FailureCount">
            <summary>
            Gets the number of consecutive failures.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.RecurringTaskCallbackDetails">
            <summary>
            The details of a callback initiated by a recurring task.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.RecurringTaskCallbackDetails.CallbackId">
            <summary>
            Gets the <see cref="T:System.Guid" /> identifying this callback.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.RecurringTaskCallbackDetails.CallbackTime">
            <summary>
            Gets the scheduled <see cref="T:System.DateTimeOffset" /> of this callback.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.RecurringTaskCallbackDetails.CurrentServiceTime">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset" /> of the moment this callback was issued according to the Revalee service that issued the callback.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.IRecurringTask">
            <summary>
            Represents a recurring task.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IRecurringTask.Identifier">
            <summary>
            Gets the unique identifier of the scheduled task.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IRecurringTask.Periodicity">
            <summary>
            Gets the <see cref="T:Revalee.Client.RecurringTasks.PeriodicityType" /> of the scheduled task.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IRecurringTask.HourOffset">
            <summary>
            Gets the <see cref="T:System.Int32" /> value of the scheduled hour (0-23).
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IRecurringTask.MinuteOffset">
            <summary>
            Gets the <see cref="T:System.Int32" /> value of the scheduled minute (0-59).
            /// </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IRecurringTask.Url">
            <summary>
            Gets the <see cref="T:System.Uri" /> defining the target of the callback.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.DeactivationEventArgs">
            <summary>
            Represents event arguments for a deactivation of the recurring task module.
            </summary>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.DeactivationEventArgs.#ctor(Revalee.Client.RevaleeRequestException)">
            <summary>
            Creates an instance of the <see cref="T:Revalee.Client.RecurringTasks.DeactivationEventArgs"/> class.
            </summary>
            <param name="exception">A <see cref="T:Revalee.Client.RevaleeRequestException"/> that is the cause of the deactivation.</param>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.DeactivationEventArgs.Exception">
            <summary>
            Gets the <see cref="T:Revalee.Client.RevaleeRequestException"/> that caused the deactivation.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.IClockSource">
            <summary>
            Represents a time source used to schedule recurring tasks.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.IClockSource.Now">
            <summary>
            Gets the current <see cref="T:System.DateTimeOffset" /> to be used for scheduling callbacks.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.ITaskManifest">
            <summary>
            Represents a manifest with information on recurring tasks.
            </summary>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.ITaskManifest.AddDailyTask(System.Int32,System.Int32,System.Uri)">
            <summary>
            Creates a callback task with a daily recurrence.
            </summary>
            <param name="hour">A <see cref="T:System.Int32" /> value for the scheduled hour (0-23).</param>
            <param name="minute">A <see cref="T:System.Int32" /> value for the scheduled minute (0-59).</param>
            <param name="url">A <see cref="T:System.Uri" /> value defining the target of the callback.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hour" /> is not between 0 and 23.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minute" /> is not between 0 and 59.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="url" /> is not an absolute URL.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="url" /> contains an unsupported URL scheme.</exception>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.ITaskManifest.AddHourlyTask(System.Int32,System.Uri)">
            <summary>
            Creates a callback task with a daily recurrence.
            </summary>
            <param name="minute">A <see cref="T:System.Int32" /> value for the scheduled minute (0-59).</param>
            <param name="url">A <see cref="T:System.Uri" /> value defining the target of the callback.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minute" /> is not between 0 and 59.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="url" /> is not an absolute URL.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="url" /> contains an unsupported URL scheme.</exception>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.ITaskManifest.RemoveTask(System.String)">
            <summary>
            Removes a recurring callback task.
            </summary>
            <param name="identifier">The <see cref="P:Revalee.Client.RecurringTasks.IRecurringTask.Identifier"/> of the task to be removed.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="identifier"/> is null.</exception>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.ITaskManifest.IsActive">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating the activation state of the recurring task module.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.ITaskManifest.IsEmpty">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating that there are no recurring tasks defined.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.ITaskManifest.CallbackBaseUri">
            <summary>
            Gets or sets the <see cref="T:System.Uri" /> defining the base URL for callbacks.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.ITaskManifest.Tasks">
            <summary>
            Gets the enumeration of defined <see cref="T:Revalee.Client.RecurringTasks.IRecurringTask" /> objects.
            </summary>
        </member>
        <member name="E:Revalee.Client.RecurringTasks.ITaskManifest.Activated">
            <summary>
            An event handler triggered when the recurring task module is activated.
            </summary>
        </member>
        <member name="E:Revalee.Client.RecurringTasks.ITaskManifest.Deactivated">
            <summary>
            An event handler triggered when the recurring task module is deactivated.
            </summary>
        </member>
        <member name="E:Revalee.Client.RecurringTasks.ITaskManifest.ActivationFailed">
            <summary>
            An event handler triggered when an attempt to activate fails.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.PeriodicityType">
            <summary>
            Represents the periodicity of a recurring task.
            </summary>
        </member>
        <member name="F:Revalee.Client.RecurringTasks.PeriodicityType.Hourly">
            <summary>
            An hourly recurrence schedule.
            </summary>
        </member>
        <member name="F:Revalee.Client.RecurringTasks.PeriodicityType.Daily">
            <summary>
            A daily recurrence schedule.
            </summary>
        </member>
        <member name="T:Revalee.Client.RecurringTasks.RecurringTaskModule">
            <summary>
            HttpModule that schedules and intercepts recurring tasks.
            </summary>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.RecurringTaskModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the recurring tasks module.
            </summary>
            <param name="context">The currently executing <see cref="T:System.Web.HttpApplication" /> instance.</param>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.RecurringTaskModule.Restart">
            <summary>
            Reactivates the <see cref="T:Revalee.Client.RecurringTasks.RecurringTaskModule" /> following an unintended deactivation.
            </summary>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.RecurringTaskModule.GetManifest">
            <summary>
            Retrieves the current <see cref="T:Revalee.Client.RecurringTasks.ITaskManifest" /> instance that manages recurring tasks.
            </summary>
            <returns>An <see cref="T:Revalee.Client.RecurringTasks.ITaskManifest" /> instance for the current <see cref="T:System.Web.HttpApplication" />.</returns>
        </member>
        <member name="M:Revalee.Client.RecurringTasks.RecurringTaskModule.Dispose">
            <summary>
            Disposes the module.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.RecurringTaskModule.CallbackDetails">
            <summary>
            Gets a <see cref="T:Revalee.Client.RecurringTasks.RecurringTaskCallbackDetails" /> instance if the the current request is the result of a recurring callback.
            </summary>
        </member>
        <member name="P:Revalee.Client.RecurringTasks.RecurringTaskModule.IsProcessingRecurringCallback">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating that the current request is the result of a recurring callback.
            </summary>
        </member>
        <member name="T:Revalee.Client.RevaleeClientSettings">
            <summary>Represents the configured values used to make callback requests.</summary>
        </member>
        <member name="P:Revalee.Client.RevaleeClientSettings.RequestTimeout">
            <summary>Gets or sets the timeout of callback requests in milliseconds, a value of null indicates a default timeout period.</summary>
            <returns>The timeout of callback requests in milliseconds, a value of null indicates a default timeout period.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" /> cannot be negative.</exception>
        </member>
        <member name="P:Revalee.Client.RevaleeClientSettings.ServiceBaseUri">
            <summary>Gets or sets the service base Uri used to make callback requests.</summary>
            <returns>The service base Uri used to make callback requests.</returns>
        </member>
        <member name="T:Revalee.Client.Validation.RequestValidator">
            <summary>
            Helper methods to cryptographically ensure that callbacks are only processed when legitimately requested by this application.
            </summary>
        </member>
        <member name="M:Revalee.Client.Validation.RequestValidator.Issue(System.Uri)">
            <summary>
            Creates a cipher to be used to validate legitimate callbacks.
            </summary>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>A cipher value for this callback.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="callbackUri" /> is null.</exception>
        </member>
        <member name="M:Revalee.Client.Validation.RequestValidator.Validate(System.String,System.Guid,System.Uri)">
            <summary>
            Validates the cipher to ensure it represents a legitimately requested callback.
            </summary>
            <param name="authorizationHeaderValue">A cipher value for this callback.</param>
            <param name="callbackId">A <see cref="T:System.Guid"/> that serves as an identifier for the scheduled callback.</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <returns>true if the cipher is valid, false if not.</returns>
        </member>
        <member name="T:Revalee.Client.RevaleeRequestException">
            <summary>
            Represents errors that occur during the processing of a Revalee service request.
            </summary>
        </member>
        <member name="M:Revalee.Client.RevaleeRequestException.#ctor(System.Uri,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Revalee.Client.RevaleeRequestException"/> class.
            </summary>
            <param name="serviceBaseUri">A <see cref="T:System.Uri"/> representing the scheme, host, and port for the Revalee service (example: http://localhost:46200).</param>
            <param name="callbackUri">An absolute <see cref="T:System.Uri"/> that will be requested on the callback.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Revalee.Client.RevaleeRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Revalee.Client.RevaleeRequestException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="info" /> is null.</exception>
        </member>
        <member name="M:Revalee.Client.RevaleeRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="info" /> is null.</exception>
        </member>
        <member name="P:Revalee.Client.RevaleeRequestException.ServiceBaseUri">
            <summary>Gets the service base Uri used to make this Revalee service request.</summary>
            <returns>The service base Uri used to make this Revalee service request.</returns>
        </member>
        <member name="P:Revalee.Client.RevaleeRequestException.CallbackUri">
            <summary>Gets the callback Uri used to make this Revalee service request.</summary>
            <returns>The callback Uri used to make this Revalee service request.</returns>
        </member>
        <member name="T:Revalee.Client.ServiceBaseUri">
            <summary>Creates a <see cref="T:System.Uri"/> for use as the base Uri for the Revalee service.</summary>
        </member>
        <member name="M:Revalee.Client.ServiceBaseUri.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Revalee.Client.ServiceBaseUri" /> class with the configured identifier.</summary>
            <exception cref="T:System.UriFormatException">The configured value is not valid as a service base Uri for the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.ServiceBaseUri.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Revalee.Client.ServiceBaseUri" /> class with the specified identifier.</summary>
            <param name="serviceHost">A DNS-style domain name, IP address, or full URL for the Revalee service.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> is null.</exception>
            <exception cref="T:System.UriFormatException"><paramref name="serviceHost" /> is not valid as a service base Uri for the Revalee service.</exception>
        </member>
        <member name="M:Revalee.Client.ServiceBaseUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of <see cref="T:Revalee.Client.ServiceBaseUri" /> class from the specified instances of <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.
            </summary>
            <param name="info">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:Revalee.Client.ServiceBaseUri" /> instance.</param>
            <param name="context">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:Revalee.Client.ServiceBaseUri" /> instance.</param>
        </member>
        <member name="M:Revalee.Client.ServiceBaseUri.TryCreate(System.String,Revalee.Client.ServiceBaseUri@)">
            <summary>Creates a new instance of the <see cref="T:Revalee.Client.ServiceBaseUri" /> class with the specified identifier.</summary>
            <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:Revalee.Client.ServiceBaseUri" /> was successfully created; otherwise, false.</returns>
            <param name="serviceHost">A DNS-style domain name, IP address, or full URL for the Revalee service.</param>
            <param name="uri">When this method returns, contains the constructed <see cref="T:Revalee.Client.ServiceBaseUri" />.</param>
        </member>
    </members>
</doc>
